{"id":"938ba7ff3146e97f5a490c18cbdaa0aa","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n            // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2²⁵⁶ + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 exp;\n        unchecked {\n            exp = 128 * SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 64 * SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 32 * SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 16 * SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 8 * SafeCast.toUint(value > (1 << 8) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 4 * SafeCast.toUint(value > (1 << 4) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 2 * SafeCast.toUint(value > (1 << 2) - 1);\n            value >>= exp;\n            result += exp;\n\n            result += SafeCast.toUint(value > 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 isGt;\n        unchecked {\n            isGt = SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= isGt * 128;\n            result += isGt * 16;\n\n            isGt = SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= isGt * 64;\n            result += isGt * 8;\n\n            isGt = SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= isGt * 32;\n            result += isGt * 4;\n\n            isGt = SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= isGt * 16;\n            result += isGt * 2;\n\n            result += SafeCast.toUint(value > (1 << 8) - 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SafeCast} from \"./math/SafeCast.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    using SafeCast for *;\n\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev The string being parsed contains characters that are not in scope of the given base.\n     */\n    error StringsInvalidChar();\n\n    /**\n     * @dev The string being parsed is not a properly formatted address.\n     */\n    error StringsInvalidAddressFormat();\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input) internal pure returns (uint256) {\n        return parseUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseUint} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        uint256 result = 0;\n        for (uint256 i = begin; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 9) return (false, 0);\n            result *= 10;\n            result += chr;\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `int256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input) internal pure returns (int256) {\n        return parseInt(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input, uint256 begin, uint256 end) internal pure returns (int256) {\n        (bool success, int256 value) = tryParseInt(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n     * the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(string memory input) internal pure returns (bool success, int256 value) {\n        return _tryParseIntUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    uint256 private constant ABS_MIN_INT256 = 2 ** 255;\n\n    /**\n     * @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character or if the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, int256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseIntUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseInt} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseIntUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, int256 value) {\n        bytes memory buffer = bytes(input);\n\n        // Check presence of a negative sign.\n        bytes1 sign = begin == end ? bytes1(0) : bytes1(_unsafeReadBytesOffset(buffer, begin)); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        bool positiveSign = sign == bytes1(\"+\");\n        bool negativeSign = sign == bytes1(\"-\");\n        uint256 offset = (positiveSign || negativeSign).toUint();\n\n        (bool absSuccess, uint256 absValue) = tryParseUint(input, begin + offset, end);\n\n        if (absSuccess && absValue < ABS_MIN_INT256) {\n            return (true, negativeSign ? -int256(absValue) : int256(absValue));\n        } else if (absSuccess && negativeSign && absValue == ABS_MIN_INT256) {\n            return (true, type(int256).min);\n        } else return (false, 0);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input) internal pure returns (uint256) {\n        return parseHexUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseHexUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseHexUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n     * invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseHexUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseHexUint} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseHexUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        // skip 0x prefix if present\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(buffer, begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 offset = hasPrefix.toUint() * 2;\n\n        uint256 result = 0;\n        for (uint256 i = begin + offset; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 15) return (false, 0);\n            result *= 16;\n            unchecked {\n                // Multiplying by 16 is equivalent to a shift of 4 bits (with additional overflow check).\n                // This guaratees that adding a value < 16 will not cause an overflow, hence the unchecked.\n                result += chr;\n            }\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input) internal pure returns (address) {\n        return parseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input, uint256 begin, uint256 end) internal pure returns (address) {\n        (bool success, address value) = tryParseAddress(input, begin, end);\n        if (!success) revert StringsInvalidAddressFormat();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n     * formatted address. See {parseAddress} requirements.\n     */\n    function tryParseAddress(string memory input) internal pure returns (bool success, address value) {\n        return tryParseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n     * formatted address. See {parseAddress} requirements.\n     */\n    function tryParseAddress(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, address value) {\n        if (end > bytes(input).length || begin > end) return (false, address(0));\n\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(bytes(input), begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 expectedLength = 40 + hasPrefix.toUint() * 2;\n\n        // check that input is the correct length\n        if (end - begin == expectedLength) {\n            // length guarantees that this does not overflow, and value is at most type(uint160).max\n            (bool s, uint256 v) = _tryParseHexUintUncheckedBounds(input, begin, end);\n            return (s, address(uint160(v)));\n        } else {\n            return (false, address(0));\n        }\n    }\n\n    function _tryParseChr(bytes1 chr) private pure returns (uint8) {\n        uint8 value = uint8(chr);\n\n        // Try to parse `chr`:\n        // - Case 1: [0-9]\n        // - Case 2: [a-f]\n        // - Case 3: [A-F]\n        // - otherwise not supported\n        unchecked {\n            if (value > 47 && value < 58) value -= 48;\n            else if (value > 96 && value < 103) value -= 87;\n            else if (value > 64 && value < 71) value -= 55;\n            else return type(uint8).max;\n        }\n\n        return value;\n    }\n\n    /**\n     * @dev Reads a bytes32 from a bytes array without bounds checking.\n     *\n     * NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n     * assembly block as such would prevent some optimizations.\n     */\n    function _unsafeReadBytesOffset(bytes memory buffer, uint256 offset) private pure returns (bytes32 value) {\n        // This is not memory safe in the general case, but all calls to this private function are within bounds.\n        assembly (\"memory-safe\") {\n            value := mload(add(buffer, add(0x20, offset)))\n        }\n    }\n}\n"},"contracts/Factory.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"./Pool.sol\";\n\ncontract Factory {\n    // 使用排序后的代币数组哈希作为键\n    mapping(bytes32 => address) public pools;\n    address[] public supportedTokens;\n    \n    event PoolCreated(\n        address[] tokens\n    );\n\n    // 创建任意代币数量的流动性池\n    function createPool(address[] memory tokens) external returns (address) {\n        require(tokens.length >= 2, \"At least 2 tokens\");\n        require(_allUnique(tokens), \"Duplicate tokens\");\n        require(_noZeroAddress(tokens), \"Zero address\");\n\n        // 生成排序后的代币数组\n        address[] memory sortedTokens = _sortTokens(tokens);\n        \n        // 生成唯一哈希键\n        bytes32 poolKey = keccak256(abi.encodePacked(sortedTokens));\n        require(pools[poolKey] == address(0), \"Pool exists\");\n        // 创建新池\n        address pool = address(new Pool(sortedTokens));\n        pools[poolKey] = pool;\n\n        // 维护支持的代币列表\n        _updateSupportedTokens(sortedTokens);\n\n        emit PoolCreated(tokens);\n        return pool;\n    }\n\n    // 获取池地址（任意顺序传入代币）\n    function getPool(address[] memory tokens) external view returns (address) {\n        bytes32 key = getPoolKey(tokens);\n        return pools[key];\n    }\n\n    // 获取排序后的池哈希键\n    function getPoolKey(address[] memory tokens) public view returns (bytes32) {\n        return keccak256(abi.encodePacked(_sortTokens(tokens)));\n    }\n\n    // 内部函数：代币排序（使用插入排序）\n    function _sortTokens(address[] memory tokens) internal pure returns (address[] memory) {\n        address[] memory sorted = _copyArray(tokens);\n        \n        for (uint i = 1; i < sorted.length; i++) {\n            address key = sorted[i];\n            uint j = i;\n            while (j > 0 && uint160(sorted[j-1]) > uint160(key)) {\n                sorted[j] = sorted[j-1];\n                j--;\n            }\n            sorted[j] = key;\n        }\n        return sorted;\n    }\n\n    // 内部函数：更新支持的代币列表\n    function _updateSupportedTokens(address[] memory newTokens) internal {\n        for (uint i = 0; i < newTokens.length; i++) {\n            if (!_isTokenSupported(newTokens[i])) {\n                supportedTokens.push(newTokens[i]);\n            }\n        }\n    }\n\n    // 辅助函数：复制数组\n    function _copyArray(address[] memory arr) internal pure returns (address[] memory) {\n        address[] memory copy = new address[](arr.length);\n        for (uint i = 0; i < arr.length; i++) {\n            copy[i] = arr[i];\n        }\n        return copy;\n    }\n\n    // 检查代币是否已支持\n    function _isTokenSupported(address token) internal view returns (bool) {\n        for (uint i = 0; i < supportedTokens.length; i++) {\n            if (supportedTokens[i] == token) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    // 检查地址数组是否全非零（保持原有实现）\n    function _noZeroAddress(address[] memory tokens) internal pure returns (bool) {\n        for (uint i = 0; i < tokens.length; i++) {\n            if (tokens[i] == address(0)) return false;\n        }\n        return true;\n    }\n\n    // 检查地址数组是否全唯一（优化版）\n    function _allUnique(address[] memory tokens) internal pure returns (bool) {\n        if (tokens.length <= 1) return true;\n        for (uint i = 0; i < tokens.length - 1; i++) {\n            for (uint j = i + 1; j < tokens.length; j++) {\n                if (tokens[i] == tokens[j]) return false;\n            }\n        }\n        return true;\n    }\n}"},"contracts/LPToken.sol":{"content":"// SPDX-License-Identifier: MIT\r\n//LPToken合约用于创建LP代币\r\n//LP代币是用于表示流动性池中代币份额的代币\r\n//该合约继承自OpenZeppelin的ERC20合约\r\n//ERC20是ERC20标准接口，定义了ERC20代币的基本功能\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\n\r\ncontract LPToken is ERC20 {\r\n    constructor(string memory name, string memory symbol) ERC20(name, symbol) {}\r\n    //初始供应量为0，无须铸造（_mint函数)\r\n}"},"contracts/NewToken.sol":{"content":"// SPDX-License-Identifier: MIT\r\n//用于创建新的ERC20代币\r\n//该合约继承自OpenZeppelin的ERC20合约\r\n//ERC20是ERC20标准接口，定义了ERC20代币的基本功能\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\n\r\ncontract NewToken is ERC20 {\r\n\r\n    constructor(string memory name, string memory symbol) ERC20(name, symbol) {\r\n        _mint(msg.sender, 1000000 * 10**decimals()); //_mint函数用于铸造代币；\r\n        //msg.sender是当前调用合约的账户地址\r\n        //1000000是代币的初始供应量\r\n        //10**decimals()是将代币的小数位数设置为18\r\n    }\r\n    \r\n}"},"contracts/Pool.sol":{"content":"// SPDX-License-Identifier: MIT\r\n//Pool合约用于创建流动性池\r\n//流动性池是用于存储和交换三种ERC20代币的合约\r\n//该合约继承自LPToken合约\r\n//LPToken是用于表示流动性池中代币份额的代币\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\r\nimport \"./LPToken.sol\";\r\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\r\n\r\ncontract Pool is LPToken, ReentrancyGuard {\r\n\r\n    // token 对象\r\n    IERC20[] public  i_tokens;\r\n    // token 地址\r\n    address[] public  i_tokens_addresses;\r\n    // token map（k: address -> v: index in i_tokens）\r\n    mapping(address => uint256) public i_tokens_map;\r\n\r\n    // 在这里添加 factory 变量声明\r\n    address public  factory;\r\n\r\n    //初始比例为1:2:3，即1个token0需要2个token1和3个token2\r\n    //可以修改初始比例\r\n    // todo & fixme:@infinite-zhou, 更改为可变比率\r\n    // uint256 constant INITIAL_RATIO_1 = 2; //token0:token1 = 1:2\r\n    // uint256 constant INITIAL_RATIO_2 = 3; //token0:token2 = 1:3\r\n    uint256[] public  INITIAL_RATIO = [1, 2,3];\r\n    \r\n    //tokenBalances是一个映射，用于存储每个代币的余额\r\n    //key是代币地址，value是代币余额\r\n    mapping(address => uint256) public tokenBalances;\r\n    \r\n\r\n    //事件用于记录流动性池中的代币添加和交换操作\r\n    event AddedLiquidity(\r\n        address[] token_add,\r\n        uint256[] amounts\r\n    );\r\n\r\n    event WithdrawLiquidity(\r\n        address[] token_add,\r\n        uint256[] amounts\r\n    );\r\n\r\n    event Swapped(\r\n        address tokenIn,\r\n        uint256 indexed amountIn,\r\n        address tokenOut,\r\n        uint256 indexed amountOut\r\n    );\r\n\r\n    //构造函数，用于初始化流动性池\r\n    //token0, token1和token2是流动性池中的三种代币\r\n    //LPToken是用于表示流动性池中代币份额的代币\r\n    constructor(address[] memory tokens_add) LPToken(\"LPToken\", \"LPT\") {\r\n        factory = msg.sender; // 记录创建者（工厂合约）地址\r\n        uint256 length = tokens_add.length;\r\n        i_tokens = new IERC20[](length);\r\n        i_tokens_addresses = new address[](length);\r\n\r\n        for (uint256 i = 0; i < length; i++) {\r\n            \r\n            address token_add = tokens_add[i];\r\n            \r\n            // 或者调用代币合约\r\n            i_tokens[i] = (IERC20(token_add));\r\n            i_tokens_addresses[i] = (token_add);\r\n            i_tokens_map[token_add] = i;\r\n            tokenBalances[token_add] = 0;\r\n        }\r\n    }\r\n\r\n    //计算代币兑换的输出数量\r\n    //tokenIn是输入代币地址\r\n    //amountIn是输入代币数量\r\n    //tokenOut是输出代币地址\r\n    function getAmountOut(\r\n        address tokenIn,\r\n        uint256 amountIn,\r\n        address tokenOut\r\n    ) public view returns (uint256) {\r\n        uint256 balanceOut = tokenBalances[tokenOut];//输出代币当前的余额   \r\n        uint256 balanceIn = tokenBalances[tokenIn];//输入兑换的币当前的余额\r\n        \r\n        // 对于三种代币的流动性池，我们仍然使用恒定乘积公式，但只针对交易涉及的两种代币\r\n        // 保持交易对的交易逻辑不变\r\n        uint256 amountOut = (balanceOut * amountIn) / (balanceIn + amountIn);\r\n\r\n        return amountOut;\r\n    }\r\n\r\n    function swap(\r\n        address tokenIn,\r\n        uint256 amountIn,\r\n        address tokenOut\r\n    ) public nonReentrant {\r\n        // input validity checks\r\n        require(tokenIn != tokenOut, \"Same tokens\");\r\n        require(i_tokens_map[tokenIn] != 0, \"tokenIn not in i_tokens_map\");\r\n        require(i_tokens_map[tokenOut] != 0, \"tokenOut not in i_tokens_map\");\r\n        require(amountIn > 0, \"Zero amount\");\r\n\r\n        //getAmountOut函数计算代币兑换的输出数量\r\n        uint256 amountOut = getAmountOut(tokenIn, amountIn, tokenOut);\r\n\r\n        // swapping tokens\r\n        //msg.sender是当前调用合约的账户地址\r\n        //require函数用于检查代币转移是否成功\r\n        require(\r\n            IERC20(tokenIn).transferFrom(msg.sender, address(this), amountIn),\r\n            \"Swap Failed\"\r\n        );\r\n        require(\r\n            IERC20(tokenOut).transfer(msg.sender, amountOut),\r\n            \"Swap Failed\"\r\n        );\r\n\r\n        // update pool balances\r\n        tokenBalances[tokenIn] += amountIn;\r\n        tokenBalances[tokenOut] -= amountOut;\r\n        //emit事件，用于记录代币交换操作\r\n        emit Swapped(tokenIn, amountIn, tokenOut, amountOut);\r\n    }\r\n\r\n    //计算添加流动性所需的token1和token2数量\r\n    //amount0是添加的token0数量\r\n    function getRequiredAmounts(uint256 amount0) public view returns (uint256[] memory) {\r\n        \r\n        // todo: infinite-zhou 改为根据数组\r\n        \r\n        uint256 length = i_tokens_addresses.length;\r\n        uint256[] memory return_amount = new uint256[](length);\r\n        uint256 balance0 = tokenBalances[i_tokens_addresses[0]];\r\n\r\n        for (uint256 i = 1; i < length; i++) {\r\n            \r\n            address token_add = i_tokens_addresses[i];\r\n            uint256 balan = tokenBalances[token_add];\r\n            uint256 amount;\r\n            if (balan == 0) {\r\n                amount = amount0 * INITIAL_RATIO[i];\r\n            }\r\n            else{\r\n                amount = (amount0 *balance0 ) /  balan;\r\n            }\r\n            return_amount[i] = amount;\r\n        }\r\n        return_amount[0] = amount0;\r\n        return return_amount;\r\n\r\n    }\r\n\r\n    function addLiquidity(address[] memory token_add, uint256[] memory amounts) public nonReentrant {\r\n        require( token_add.length == amounts.length, \"the lens of amount and token_add should be equal\");\r\n\r\n        uint256 amountLP;\r\n        //totalsupply()是LPToken的总供应量，ERC20标准接口\r\n        // todo: @infinite-zhou 搞清楚这里的amountLP究竟是多少\r\n        if (totalSupply() > 0) {\r\n            amountLP =\r\n                (amounts[0] * totalSupply()) /\r\n                tokenBalances[i_tokens_addresses[0]] ;\r\n        } else {\r\n            //首次添加流动性，amountLP等于amount0\r\n            amountLP = amounts[0];\r\n        }\r\n        _mint(msg.sender, amountLP);//铸造LP代币\r\n        \r\n        uint256 length = token_add.length;\r\n        for (uint256 i = 0; i < length; i++) {\r\n            \r\n            address i_token_addr = token_add[i];\r\n            uint index = i_tokens_map[i_token_addr];\r\n            IERC20 i_token = i_tokens[index];\r\n\r\n            require(\r\n                i_token.transferFrom(msg.sender, address(this), amounts[i]),\r\n                \"Transfer token0 failed\"\r\n            );\r\n            tokenBalances[i_token_addr] += amounts[i];\r\n        }\r\n\r\n        emit AddedLiquidity(\r\n            token_add, amounts\r\n        );\r\n    }\r\n\r\n    // function to withdraw liquidity\r\n    //销毁LP代币，并转移代币\r\n    function withdrawingliquidity(address[] memory token_add, uint256[] memory amounts) public {\r\n        require( token_add.length == amounts.length, \"the lens of amount and token_add should be equal\");\r\n\r\n        uint256 amountLP;\r\n        //totalsupply()是LPToken的总供应量，ERC20标准接口\r\n        // todo: @infinite-zhou 搞清楚这里的amountLP究竟是多少\r\n        if (totalSupply() > 0) {\r\n            amountLP =\r\n                (amounts[0] * totalSupply()) /\r\n                tokenBalances[i_tokens_addresses[0]] ;\r\n        } else {\r\n            //首次添加流动性，amountLP等于amount0\r\n            amountLP = amounts[0];\r\n        }\r\n        _burn(msg.sender, amountLP);//铸造LP代币\r\n        \r\n        uint256 length = token_add.length;\r\n        for (uint256 i = 0; i < length; i++) {\r\n            \r\n            address i_token_addr = token_add[i];\r\n            uint index = i_tokens_map[i_token_addr];\r\n            IERC20 i_token = i_tokens[index];\r\n\r\n            require(\r\n                i_token.transferFrom(msg.sender, address(this), amounts[i]),\r\n                \"Transfer token0 failed\"\r\n            );\r\n            tokenBalances[i_token_addr] -= amounts[i];\r\n        }\r\n\r\n        emit WithdrawLiquidity(\r\n            token_add,\r\n            amounts\r\n        );\r\n    }\r\n\r\n    //getReserves函数返回池中代币的余额和LPToken的总供应量\r\n    // function getReserves()\r\n    //     public\r\n    //     view\r\n    //     returns (uint256, uint256, uint256, uint256)\r\n    // {\r\n    //     return (\r\n    //         i_token0.balanceOf(address(this)),\r\n    //         i_token1.balanceOf(address(this)),\r\n    //         i_token2.balanceOf(address(this)),\r\n    //         totalSupply()\r\n    //     );\r\n    // }\r\n}\r\n"},"contracts/TestToken.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\ncontract TestToken is ERC20 {\n    constructor(string memory name, string memory symbol) ERC20(name, symbol) {}\n\n    function mint(address to, uint256 amount) public {\n        _mint(to, amount);\n    }\n}"}},"settings":{"optimizer":{"enabled":true,"runs":200},"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"errors":[{"component":"general","errorCode":"2018","formattedMessage":"Warning: Function state mutability can be restricted to pure\n  --> contracts/Factory.sol:45:5:\n   |\n45 |     function getPoolKey(address[] memory tokens) public view returns (bytes32) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Function state mutability can be restricted to pure","severity":"warning","sourceLocation":{"end":1529,"file":"contracts/Factory.sol","start":1382},"type":"Warning"}],"sources":{"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[136],"IERC20Errors":[41],"IERC721Errors":[89]},"id":137,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:0"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"138:141:0","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":41,"linearizedBaseContracts":[41],"name":"IERC20Errors","nameLocation":"290:12:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"309:309:0","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":11,"name":"ERC20InsufficientBalance","nameLocation":"629:24:0","nodeType":"ErrorDefinition","parameters":{"id":10,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5,"mutability":"mutable","name":"sender","nameLocation":"662:6:0","nodeType":"VariableDeclaration","scope":11,"src":"654:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7,"mutability":"mutable","name":"balance","nameLocation":"678:7:0","nodeType":"VariableDeclaration","scope":11,"src":"670:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9,"mutability":"mutable","name":"needed","nameLocation":"695:6:0","nodeType":"VariableDeclaration","scope":11,"src":"687:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:0"},"src":"623:80:0"},{"documentation":{"id":12,"nodeType":"StructuredDocumentation","src":"709:152:0","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":16,"name":"ERC20InvalidSender","nameLocation":"872:18:0","nodeType":"ErrorDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14,"mutability":"mutable","name":"sender","nameLocation":"899:6:0","nodeType":"VariableDeclaration","scope":16,"src":"891:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:0"},"src":"866:41:0"},{"documentation":{"id":17,"nodeType":"StructuredDocumentation","src":"913:159:0","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":21,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:0","nodeType":"ErrorDefinition","parameters":{"id":20,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:0","nodeType":"VariableDeclaration","scope":21,"src":"1104:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:0"},"src":"1077:45:0"},{"documentation":{"id":22,"nodeType":"StructuredDocumentation","src":"1128:345:0","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":30,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:0","nodeType":"ErrorDefinition","parameters":{"id":29,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24,"mutability":"mutable","name":"spender","nameLocation":"1519:7:0","nodeType":"VariableDeclaration","scope":30,"src":"1511:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":23,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":26,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:0","nodeType":"VariableDeclaration","scope":30,"src":"1528:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":28,"mutability":"mutable","name":"needed","nameLocation":"1555:6:0","nodeType":"VariableDeclaration","scope":30,"src":"1547:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":27,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:0"},"src":"1478:85:0"},{"documentation":{"id":31,"nodeType":"StructuredDocumentation","src":"1569:174:0","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":35,"name":"ERC20InvalidApprover","nameLocation":"1754:20:0","nodeType":"ErrorDefinition","parameters":{"id":34,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33,"mutability":"mutable","name":"approver","nameLocation":"1783:8:0","nodeType":"VariableDeclaration","scope":35,"src":"1775:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":32,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:0"},"src":"1748:45:0"},{"documentation":{"id":36,"nodeType":"StructuredDocumentation","src":"1799:195:0","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":40,"name":"ERC20InvalidSpender","nameLocation":"2005:19:0","nodeType":"ErrorDefinition","parameters":{"id":39,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38,"mutability":"mutable","name":"spender","nameLocation":"2033:7:0","nodeType":"VariableDeclaration","scope":40,"src":"2025:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:0"},"src":"1999:43:0"}],"scope":137,"src":"280:1764:0","usedErrors":[11,16,21,30,35,40],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":42,"nodeType":"StructuredDocumentation","src":"2046:143:0","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":89,"linearizedBaseContracts":[89],"name":"IERC721Errors","nameLocation":"2200:13:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":43,"nodeType":"StructuredDocumentation","src":"2220:219:0","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":47,"name":"ERC721InvalidOwner","nameLocation":"2450:18:0","nodeType":"ErrorDefinition","parameters":{"id":46,"nodeType":"ParameterList","parameters":[{"constant":false,"id":45,"mutability":"mutable","name":"owner","nameLocation":"2477:5:0","nodeType":"VariableDeclaration","scope":47,"src":"2469:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":44,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:0"},"src":"2444:40:0"},{"documentation":{"id":48,"nodeType":"StructuredDocumentation","src":"2490:132:0","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":52,"name":"ERC721NonexistentToken","nameLocation":"2633:22:0","nodeType":"ErrorDefinition","parameters":{"id":51,"nodeType":"ParameterList","parameters":[{"constant":false,"id":50,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:0","nodeType":"VariableDeclaration","scope":52,"src":"2656:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":49,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:0"},"src":"2627:46:0"},{"documentation":{"id":53,"nodeType":"StructuredDocumentation","src":"2679:289:0","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":61,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:0","nodeType":"ErrorDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[{"constant":false,"id":55,"mutability":"mutable","name":"sender","nameLocation":"3008:6:0","nodeType":"VariableDeclaration","scope":61,"src":"3000:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":54,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":57,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:0","nodeType":"VariableDeclaration","scope":61,"src":"3016:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":56,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":59,"mutability":"mutable","name":"owner","nameLocation":"3041:5:0","nodeType":"VariableDeclaration","scope":61,"src":"3033:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":58,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:0"},"src":"2973:75:0"},{"documentation":{"id":62,"nodeType":"StructuredDocumentation","src":"3054:152:0","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":66,"name":"ERC721InvalidSender","nameLocation":"3217:19:0","nodeType":"ErrorDefinition","parameters":{"id":65,"nodeType":"ParameterList","parameters":[{"constant":false,"id":64,"mutability":"mutable","name":"sender","nameLocation":"3245:6:0","nodeType":"VariableDeclaration","scope":66,"src":"3237:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":63,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:0"},"src":"3211:42:0"},{"documentation":{"id":67,"nodeType":"StructuredDocumentation","src":"3259:159:0","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":71,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:0","nodeType":"ErrorDefinition","parameters":{"id":70,"nodeType":"ParameterList","parameters":[{"constant":false,"id":69,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:0","nodeType":"VariableDeclaration","scope":71,"src":"3451:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":68,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:0"},"src":"3423:46:0"},{"documentation":{"id":72,"nodeType":"StructuredDocumentation","src":"3475:247:0","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":78,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:0","nodeType":"ErrorDefinition","parameters":{"id":77,"nodeType":"ParameterList","parameters":[{"constant":false,"id":74,"mutability":"mutable","name":"operator","nameLocation":"3768:8:0","nodeType":"VariableDeclaration","scope":78,"src":"3760:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":73,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":76,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:0","nodeType":"VariableDeclaration","scope":78,"src":"3778:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":75,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:0"},"src":"3727:68:0"},{"documentation":{"id":79,"nodeType":"StructuredDocumentation","src":"3801:174:0","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":83,"name":"ERC721InvalidApprover","nameLocation":"3986:21:0","nodeType":"ErrorDefinition","parameters":{"id":82,"nodeType":"ParameterList","parameters":[{"constant":false,"id":81,"mutability":"mutable","name":"approver","nameLocation":"4016:8:0","nodeType":"VariableDeclaration","scope":83,"src":"4008:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":80,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:0"},"src":"3980:46:0"},{"documentation":{"id":84,"nodeType":"StructuredDocumentation","src":"4032:197:0","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":88,"name":"ERC721InvalidOperator","nameLocation":"4240:21:0","nodeType":"ErrorDefinition","parameters":{"id":87,"nodeType":"ParameterList","parameters":[{"constant":false,"id":86,"mutability":"mutable","name":"operator","nameLocation":"4270:8:0","nodeType":"VariableDeclaration","scope":88,"src":"4262:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":85,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:0"},"src":"4234:46:0"}],"scope":137,"src":"2190:2092:0","usedErrors":[47,52,61,66,71,78,83,88],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":90,"nodeType":"StructuredDocumentation","src":"4284:145:0","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":136,"linearizedBaseContracts":[136],"name":"IERC1155Errors","nameLocation":"4440:14:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":91,"nodeType":"StructuredDocumentation","src":"4461:361:0","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":101,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:0","nodeType":"ErrorDefinition","parameters":{"id":100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":93,"mutability":"mutable","name":"sender","nameLocation":"4868:6:0","nodeType":"VariableDeclaration","scope":101,"src":"4860:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":92,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":95,"mutability":"mutable","name":"balance","nameLocation":"4884:7:0","nodeType":"VariableDeclaration","scope":101,"src":"4876:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":94,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":97,"mutability":"mutable","name":"needed","nameLocation":"4901:6:0","nodeType":"VariableDeclaration","scope":101,"src":"4893:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":96,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":99,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:0","nodeType":"VariableDeclaration","scope":101,"src":"4909:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":98,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:0"},"src":"4827:99:0"},{"documentation":{"id":102,"nodeType":"StructuredDocumentation","src":"4932:152:0","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":106,"name":"ERC1155InvalidSender","nameLocation":"5095:20:0","nodeType":"ErrorDefinition","parameters":{"id":105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":104,"mutability":"mutable","name":"sender","nameLocation":"5124:6:0","nodeType":"VariableDeclaration","scope":106,"src":"5116:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":103,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:0"},"src":"5089:43:0"},{"documentation":{"id":107,"nodeType":"StructuredDocumentation","src":"5138:159:0","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":111,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:0","nodeType":"ErrorDefinition","parameters":{"id":110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":109,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:0","nodeType":"VariableDeclaration","scope":111,"src":"5331:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":108,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:0"},"src":"5302:47:0"},{"documentation":{"id":112,"nodeType":"StructuredDocumentation","src":"5355:256:0","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":118,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:0","nodeType":"ErrorDefinition","parameters":{"id":117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":114,"mutability":"mutable","name":"operator","nameLocation":"5659:8:0","nodeType":"VariableDeclaration","scope":118,"src":"5651:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":116,"mutability":"mutable","name":"owner","nameLocation":"5677:5:0","nodeType":"VariableDeclaration","scope":118,"src":"5669:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":115,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:0"},"src":"5616:68:0"},{"documentation":{"id":119,"nodeType":"StructuredDocumentation","src":"5690:174:0","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":123,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:0","nodeType":"ErrorDefinition","parameters":{"id":122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":121,"mutability":"mutable","name":"approver","nameLocation":"5906:8:0","nodeType":"VariableDeclaration","scope":123,"src":"5898:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":120,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:0"},"src":"5869:47:0"},{"documentation":{"id":124,"nodeType":"StructuredDocumentation","src":"5922:197:0","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":128,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:0","nodeType":"ErrorDefinition","parameters":{"id":127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":126,"mutability":"mutable","name":"operator","nameLocation":"6161:8:0","nodeType":"VariableDeclaration","scope":128,"src":"6153:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":125,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:0"},"src":"6124:47:0"},{"documentation":{"id":129,"nodeType":"StructuredDocumentation","src":"6177:280:0","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":135,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:0","nodeType":"ErrorDefinition","parameters":{"id":134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":131,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:0","nodeType":"VariableDeclaration","scope":135,"src":"6494:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":130,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":133,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:0","nodeType":"VariableDeclaration","scope":135,"src":"6513:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":132,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:0"},"src":"6462:73:0"}],"scope":137,"src":"4430:2107:0","usedErrors":[101,106,111,118,123,128,135],"usedEvents":[]}],"src":"112:6426:0"},"id":0},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[785],"ERC20":[651],"IERC20":[729],"IERC20Errors":[41],"IERC20Metadata":[755]},"id":652,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":138,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:1"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":140,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":652,"sourceUnit":730,"src":"131:36:1","symbolAliases":[{"foreign":{"id":139,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"139:6:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":142,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":652,"sourceUnit":756,"src":"168:63:1","symbolAliases":[{"foreign":{"id":141,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"176:14:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":144,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":652,"sourceUnit":786,"src":"232:48:1","symbolAliases":[{"foreign":{"id":143,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":785,"src":"240:7:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":146,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":652,"sourceUnit":137,"src":"281:65:1","symbolAliases":[{"foreign":{"id":145,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"289:12:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":148,"name":"Context","nameLocations":["1133:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":785,"src":"1133:7:1"},"id":149,"nodeType":"InheritanceSpecifier","src":"1133:7:1"},{"baseName":{"id":150,"name":"IERC20","nameLocations":["1142:6:1"],"nodeType":"IdentifierPath","referencedDeclaration":729,"src":"1142:6:1"},"id":151,"nodeType":"InheritanceSpecifier","src":"1142:6:1"},{"baseName":{"id":152,"name":"IERC20Metadata","nameLocations":["1150:14:1"],"nodeType":"IdentifierPath","referencedDeclaration":755,"src":"1150:14:1"},"id":153,"nodeType":"InheritanceSpecifier","src":"1150:14:1"},{"baseName":{"id":154,"name":"IERC20Errors","nameLocations":["1166:12:1"],"nodeType":"IdentifierPath","referencedDeclaration":41,"src":"1166:12:1"},"id":155,"nodeType":"InheritanceSpecifier","src":"1166:12:1"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":147,"nodeType":"StructuredDocumentation","src":"348:757:1","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."},"fullyImplemented":true,"id":651,"linearizedBaseContracts":[651,41,755,729,785],"name":"ERC20","nameLocation":"1124:5:1","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":159,"mutability":"mutable","name":"_balances","nameLocation":"1229:9:1","nodeType":"VariableDeclaration","scope":651,"src":"1185:53:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":158,"keyName":"account","keyNameLocation":"1201:7:1","keyType":{"id":156,"name":"address","nodeType":"ElementaryTypeName","src":"1193:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1185:35:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":157,"name":"uint256","nodeType":"ElementaryTypeName","src":"1212:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":165,"mutability":"mutable","name":"_allowances","nameLocation":"1317:11:1","nodeType":"VariableDeclaration","scope":651,"src":"1245:83:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":164,"keyName":"account","keyNameLocation":"1261:7:1","keyType":{"id":160,"name":"address","nodeType":"ElementaryTypeName","src":"1253:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1245:63:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":163,"keyName":"spender","keyNameLocation":"1288:7:1","keyType":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"1280:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1272:35:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":162,"name":"uint256","nodeType":"ElementaryTypeName","src":"1299:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":167,"mutability":"mutable","name":"_totalSupply","nameLocation":"1351:12:1","nodeType":"VariableDeclaration","scope":651,"src":"1335:28:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":166,"name":"uint256","nodeType":"ElementaryTypeName","src":"1335:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":169,"mutability":"mutable","name":"_name","nameLocation":"1385:5:1","nodeType":"VariableDeclaration","scope":651,"src":"1370:20:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":168,"name":"string","nodeType":"ElementaryTypeName","src":"1370:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":171,"mutability":"mutable","name":"_symbol","nameLocation":"1411:7:1","nodeType":"VariableDeclaration","scope":651,"src":"1396:22:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":170,"name":"string","nodeType":"ElementaryTypeName","src":"1396:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":187,"nodeType":"Block","src":"1657:57:1","statements":[{"expression":{"id":181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":179,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"1667:5:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":180,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":174,"src":"1675:5:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1667:13:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":182,"nodeType":"ExpressionStatement","src":"1667:13:1"},{"expression":{"id":185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":183,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"1690:7:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":184,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":176,"src":"1700:7:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1690:17:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":186,"nodeType":"ExpressionStatement","src":"1690:17:1"}]},"documentation":{"id":172,"nodeType":"StructuredDocumentation","src":"1425:171:1","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":188,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":174,"mutability":"mutable","name":"name_","nameLocation":"1627:5:1","nodeType":"VariableDeclaration","scope":188,"src":"1613:19:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":173,"name":"string","nodeType":"ElementaryTypeName","src":"1613:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":176,"mutability":"mutable","name":"symbol_","nameLocation":"1648:7:1","nodeType":"VariableDeclaration","scope":188,"src":"1634:21:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":175,"name":"string","nodeType":"ElementaryTypeName","src":"1634:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1612:44:1"},"returnParameters":{"id":178,"nodeType":"ParameterList","parameters":[],"src":"1657:0:1"},"scope":651,"src":"1601:113:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[742],"body":{"id":196,"nodeType":"Block","src":"1839:29:1","statements":[{"expression":{"id":194,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"1856:5:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":193,"id":195,"nodeType":"Return","src":"1849:12:1"}]},"documentation":{"id":189,"nodeType":"StructuredDocumentation","src":"1720:54:1","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":197,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"1788:4:1","nodeType":"FunctionDefinition","parameters":{"id":190,"nodeType":"ParameterList","parameters":[],"src":"1792:2:1"},"returnParameters":{"id":193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":192,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":197,"src":"1824:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":191,"name":"string","nodeType":"ElementaryTypeName","src":"1824:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1823:15:1"},"scope":651,"src":"1779:89:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[748],"body":{"id":205,"nodeType":"Block","src":"2043:31:1","statements":[{"expression":{"id":203,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"2060:7:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":202,"id":204,"nodeType":"Return","src":"2053:14:1"}]},"documentation":{"id":198,"nodeType":"StructuredDocumentation","src":"1874:102:1","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":206,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"1990:6:1","nodeType":"FunctionDefinition","parameters":{"id":199,"nodeType":"ParameterList","parameters":[],"src":"1996:2:1"},"returnParameters":{"id":202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":201,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":206,"src":"2028:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":200,"name":"string","nodeType":"ElementaryTypeName","src":"2028:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2027:15:1"},"scope":651,"src":"1981:93:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[754],"body":{"id":214,"nodeType":"Block","src":"2763:26:1","statements":[{"expression":{"hexValue":"3138","id":212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2780:2:1","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":211,"id":213,"nodeType":"Return","src":"2773:9:1"}]},"documentation":{"id":207,"nodeType":"StructuredDocumentation","src":"2080:622:1","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":215,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"2716:8:1","nodeType":"FunctionDefinition","parameters":{"id":208,"nodeType":"ParameterList","parameters":[],"src":"2724:2:1"},"returnParameters":{"id":211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":210,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":215,"src":"2756:5:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":209,"name":"uint8","nodeType":"ElementaryTypeName","src":"2756:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2755:7:1"},"scope":651,"src":"2707:82:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[678],"body":{"id":223,"nodeType":"Block","src":"2910:36:1","statements":[{"expression":{"id":221,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"2927:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":220,"id":222,"nodeType":"Return","src":"2920:19:1"}]},"documentation":{"id":216,"nodeType":"StructuredDocumentation","src":"2795:49:1","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":224,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"2858:11:1","nodeType":"FunctionDefinition","parameters":{"id":217,"nodeType":"ParameterList","parameters":[],"src":"2869:2:1"},"returnParameters":{"id":220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":219,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":224,"src":"2901:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":218,"name":"uint256","nodeType":"ElementaryTypeName","src":"2901:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2900:9:1"},"scope":651,"src":"2849:97:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[686],"body":{"id":236,"nodeType":"Block","src":"3078:42:1","statements":[{"expression":{"baseExpression":{"id":232,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"3095:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":234,"indexExpression":{"id":233,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":227,"src":"3105:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3095:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":231,"id":235,"nodeType":"Return","src":"3088:25:1"}]},"documentation":{"id":225,"nodeType":"StructuredDocumentation","src":"2952:47:1","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":237,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3013:9:1","nodeType":"FunctionDefinition","parameters":{"id":228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":227,"mutability":"mutable","name":"account","nameLocation":"3031:7:1","nodeType":"VariableDeclaration","scope":237,"src":"3023:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":226,"name":"address","nodeType":"ElementaryTypeName","src":"3023:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3022:17:1"},"returnParameters":{"id":231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":230,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":237,"src":"3069:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":229,"name":"uint256","nodeType":"ElementaryTypeName","src":"3069:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3068:9:1"},"scope":651,"src":"3004:116:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[696],"body":{"id":260,"nodeType":"Block","src":"3390:103:1","statements":[{"assignments":[248],"declarations":[{"constant":false,"id":248,"mutability":"mutable","name":"owner","nameLocation":"3408:5:1","nodeType":"VariableDeclaration","scope":260,"src":"3400:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":247,"name":"address","nodeType":"ElementaryTypeName","src":"3400:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":251,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":249,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"3416:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3416:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3400:28:1"},{"expression":{"arguments":[{"id":253,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"3448:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":254,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":240,"src":"3455:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":255,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":242,"src":"3459:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":252,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":381,"src":"3438:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3438:27:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":257,"nodeType":"ExpressionStatement","src":"3438:27:1"},{"expression":{"hexValue":"74727565","id":258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3482:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":246,"id":259,"nodeType":"Return","src":"3475:11:1"}]},"documentation":{"id":238,"nodeType":"StructuredDocumentation","src":"3126:184:1","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":261,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3324:8:1","nodeType":"FunctionDefinition","parameters":{"id":243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":240,"mutability":"mutable","name":"to","nameLocation":"3341:2:1","nodeType":"VariableDeclaration","scope":261,"src":"3333:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":239,"name":"address","nodeType":"ElementaryTypeName","src":"3333:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":242,"mutability":"mutable","name":"value","nameLocation":"3353:5:1","nodeType":"VariableDeclaration","scope":261,"src":"3345:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":241,"name":"uint256","nodeType":"ElementaryTypeName","src":"3345:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3332:27:1"},"returnParameters":{"id":246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":245,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":261,"src":"3384:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":244,"name":"bool","nodeType":"ElementaryTypeName","src":"3384:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3383:6:1"},"scope":651,"src":"3315:178:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[706],"body":{"id":277,"nodeType":"Block","src":"3640:51:1","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":271,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":165,"src":"3657:11:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":273,"indexExpression":{"id":272,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"3669:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3657:18:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":275,"indexExpression":{"id":274,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"3676:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3657:27:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":270,"id":276,"nodeType":"Return","src":"3650:34:1"}]},"documentation":{"id":262,"nodeType":"StructuredDocumentation","src":"3499:47:1","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":278,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3560:9:1","nodeType":"FunctionDefinition","parameters":{"id":267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":264,"mutability":"mutable","name":"owner","nameLocation":"3578:5:1","nodeType":"VariableDeclaration","scope":278,"src":"3570:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":263,"name":"address","nodeType":"ElementaryTypeName","src":"3570:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":266,"mutability":"mutable","name":"spender","nameLocation":"3593:7:1","nodeType":"VariableDeclaration","scope":278,"src":"3585:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":265,"name":"address","nodeType":"ElementaryTypeName","src":"3585:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3569:32:1"},"returnParameters":{"id":270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":269,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":278,"src":"3631:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":268,"name":"uint256","nodeType":"ElementaryTypeName","src":"3631:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3630:9:1"},"scope":651,"src":"3551:140:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[716],"body":{"id":301,"nodeType":"Block","src":"4077:107:1","statements":[{"assignments":[289],"declarations":[{"constant":false,"id":289,"mutability":"mutable","name":"owner","nameLocation":"4095:5:1","nodeType":"VariableDeclaration","scope":301,"src":"4087:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":288,"name":"address","nodeType":"ElementaryTypeName","src":"4087:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":292,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":290,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"4103:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4103:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4087:28:1"},{"expression":{"arguments":[{"id":294,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":289,"src":"4134:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":295,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":281,"src":"4141:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":296,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"4150:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":293,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[542,602],"referencedDeclaration":542,"src":"4125:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4125:31:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":298,"nodeType":"ExpressionStatement","src":"4125:31:1"},{"expression":{"hexValue":"74727565","id":299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4173:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":287,"id":300,"nodeType":"Return","src":"4166:11:1"}]},"documentation":{"id":279,"nodeType":"StructuredDocumentation","src":"3697:296:1","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":302,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4007:7:1","nodeType":"FunctionDefinition","parameters":{"id":284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":281,"mutability":"mutable","name":"spender","nameLocation":"4023:7:1","nodeType":"VariableDeclaration","scope":302,"src":"4015:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":280,"name":"address","nodeType":"ElementaryTypeName","src":"4015:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":283,"mutability":"mutable","name":"value","nameLocation":"4040:5:1","nodeType":"VariableDeclaration","scope":302,"src":"4032:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":282,"name":"uint256","nodeType":"ElementaryTypeName","src":"4032:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4014:32:1"},"returnParameters":{"id":287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":286,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":302,"src":"4071:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":285,"name":"bool","nodeType":"ElementaryTypeName","src":"4071:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4070:6:1"},"scope":651,"src":"3998:186:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[728],"body":{"id":333,"nodeType":"Block","src":"4869:151:1","statements":[{"assignments":[315],"declarations":[{"constant":false,"id":315,"mutability":"mutable","name":"spender","nameLocation":"4887:7:1","nodeType":"VariableDeclaration","scope":333,"src":"4879:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":314,"name":"address","nodeType":"ElementaryTypeName","src":"4879:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":318,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":316,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"4897:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4897:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4879:30:1"},{"expression":{"arguments":[{"id":320,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"4935:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":321,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"4941:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":322,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"4950:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":319,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":650,"src":"4919:15:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4919:37:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":324,"nodeType":"ExpressionStatement","src":"4919:37:1"},{"expression":{"arguments":[{"id":326,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"4976:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":327,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"4982:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":328,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"4986:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":325,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":381,"src":"4966:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4966:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":330,"nodeType":"ExpressionStatement","src":"4966:26:1"},{"expression":{"hexValue":"74727565","id":331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5009:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":313,"id":332,"nodeType":"Return","src":"5002:11:1"}]},"documentation":{"id":303,"nodeType":"StructuredDocumentation","src":"4190:581:1","text":" @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":334,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4785:12:1","nodeType":"FunctionDefinition","parameters":{"id":310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":305,"mutability":"mutable","name":"from","nameLocation":"4806:4:1","nodeType":"VariableDeclaration","scope":334,"src":"4798:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":304,"name":"address","nodeType":"ElementaryTypeName","src":"4798:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":307,"mutability":"mutable","name":"to","nameLocation":"4820:2:1","nodeType":"VariableDeclaration","scope":334,"src":"4812:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":306,"name":"address","nodeType":"ElementaryTypeName","src":"4812:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":309,"mutability":"mutable","name":"value","nameLocation":"4832:5:1","nodeType":"VariableDeclaration","scope":334,"src":"4824:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":308,"name":"uint256","nodeType":"ElementaryTypeName","src":"4824:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4797:41:1"},"returnParameters":{"id":313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":312,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":334,"src":"4863:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":311,"name":"bool","nodeType":"ElementaryTypeName","src":"4863:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4862:6:1"},"scope":651,"src":"4776:244:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":380,"nodeType":"Block","src":"5462:231:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":344,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"5476:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5492:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":346,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5484:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":345,"name":"address","nodeType":"ElementaryTypeName","src":"5484:7:1","typeDescriptions":{}}},"id":348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5484:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5476:18:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":358,"nodeType":"IfStatement","src":"5472:86:1","trueBody":{"id":357,"nodeType":"Block","src":"5496:62:1","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5544:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5536:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":351,"name":"address","nodeType":"ElementaryTypeName","src":"5536:7:1","typeDescriptions":{}}},"id":354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5536:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":350,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16,"src":"5517:18:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5517:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":356,"nodeType":"RevertStatement","src":"5510:37:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":359,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"5571:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5585:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":361,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5577:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":360,"name":"address","nodeType":"ElementaryTypeName","src":"5577:7:1","typeDescriptions":{}}},"id":363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5577:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5571:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":373,"nodeType":"IfStatement","src":"5567:86:1","trueBody":{"id":372,"nodeType":"Block","src":"5589:64:1","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5639:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":367,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5631:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":366,"name":"address","nodeType":"ElementaryTypeName","src":"5631:7:1","typeDescriptions":{}}},"id":369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5631:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":365,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":21,"src":"5610:20:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5610:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":371,"nodeType":"RevertStatement","src":"5603:39:1"}]}},{"expression":{"arguments":[{"id":375,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"5670:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":376,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"5676:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":377,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":341,"src":"5680:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":374,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":458,"src":"5662:7:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5662:24:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":379,"nodeType":"ExpressionStatement","src":"5662:24:1"}]},"documentation":{"id":335,"nodeType":"StructuredDocumentation","src":"5026:362:1","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":381,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5402:9:1","nodeType":"FunctionDefinition","parameters":{"id":342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":337,"mutability":"mutable","name":"from","nameLocation":"5420:4:1","nodeType":"VariableDeclaration","scope":381,"src":"5412:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":336,"name":"address","nodeType":"ElementaryTypeName","src":"5412:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":339,"mutability":"mutable","name":"to","nameLocation":"5434:2:1","nodeType":"VariableDeclaration","scope":381,"src":"5426:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":338,"name":"address","nodeType":"ElementaryTypeName","src":"5426:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":341,"mutability":"mutable","name":"value","nameLocation":"5446:5:1","nodeType":"VariableDeclaration","scope":381,"src":"5438:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":340,"name":"uint256","nodeType":"ElementaryTypeName","src":"5438:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5411:41:1"},"returnParameters":{"id":343,"nodeType":"ParameterList","parameters":[],"src":"5462:0:1"},"scope":651,"src":"5393:300:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":457,"nodeType":"Block","src":"6083:1032:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":391,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"6097:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6113:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6105:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":392,"name":"address","nodeType":"ElementaryTypeName","src":"6105:7:1","typeDescriptions":{}}},"id":395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6105:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6097:18:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":428,"nodeType":"Block","src":"6271:362:1","statements":[{"assignments":[403],"declarations":[{"constant":false,"id":403,"mutability":"mutable","name":"fromBalance","nameLocation":"6293:11:1","nodeType":"VariableDeclaration","scope":428,"src":"6285:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":402,"name":"uint256","nodeType":"ElementaryTypeName","src":"6285:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":407,"initialValue":{"baseExpression":{"id":404,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"6307:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":406,"indexExpression":{"id":405,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"6317:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6307:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6285:37:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":408,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"6340:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":409,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"6354:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6340:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":418,"nodeType":"IfStatement","src":"6336:115:1","trueBody":{"id":417,"nodeType":"Block","src":"6361:90:1","statements":[{"errorCall":{"arguments":[{"id":412,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"6411:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":413,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"6417:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":414,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"6430:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":411,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11,"src":"6386:24:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6386:50:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":416,"nodeType":"RevertStatement","src":"6379:57:1"}]}},{"id":427,"nodeType":"UncheckedBlock","src":"6464:159:1","statements":[{"expression":{"id":425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":419,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"6571:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":421,"indexExpression":{"id":420,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"6581:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6571:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":422,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"6589:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":423,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"6603:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6589:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6571:37:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":426,"nodeType":"ExpressionStatement","src":"6571:37:1"}]}]},"id":429,"nodeType":"IfStatement","src":"6093:540:1","trueBody":{"id":401,"nodeType":"Block","src":"6117:148:1","statements":[{"expression":{"id":399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":397,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"6233:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":398,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"6249:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6233:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":400,"nodeType":"ExpressionStatement","src":"6233:21:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":430,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"6647:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6661:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":432,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6653:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":431,"name":"address","nodeType":"ElementaryTypeName","src":"6653:7:1","typeDescriptions":{}}},"id":434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6653:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6647:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":449,"nodeType":"Block","src":"6862:206:1","statements":[{"id":448,"nodeType":"UncheckedBlock","src":"6876:182:1","statements":[{"expression":{"id":446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":442,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"7021:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":444,"indexExpression":{"id":443,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"7031:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7021:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":445,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"7038:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7021:22:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":447,"nodeType":"ExpressionStatement","src":"7021:22:1"}]}]},"id":450,"nodeType":"IfStatement","src":"6643:425:1","trueBody":{"id":441,"nodeType":"Block","src":"6665:191:1","statements":[{"id":440,"nodeType":"UncheckedBlock","src":"6679:167:1","statements":[{"expression":{"id":438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":436,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"6810:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":437,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"6826:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6810:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":439,"nodeType":"ExpressionStatement","src":"6810:21:1"}]}]}},{"eventCall":{"arguments":[{"id":452,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"7092:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":453,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"7098:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":454,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"7102:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":451,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":663,"src":"7083:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7083:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":456,"nodeType":"EmitStatement","src":"7078:30:1"}]},"documentation":{"id":382,"nodeType":"StructuredDocumentation","src":"5699:304:1","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":458,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"6017:7:1","nodeType":"FunctionDefinition","parameters":{"id":389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":384,"mutability":"mutable","name":"from","nameLocation":"6033:4:1","nodeType":"VariableDeclaration","scope":458,"src":"6025:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":383,"name":"address","nodeType":"ElementaryTypeName","src":"6025:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":386,"mutability":"mutable","name":"to","nameLocation":"6047:2:1","nodeType":"VariableDeclaration","scope":458,"src":"6039:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":385,"name":"address","nodeType":"ElementaryTypeName","src":"6039:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":388,"mutability":"mutable","name":"value","nameLocation":"6059:5:1","nodeType":"VariableDeclaration","scope":458,"src":"6051:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":387,"name":"uint256","nodeType":"ElementaryTypeName","src":"6051:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6024:41:1"},"returnParameters":{"id":390,"nodeType":"ParameterList","parameters":[],"src":"6083:0:1"},"scope":651,"src":"6008:1107:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":490,"nodeType":"Block","src":"7514:152:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":466,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"7528:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7547:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7539:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":467,"name":"address","nodeType":"ElementaryTypeName","src":"7539:7:1","typeDescriptions":{}}},"id":470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7539:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7528:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":480,"nodeType":"IfStatement","src":"7524:91:1","trueBody":{"id":479,"nodeType":"Block","src":"7551:64:1","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7601:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":474,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7593:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":473,"name":"address","nodeType":"ElementaryTypeName","src":"7593:7:1","typeDescriptions":{}}},"id":476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7593:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":472,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":21,"src":"7572:20:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7572:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":478,"nodeType":"RevertStatement","src":"7565:39:1"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7640:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7632:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":482,"name":"address","nodeType":"ElementaryTypeName","src":"7632:7:1","typeDescriptions":{}}},"id":485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7632:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":486,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"7644:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":487,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"7653:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":481,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":458,"src":"7624:7:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7624:35:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":489,"nodeType":"ExpressionStatement","src":"7624:35:1"}]},"documentation":{"id":459,"nodeType":"StructuredDocumentation","src":"7121:332:1","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":491,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7467:5:1","nodeType":"FunctionDefinition","parameters":{"id":464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":461,"mutability":"mutable","name":"account","nameLocation":"7481:7:1","nodeType":"VariableDeclaration","scope":491,"src":"7473:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":460,"name":"address","nodeType":"ElementaryTypeName","src":"7473:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":463,"mutability":"mutable","name":"value","nameLocation":"7498:5:1","nodeType":"VariableDeclaration","scope":491,"src":"7490:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":462,"name":"uint256","nodeType":"ElementaryTypeName","src":"7490:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7472:32:1"},"returnParameters":{"id":465,"nodeType":"ParameterList","parameters":[],"src":"7514:0:1"},"scope":651,"src":"7458:208:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":523,"nodeType":"Block","src":"8040:150:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":499,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"8054:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8073:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":501,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8065:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":500,"name":"address","nodeType":"ElementaryTypeName","src":"8065:7:1","typeDescriptions":{}}},"id":503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8065:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8054:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":513,"nodeType":"IfStatement","src":"8050:89:1","trueBody":{"id":512,"nodeType":"Block","src":"8077:62:1","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8125:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":507,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8117:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":506,"name":"address","nodeType":"ElementaryTypeName","src":"8117:7:1","typeDescriptions":{}}},"id":509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8117:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":505,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16,"src":"8098:18:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8098:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":511,"nodeType":"RevertStatement","src":"8091:37:1"}]}},{"expression":{"arguments":[{"id":515,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"8156:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8173:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":517,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8165:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":516,"name":"address","nodeType":"ElementaryTypeName","src":"8165:7:1","typeDescriptions":{}}},"id":519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8165:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":520,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":496,"src":"8177:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":514,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":458,"src":"8148:7:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8148:35:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":522,"nodeType":"ExpressionStatement","src":"8148:35:1"}]},"documentation":{"id":492,"nodeType":"StructuredDocumentation","src":"7672:307:1","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":524,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"7993:5:1","nodeType":"FunctionDefinition","parameters":{"id":497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":494,"mutability":"mutable","name":"account","nameLocation":"8007:7:1","nodeType":"VariableDeclaration","scope":524,"src":"7999:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":493,"name":"address","nodeType":"ElementaryTypeName","src":"7999:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":496,"mutability":"mutable","name":"value","nameLocation":"8024:5:1","nodeType":"VariableDeclaration","scope":524,"src":"8016:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":495,"name":"uint256","nodeType":"ElementaryTypeName","src":"8016:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7998:32:1"},"returnParameters":{"id":498,"nodeType":"ParameterList","parameters":[],"src":"8040:0:1"},"scope":651,"src":"7984:206:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":541,"nodeType":"Block","src":"8800:54:1","statements":[{"expression":{"arguments":[{"id":535,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"8819:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":536,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"8826:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":537,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"8835:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8842:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":534,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[542,602],"referencedDeclaration":602,"src":"8810:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8810:37:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":540,"nodeType":"ExpressionStatement","src":"8810:37:1"}]},"documentation":{"id":525,"nodeType":"StructuredDocumentation","src":"8196:525:1","text":" @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":542,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8735:8:1","nodeType":"FunctionDefinition","parameters":{"id":532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":527,"mutability":"mutable","name":"owner","nameLocation":"8752:5:1","nodeType":"VariableDeclaration","scope":542,"src":"8744:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":526,"name":"address","nodeType":"ElementaryTypeName","src":"8744:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":529,"mutability":"mutable","name":"spender","nameLocation":"8767:7:1","nodeType":"VariableDeclaration","scope":542,"src":"8759:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":528,"name":"address","nodeType":"ElementaryTypeName","src":"8759:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":531,"mutability":"mutable","name":"value","nameLocation":"8784:5:1","nodeType":"VariableDeclaration","scope":542,"src":"8776:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":530,"name":"uint256","nodeType":"ElementaryTypeName","src":"8776:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8743:47:1"},"returnParameters":{"id":533,"nodeType":"ParameterList","parameters":[],"src":"8800:0:1"},"scope":651,"src":"8726:128:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":601,"nodeType":"Block","src":"9799:334:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":554,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":545,"src":"9813:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9830:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":556,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9822:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":555,"name":"address","nodeType":"ElementaryTypeName","src":"9822:7:1","typeDescriptions":{}}},"id":558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9822:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9813:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":568,"nodeType":"IfStatement","src":"9809:89:1","trueBody":{"id":567,"nodeType":"Block","src":"9834:64:1","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9884:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":562,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9876:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":561,"name":"address","nodeType":"ElementaryTypeName","src":"9876:7:1","typeDescriptions":{}}},"id":564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9876:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":560,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"9855:20:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9855:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":566,"nodeType":"RevertStatement","src":"9848:39:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":569,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"9911:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9930:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":571,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9922:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":570,"name":"address","nodeType":"ElementaryTypeName","src":"9922:7:1","typeDescriptions":{}}},"id":573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9922:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9911:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":583,"nodeType":"IfStatement","src":"9907:90:1","trueBody":{"id":582,"nodeType":"Block","src":"9934:63:1","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9983:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":577,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9975:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":576,"name":"address","nodeType":"ElementaryTypeName","src":"9975:7:1","typeDescriptions":{}}},"id":579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9975:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":575,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"9955:19:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9955:31:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":581,"nodeType":"RevertStatement","src":"9948:38:1"}]}},{"expression":{"id":590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":584,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":165,"src":"10006:11:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":587,"indexExpression":{"id":585,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":545,"src":"10018:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10006:18:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":588,"indexExpression":{"id":586,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"10025:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10006:27:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":589,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"10036:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10006:35:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":591,"nodeType":"ExpressionStatement","src":"10006:35:1"},{"condition":{"id":592,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"10055:9:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":600,"nodeType":"IfStatement","src":"10051:76:1","trueBody":{"id":599,"nodeType":"Block","src":"10066:61:1","statements":[{"eventCall":{"arguments":[{"id":594,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":545,"src":"10094:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":595,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"10101:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":596,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"10110:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":593,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":672,"src":"10085:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10085:31:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":598,"nodeType":"EmitStatement","src":"10080:36:1"}]}}]},"documentation":{"id":543,"nodeType":"StructuredDocumentation","src":"8860:836:1","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":602,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9710:8:1","nodeType":"FunctionDefinition","parameters":{"id":552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":545,"mutability":"mutable","name":"owner","nameLocation":"9727:5:1","nodeType":"VariableDeclaration","scope":602,"src":"9719:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":544,"name":"address","nodeType":"ElementaryTypeName","src":"9719:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":547,"mutability":"mutable","name":"spender","nameLocation":"9742:7:1","nodeType":"VariableDeclaration","scope":602,"src":"9734:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":546,"name":"address","nodeType":"ElementaryTypeName","src":"9734:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":549,"mutability":"mutable","name":"value","nameLocation":"9759:5:1","nodeType":"VariableDeclaration","scope":602,"src":"9751:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":548,"name":"uint256","nodeType":"ElementaryTypeName","src":"9751:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":551,"mutability":"mutable","name":"emitEvent","nameLocation":"9771:9:1","nodeType":"VariableDeclaration","scope":602,"src":"9766:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":550,"name":"bool","nodeType":"ElementaryTypeName","src":"9766:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9718:63:1"},"returnParameters":{"id":553,"nodeType":"ParameterList","parameters":[],"src":"9799:0:1"},"scope":651,"src":"9701:432:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":649,"nodeType":"Block","src":"10504:387:1","statements":[{"assignments":[613],"declarations":[{"constant":false,"id":613,"mutability":"mutable","name":"currentAllowance","nameLocation":"10522:16:1","nodeType":"VariableDeclaration","scope":649,"src":"10514:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":612,"name":"uint256","nodeType":"ElementaryTypeName","src":"10514:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":618,"initialValue":{"arguments":[{"id":615,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"10551:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":616,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":607,"src":"10558:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":614,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"10541:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10541:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10514:52:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":619,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"10580:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"id":622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10604:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":621,"name":"uint256","nodeType":"ElementaryTypeName","src":"10604:7:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":620,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10599:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10599:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10613:3:1","memberName":"max","nodeType":"MemberAccess","src":"10599:17:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10580:36:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":648,"nodeType":"IfStatement","src":"10576:309:1","trueBody":{"id":647,"nodeType":"Block","src":"10618:267:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":626,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"10636:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":627,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"10655:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10636:24:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":636,"nodeType":"IfStatement","src":"10632:130:1","trueBody":{"id":635,"nodeType":"Block","src":"10662:100:1","statements":[{"errorCall":{"arguments":[{"id":630,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":607,"src":"10714:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":631,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"10723:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":632,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"10741:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":629,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"10687:26:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10687:60:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":634,"nodeType":"RevertStatement","src":"10680:67:1"}]}},{"id":646,"nodeType":"UncheckedBlock","src":"10775:100:1","statements":[{"expression":{"arguments":[{"id":638,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"10812:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":639,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":607,"src":"10819:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":640,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"10828:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":641,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"10847:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10828:24:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10854:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":637,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[542,602],"referencedDeclaration":602,"src":"10803:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10803:57:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":645,"nodeType":"ExpressionStatement","src":"10803:57:1"}]}]}}]},"documentation":{"id":603,"nodeType":"StructuredDocumentation","src":"10139:271:1","text":" @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":650,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10424:15:1","nodeType":"FunctionDefinition","parameters":{"id":610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":605,"mutability":"mutable","name":"owner","nameLocation":"10448:5:1","nodeType":"VariableDeclaration","scope":650,"src":"10440:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":604,"name":"address","nodeType":"ElementaryTypeName","src":"10440:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":607,"mutability":"mutable","name":"spender","nameLocation":"10463:7:1","nodeType":"VariableDeclaration","scope":650,"src":"10455:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":606,"name":"address","nodeType":"ElementaryTypeName","src":"10455:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":609,"mutability":"mutable","name":"value","nameLocation":"10480:5:1","nodeType":"VariableDeclaration","scope":650,"src":"10472:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":608,"name":"uint256","nodeType":"ElementaryTypeName","src":"10472:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10439:47:1"},"returnParameters":{"id":611,"nodeType":"ParameterList","parameters":[],"src":"10504:0:1"},"scope":651,"src":"10415:476:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":652,"src":"1106:9787:1","usedErrors":[11,16,21,30,35,40],"usedEvents":[663,672]}],"src":"105:10789:1"},"id":1},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[729]},"id":730,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":653,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":654,"nodeType":"StructuredDocumentation","src":"132:71:2","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":729,"linearizedBaseContracts":[729],"name":"IERC20","nameLocation":"214:6:2","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":655,"nodeType":"StructuredDocumentation","src":"227:158:2","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":663,"name":"Transfer","nameLocation":"396:8:2","nodeType":"EventDefinition","parameters":{"id":662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":657,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"421:4:2","nodeType":"VariableDeclaration","scope":663,"src":"405:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":656,"name":"address","nodeType":"ElementaryTypeName","src":"405:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":659,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"443:2:2","nodeType":"VariableDeclaration","scope":663,"src":"427:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":658,"name":"address","nodeType":"ElementaryTypeName","src":"427:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":661,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"455:5:2","nodeType":"VariableDeclaration","scope":663,"src":"447:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":660,"name":"uint256","nodeType":"ElementaryTypeName","src":"447:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"404:57:2"},"src":"390:72:2"},{"anonymous":false,"documentation":{"id":664,"nodeType":"StructuredDocumentation","src":"468:148:2","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":672,"name":"Approval","nameLocation":"627:8:2","nodeType":"EventDefinition","parameters":{"id":671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":666,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"652:5:2","nodeType":"VariableDeclaration","scope":672,"src":"636:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":665,"name":"address","nodeType":"ElementaryTypeName","src":"636:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":668,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"675:7:2","nodeType":"VariableDeclaration","scope":672,"src":"659:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":667,"name":"address","nodeType":"ElementaryTypeName","src":"659:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":670,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"692:5:2","nodeType":"VariableDeclaration","scope":672,"src":"684:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":669,"name":"uint256","nodeType":"ElementaryTypeName","src":"684:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"635:63:2"},"src":"621:78:2"},{"documentation":{"id":673,"nodeType":"StructuredDocumentation","src":"705:65:2","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":678,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"784:11:2","nodeType":"FunctionDefinition","parameters":{"id":674,"nodeType":"ParameterList","parameters":[],"src":"795:2:2"},"returnParameters":{"id":677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":676,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":678,"src":"821:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":675,"name":"uint256","nodeType":"ElementaryTypeName","src":"821:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"820:9:2"},"scope":729,"src":"775:55:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":679,"nodeType":"StructuredDocumentation","src":"836:71:2","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":686,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:2","nodeType":"FunctionDefinition","parameters":{"id":682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":681,"mutability":"mutable","name":"account","nameLocation":"939:7:2","nodeType":"VariableDeclaration","scope":686,"src":"931:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":680,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:2"},"returnParameters":{"id":685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":684,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":686,"src":"971:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":683,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:2"},"scope":729,"src":"912:68:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":687,"nodeType":"StructuredDocumentation","src":"986:213:2","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":696,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1213:8:2","nodeType":"FunctionDefinition","parameters":{"id":692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":689,"mutability":"mutable","name":"to","nameLocation":"1230:2:2","nodeType":"VariableDeclaration","scope":696,"src":"1222:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":688,"name":"address","nodeType":"ElementaryTypeName","src":"1222:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":691,"mutability":"mutable","name":"value","nameLocation":"1242:5:2","nodeType":"VariableDeclaration","scope":696,"src":"1234:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":690,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1221:27:2"},"returnParameters":{"id":695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":694,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":696,"src":"1267:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":693,"name":"bool","nodeType":"ElementaryTypeName","src":"1267:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1266:6:2"},"scope":729,"src":"1204:69:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":697,"nodeType":"StructuredDocumentation","src":"1279:264:2","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":706,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1557:9:2","nodeType":"FunctionDefinition","parameters":{"id":702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":699,"mutability":"mutable","name":"owner","nameLocation":"1575:5:2","nodeType":"VariableDeclaration","scope":706,"src":"1567:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":698,"name":"address","nodeType":"ElementaryTypeName","src":"1567:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":701,"mutability":"mutable","name":"spender","nameLocation":"1590:7:2","nodeType":"VariableDeclaration","scope":706,"src":"1582:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":700,"name":"address","nodeType":"ElementaryTypeName","src":"1582:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1566:32:2"},"returnParameters":{"id":705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":704,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":706,"src":"1622:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":703,"name":"uint256","nodeType":"ElementaryTypeName","src":"1622:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1621:9:2"},"scope":729,"src":"1548:83:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":707,"nodeType":"StructuredDocumentation","src":"1637:667:2","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":716,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2318:7:2","nodeType":"FunctionDefinition","parameters":{"id":712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":709,"mutability":"mutable","name":"spender","nameLocation":"2334:7:2","nodeType":"VariableDeclaration","scope":716,"src":"2326:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":708,"name":"address","nodeType":"ElementaryTypeName","src":"2326:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":711,"mutability":"mutable","name":"value","nameLocation":"2351:5:2","nodeType":"VariableDeclaration","scope":716,"src":"2343:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":710,"name":"uint256","nodeType":"ElementaryTypeName","src":"2343:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2325:32:2"},"returnParameters":{"id":715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":714,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":716,"src":"2376:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":713,"name":"bool","nodeType":"ElementaryTypeName","src":"2376:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2375:6:2"},"scope":729,"src":"2309:73:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":717,"nodeType":"StructuredDocumentation","src":"2388:297:2","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":728,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2699:12:2","nodeType":"FunctionDefinition","parameters":{"id":724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":719,"mutability":"mutable","name":"from","nameLocation":"2720:4:2","nodeType":"VariableDeclaration","scope":728,"src":"2712:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":718,"name":"address","nodeType":"ElementaryTypeName","src":"2712:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":721,"mutability":"mutable","name":"to","nameLocation":"2734:2:2","nodeType":"VariableDeclaration","scope":728,"src":"2726:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":720,"name":"address","nodeType":"ElementaryTypeName","src":"2726:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":723,"mutability":"mutable","name":"value","nameLocation":"2746:5:2","nodeType":"VariableDeclaration","scope":728,"src":"2738:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":722,"name":"uint256","nodeType":"ElementaryTypeName","src":"2738:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2711:41:2"},"returnParameters":{"id":727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":726,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":728,"src":"2771:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":725,"name":"bool","nodeType":"ElementaryTypeName","src":"2771:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2770:6:2"},"scope":729,"src":"2690:87:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":730,"src":"204:2575:2","usedErrors":[],"usedEvents":[663,672]}],"src":"106:2674:2"},"id":2},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[729],"IERC20Metadata":[755]},"id":756,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":731,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":733,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":756,"sourceUnit":730,"src":"151:37:3","symbolAliases":[{"foreign":{"id":732,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"159:6:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":735,"name":"IERC20","nameLocations":["306:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":729,"src":"306:6:3"},"id":736,"nodeType":"InheritanceSpecifier","src":"306:6:3"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":734,"nodeType":"StructuredDocumentation","src":"190:87:3","text":" @dev Interface for the optional metadata functions from the ERC-20 standard."},"fullyImplemented":false,"id":755,"linearizedBaseContracts":[755,729],"name":"IERC20Metadata","nameLocation":"288:14:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":737,"nodeType":"StructuredDocumentation","src":"319:54:3","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":742,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"387:4:3","nodeType":"FunctionDefinition","parameters":{"id":738,"nodeType":"ParameterList","parameters":[],"src":"391:2:3"},"returnParameters":{"id":741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":740,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":742,"src":"417:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":739,"name":"string","nodeType":"ElementaryTypeName","src":"417:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"416:15:3"},"scope":755,"src":"378:54:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":743,"nodeType":"StructuredDocumentation","src":"438:56:3","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":748,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"508:6:3","nodeType":"FunctionDefinition","parameters":{"id":744,"nodeType":"ParameterList","parameters":[],"src":"514:2:3"},"returnParameters":{"id":747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":746,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":748,"src":"540:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":745,"name":"string","nodeType":"ElementaryTypeName","src":"540:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"539:15:3"},"scope":755,"src":"499:56:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":749,"nodeType":"StructuredDocumentation","src":"561:65:3","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":754,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"640:8:3","nodeType":"FunctionDefinition","parameters":{"id":750,"nodeType":"ParameterList","parameters":[],"src":"648:2:3"},"returnParameters":{"id":753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":752,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":754,"src":"674:5:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":751,"name":"uint8","nodeType":"ElementaryTypeName","src":"674:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"673:7:3"},"scope":755,"src":"631:50:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":756,"src":"278:405:3","usedErrors":[],"usedEvents":[663,672]}],"src":"125:559:3"},"id":3},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[785]},"id":786,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":757,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:4"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":758,"nodeType":"StructuredDocumentation","src":"127:496:4","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":785,"linearizedBaseContracts":[785],"name":"Context","nameLocation":"642:7:4","nodeType":"ContractDefinition","nodes":[{"body":{"id":766,"nodeType":"Block","src":"718:34:4","statements":[{"expression":{"expression":{"id":763,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:4","memberName":"sender","nodeType":"MemberAccess","src":"735:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":762,"id":765,"nodeType":"Return","src":"728:17:4"}]},"id":767,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:4","nodeType":"FunctionDefinition","parameters":{"id":759,"nodeType":"ParameterList","parameters":[],"src":"675:2:4"},"returnParameters":{"id":762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":761,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":767,"src":"709:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":760,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:4"},"scope":785,"src":"656:96:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":775,"nodeType":"Block","src":"825:32:4","statements":[{"expression":{"expression":{"id":772,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:4","memberName":"data","nodeType":"MemberAccess","src":"842:8:4","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":771,"id":774,"nodeType":"Return","src":"835:15:4"}]},"id":776,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:4","nodeType":"FunctionDefinition","parameters":{"id":768,"nodeType":"ParameterList","parameters":[],"src":"775:2:4"},"returnParameters":{"id":771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":770,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":776,"src":"809:14:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":769,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:4"},"scope":785,"src":"758:99:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":783,"nodeType":"Block","src":"935:25:4","statements":[{"expression":{"hexValue":"30","id":781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":780,"id":782,"nodeType":"Return","src":"945:8:4"}]},"id":784,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:4","nodeType":"FunctionDefinition","parameters":{"id":777,"nodeType":"ParameterList","parameters":[],"src":"892:2:4"},"returnParameters":{"id":780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":779,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":784,"src":"926:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":778,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:4"},"scope":785,"src":"863:97:4","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":786,"src":"624:338:4","usedErrors":[],"usedEvents":[]}],"src":"101:862:4"},"id":4},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[837]},"id":838,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":787,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:5"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":788,"nodeType":"StructuredDocumentation","src":"125:489:5","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":837,"linearizedBaseContracts":[837],"name":"Panic","nameLocation":"665:5:5","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":789,"nodeType":"StructuredDocumentation","src":"677:36:5","text":"@dev generic / unspecified error"},"id":792,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:5","nodeType":"VariableDeclaration","scope":837,"src":"718:40:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":790,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":793,"nodeType":"StructuredDocumentation","src":"764:37:5","text":"@dev used by the assert() builtin"},"id":796,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:5","nodeType":"VariableDeclaration","scope":837,"src":"806:39:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":794,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":797,"nodeType":"StructuredDocumentation","src":"851:41:5","text":"@dev arithmetic underflow or overflow"},"id":800,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:5","nodeType":"VariableDeclaration","scope":837,"src":"897:47:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":798,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:5","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":801,"nodeType":"StructuredDocumentation","src":"950:35:5","text":"@dev division or modulo by zero"},"id":804,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:5","nodeType":"VariableDeclaration","scope":837,"src":"990:49:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":802,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:5","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":805,"nodeType":"StructuredDocumentation","src":"1045:30:5","text":"@dev enum conversion error"},"id":808,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:5","nodeType":"VariableDeclaration","scope":837,"src":"1080:54:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":806,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:5","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":809,"nodeType":"StructuredDocumentation","src":"1140:36:5","text":"@dev invalid encoding in storage"},"id":812,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:5","nodeType":"VariableDeclaration","scope":837,"src":"1181:55:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":810,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:5","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":813,"nodeType":"StructuredDocumentation","src":"1242:24:5","text":"@dev empty array pop"},"id":816,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:5","nodeType":"VariableDeclaration","scope":837,"src":"1271:48:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":814,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:5","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":817,"nodeType":"StructuredDocumentation","src":"1325:35:5","text":"@dev array out of bounds access"},"id":820,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:5","nodeType":"VariableDeclaration","scope":837,"src":"1365:52:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":818,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:5","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":821,"nodeType":"StructuredDocumentation","src":"1423:65:5","text":"@dev resource error (too large allocation or too large array)"},"id":824,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:5","nodeType":"VariableDeclaration","scope":837,"src":"1493:47:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":822,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:5","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":825,"nodeType":"StructuredDocumentation","src":"1546:42:5","text":"@dev calling invalid internal function"},"id":828,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:5","nodeType":"VariableDeclaration","scope":837,"src":"1593:58:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":826,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:5","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":835,"nodeType":"Block","src":"1819:151:5","statements":[{"AST":{"nodeType":"YulBlock","src":"1854:110:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1875:4:5","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1881:10:5","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1868:6:5"},"nodeType":"YulFunctionCall","src":"1868:24:5"},"nodeType":"YulExpressionStatement","src":"1868:24:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1912:4:5","type":"","value":"0x20"},{"name":"code","nodeType":"YulIdentifier","src":"1918:4:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1905:6:5"},"nodeType":"YulFunctionCall","src":"1905:18:5"},"nodeType":"YulExpressionStatement","src":"1905:18:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1943:4:5","type":"","value":"0x1c"},{"kind":"number","nodeType":"YulLiteral","src":"1949:4:5","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1936:6:5"},"nodeType":"YulFunctionCall","src":"1936:18:5"},"nodeType":"YulExpressionStatement","src":"1936:18:5"}]},"evmVersion":"paris","externalReferences":[{"declaration":831,"isOffset":false,"isSlot":false,"src":"1918:4:5","valueSize":1}],"flags":["memory-safe"],"id":834,"nodeType":"InlineAssembly","src":"1829:135:5"}]},"documentation":{"id":829,"nodeType":"StructuredDocumentation","src":"1658:113:5","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":836,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:5","nodeType":"FunctionDefinition","parameters":{"id":832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":831,"mutability":"mutable","name":"code","nameLocation":"1799:4:5","nodeType":"VariableDeclaration","scope":836,"src":"1791:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":830,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:5"},"returnParameters":{"id":833,"nodeType":"ParameterList","parameters":[],"src":"1819:0:5"},"scope":837,"src":"1776:194:5","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":838,"src":"657:1315:5","usedErrors":[],"usedEvents":[]}],"src":"99:1874:5"},"id":5},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[906]},"id":907,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":839,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:6"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":840,"nodeType":"StructuredDocumentation","src":"135:894:6","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":906,"linearizedBaseContracts":[906],"name":"ReentrancyGuard","nameLocation":"1048:15:6","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":843,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1843:11:6","nodeType":"VariableDeclaration","scope":906,"src":"1818:40:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":841,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1857:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":846,"mutability":"constant","name":"ENTERED","nameLocation":"1889:7:6","nodeType":"VariableDeclaration","scope":906,"src":"1864:36:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":844,"name":"uint256","nodeType":"ElementaryTypeName","src":"1864:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1899:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":848,"mutability":"mutable","name":"_status","nameLocation":"1923:7:6","nodeType":"VariableDeclaration","scope":906,"src":"1907:23:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":847,"name":"uint256","nodeType":"ElementaryTypeName","src":"1907:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"documentation":{"id":849,"nodeType":"StructuredDocumentation","src":"1937:52:6","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":851,"name":"ReentrancyGuardReentrantCall","nameLocation":"2000:28:6","nodeType":"ErrorDefinition","parameters":{"id":850,"nodeType":"ParameterList","parameters":[],"src":"2028:2:6"},"src":"1994:37:6"},{"body":{"id":858,"nodeType":"Block","src":"2051:38:6","statements":[{"expression":{"id":856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":854,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"2061:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":855,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":843,"src":"2071:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2061:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":857,"nodeType":"ExpressionStatement","src":"2061:21:6"}]},"id":859,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":852,"nodeType":"ParameterList","parameters":[],"src":"2048:2:6"},"returnParameters":{"id":853,"nodeType":"ParameterList","parameters":[],"src":"2051:0:6"},"scope":906,"src":"2037:52:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":869,"nodeType":"Block","src":"2490:79:6","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":862,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":886,"src":"2500:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2500:21:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":864,"nodeType":"ExpressionStatement","src":"2500:21:6"},{"id":865,"nodeType":"PlaceholderStatement","src":"2531:1:6"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":866,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"2542:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2542:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":868,"nodeType":"ExpressionStatement","src":"2542:20:6"}]},"documentation":{"id":860,"nodeType":"StructuredDocumentation","src":"2095:366:6","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":870,"name":"nonReentrant","nameLocation":"2475:12:6","nodeType":"ModifierDefinition","parameters":{"id":861,"nodeType":"ParameterList","parameters":[],"src":"2487:2:6"},"src":"2466:103:6","virtual":false,"visibility":"internal"},{"body":{"id":885,"nodeType":"Block","src":"2614:268:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":873,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"2702:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":874,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":846,"src":"2713:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2702:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":880,"nodeType":"IfStatement","src":"2698:86:6","trueBody":{"id":879,"nodeType":"Block","src":"2722:62:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":876,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"2743:28:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2743:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":878,"nodeType":"RevertStatement","src":"2736:37:6"}]}},{"expression":{"id":883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":881,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"2858:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":882,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":846,"src":"2868:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2858:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":884,"nodeType":"ExpressionStatement","src":"2858:17:6"}]},"id":886,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2584:19:6","nodeType":"FunctionDefinition","parameters":{"id":871,"nodeType":"ParameterList","parameters":[],"src":"2603:2:6"},"returnParameters":{"id":872,"nodeType":"ParameterList","parameters":[],"src":"2614:0:6"},"scope":906,"src":"2575:307:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":893,"nodeType":"Block","src":"2926:170:6","statements":[{"expression":{"id":891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":889,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"3068:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":890,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":843,"src":"3078:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3068:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":892,"nodeType":"ExpressionStatement","src":"3068:21:6"}]},"id":894,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2897:18:6","nodeType":"FunctionDefinition","parameters":{"id":887,"nodeType":"ParameterList","parameters":[],"src":"2915:2:6"},"returnParameters":{"id":888,"nodeType":"ParameterList","parameters":[],"src":"2926:0:6"},"scope":906,"src":"2888:208:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":904,"nodeType":"Block","src":"3339:42:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":900,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"3356:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":901,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":846,"src":"3367:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3356:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":899,"id":903,"nodeType":"Return","src":"3349:25:6"}]},"documentation":{"id":895,"nodeType":"StructuredDocumentation","src":"3102:168:6","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":905,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3284:23:6","nodeType":"FunctionDefinition","parameters":{"id":896,"nodeType":"ParameterList","parameters":[],"src":"3307:2:6"},"returnParameters":{"id":899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":898,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":905,"src":"3333:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":897,"name":"bool","nodeType":"ElementaryTypeName","src":"3333:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3332:6:6"},"scope":906,"src":"3275:106:6","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":907,"src":"1030:2353:6","usedErrors":[851],"usedEvents":[]}],"src":"109:3275:6"},"id":6},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[3712],"SafeCast":[5477],"SignedMath":[5621],"Strings":[2106]},"id":2107,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":908,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:7"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":910,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2107,"sourceUnit":3713,"src":"127:37:7","symbolAliases":[{"foreign":{"id":909,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3712,"src":"135:4:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./math/SafeCast.sol","id":912,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2107,"sourceUnit":5478,"src":"165:45:7","symbolAliases":[{"foreign":{"id":911,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5477,"src":"173:8:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":914,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2107,"sourceUnit":5622,"src":"211:49:7","symbolAliases":[{"foreign":{"id":913,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5621,"src":"219:10:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":915,"nodeType":"StructuredDocumentation","src":"262:34:7","text":" @dev String operations."},"fullyImplemented":true,"id":2106,"linearizedBaseContracts":[2106],"name":"Strings","nameLocation":"305:7:7","nodeType":"ContractDefinition","nodes":[{"global":false,"id":917,"libraryName":{"id":916,"name":"SafeCast","nameLocations":["325:8:7"],"nodeType":"IdentifierPath","referencedDeclaration":5477,"src":"325:8:7"},"nodeType":"UsingForDirective","src":"319:21:7"},{"constant":true,"id":920,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"371:10:7","nodeType":"VariableDeclaration","scope":2106,"src":"346:56:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":918,"name":"bytes16","nodeType":"ElementaryTypeName","src":"346:7:7","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"384:18:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":923,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"431:14:7","nodeType":"VariableDeclaration","scope":2106,"src":"408:42:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":921,"name":"uint8","nodeType":"ElementaryTypeName","src":"408:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"448:2:7","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"documentation":{"id":924,"nodeType":"StructuredDocumentation","src":"457:81:7","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":930,"name":"StringsInsufficientHexLength","nameLocation":"549:28:7","nodeType":"ErrorDefinition","parameters":{"id":929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":926,"mutability":"mutable","name":"value","nameLocation":"586:5:7","nodeType":"VariableDeclaration","scope":930,"src":"578:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":925,"name":"uint256","nodeType":"ElementaryTypeName","src":"578:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":928,"mutability":"mutable","name":"length","nameLocation":"601:6:7","nodeType":"VariableDeclaration","scope":930,"src":"593:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":927,"name":"uint256","nodeType":"ElementaryTypeName","src":"593:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"577:31:7"},"src":"543:66:7"},{"documentation":{"id":931,"nodeType":"StructuredDocumentation","src":"615:108:7","text":" @dev The string being parsed contains characters that are not in scope of the given base."},"errorSelector":"94e2737e","id":933,"name":"StringsInvalidChar","nameLocation":"734:18:7","nodeType":"ErrorDefinition","parameters":{"id":932,"nodeType":"ParameterList","parameters":[],"src":"752:2:7"},"src":"728:27:7"},{"documentation":{"id":934,"nodeType":"StructuredDocumentation","src":"761:84:7","text":" @dev The string being parsed is not a properly formatted address."},"errorSelector":"1d15ae44","id":936,"name":"StringsInvalidAddressFormat","nameLocation":"856:27:7","nodeType":"ErrorDefinition","parameters":{"id":935,"nodeType":"ParameterList","parameters":[],"src":"883:2:7"},"src":"850:36:7"},{"body":{"id":983,"nodeType":"Block","src":"1058:561:7","statements":[{"id":982,"nodeType":"UncheckedBlock","src":"1068:545:7","statements":[{"assignments":[945],"declarations":[{"constant":false,"id":945,"mutability":"mutable","name":"length","nameLocation":"1100:6:7","nodeType":"VariableDeclaration","scope":982,"src":"1092:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":944,"name":"uint256","nodeType":"ElementaryTypeName","src":"1092:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":952,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":948,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":939,"src":"1120:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":946,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3712,"src":"1109:4:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3712_$","typeString":"type(library Math)"}},"id":947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1114:5:7","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":3484,"src":"1109:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1109:17:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1129:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1109:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1092:38:7"},{"assignments":[954],"declarations":[{"constant":false,"id":954,"mutability":"mutable","name":"buffer","nameLocation":"1158:6:7","nodeType":"VariableDeclaration","scope":982,"src":"1144:20:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":953,"name":"string","nodeType":"ElementaryTypeName","src":"1144:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":959,"initialValue":{"arguments":[{"id":957,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":945,"src":"1178:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":956,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1167:10:7","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":955,"name":"string","nodeType":"ElementaryTypeName","src":"1171:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1167:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1144:41:7"},{"assignments":[961],"declarations":[{"constant":false,"id":961,"mutability":"mutable","name":"ptr","nameLocation":"1207:3:7","nodeType":"VariableDeclaration","scope":982,"src":"1199:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":960,"name":"uint256","nodeType":"ElementaryTypeName","src":"1199:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":962,"nodeType":"VariableDeclarationStatement","src":"1199:11:7"},{"AST":{"nodeType":"YulBlock","src":"1249:67:7","statements":[{"nodeType":"YulAssignment","src":"1267:35:7","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"1278:6:7"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1290:2:7","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"1294:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1286:3:7"},"nodeType":"YulFunctionCall","src":"1286:15:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1274:3:7"},"nodeType":"YulFunctionCall","src":"1274:28:7"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"1267:3:7"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":954,"isOffset":false,"isSlot":false,"src":"1278:6:7","valueSize":1},{"declaration":945,"isOffset":false,"isSlot":false,"src":"1294:6:7","valueSize":1},{"declaration":961,"isOffset":false,"isSlot":false,"src":"1267:3:7","valueSize":1}],"flags":["memory-safe"],"id":963,"nodeType":"InlineAssembly","src":"1224:92:7"},{"body":{"id":978,"nodeType":"Block","src":"1342:234:7","statements":[{"expression":{"id":966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1360:5:7","subExpression":{"id":965,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"1360:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":967,"nodeType":"ExpressionStatement","src":"1360:5:7"},{"AST":{"nodeType":"YulBlock","src":"1408:86:7","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1438:3:7"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1452:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"1459:2:7","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"1448:3:7"},"nodeType":"YulFunctionCall","src":"1448:14:7"},{"name":"HEX_DIGITS","nodeType":"YulIdentifier","src":"1464:10:7"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"1443:4:7"},"nodeType":"YulFunctionCall","src":"1443:32:7"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"1430:7:7"},"nodeType":"YulFunctionCall","src":"1430:46:7"},"nodeType":"YulExpressionStatement","src":"1430:46:7"}]},"evmVersion":"paris","externalReferences":[{"declaration":920,"isOffset":false,"isSlot":false,"src":"1464:10:7","valueSize":1},{"declaration":961,"isOffset":false,"isSlot":false,"src":"1438:3:7","valueSize":1},{"declaration":939,"isOffset":false,"isSlot":false,"src":"1452:5:7","valueSize":1}],"flags":["memory-safe"],"id":968,"nodeType":"InlineAssembly","src":"1383:111:7"},{"expression":{"id":971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":969,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":939,"src":"1511:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1520:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1511:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":972,"nodeType":"ExpressionStatement","src":"1511:11:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":973,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":939,"src":"1544:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1553:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1544:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":977,"nodeType":"IfStatement","src":"1540:21:7","trueBody":{"id":976,"nodeType":"Break","src":"1556:5:7"}}]},"condition":{"hexValue":"74727565","id":964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1336:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":979,"nodeType":"WhileStatement","src":"1329:247:7"},{"expression":{"id":980,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"1596:6:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":943,"id":981,"nodeType":"Return","src":"1589:13:7"}]}]},"documentation":{"id":937,"nodeType":"StructuredDocumentation","src":"892:90:7","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":984,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"996:8:7","nodeType":"FunctionDefinition","parameters":{"id":940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":939,"mutability":"mutable","name":"value","nameLocation":"1013:5:7","nodeType":"VariableDeclaration","scope":984,"src":"1005:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":938,"name":"uint256","nodeType":"ElementaryTypeName","src":"1005:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1004:15:7"},"returnParameters":{"id":943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":942,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":984,"src":"1043:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":941,"name":"string","nodeType":"ElementaryTypeName","src":"1043:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1042:15:7"},"scope":2106,"src":"987:632:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1009,"nodeType":"Block","src":"1795:92:7","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":995,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"1826:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1834:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1826:9:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1844:2:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1826:20:7","trueExpression":{"hexValue":"2d","id":998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1838:3:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":1004,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"1872:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":1002,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5621,"src":"1857:10:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$5621_$","typeString":"type(library SignedMath)"}},"id":1003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1868:3:7","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":5620,"src":"1857:14:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":1005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1857:21:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1001,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"1848:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1848:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":993,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1812:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":992,"name":"string","nodeType":"ElementaryTypeName","src":"1812:6:7","typeDescriptions":{}}},"id":994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1819:6:7","memberName":"concat","nodeType":"MemberAccess","src":"1812:13:7","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":1007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1812:68:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":991,"id":1008,"nodeType":"Return","src":"1805:75:7"}]},"documentation":{"id":985,"nodeType":"StructuredDocumentation","src":"1625:89:7","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":1010,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"1728:14:7","nodeType":"FunctionDefinition","parameters":{"id":988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":987,"mutability":"mutable","name":"value","nameLocation":"1750:5:7","nodeType":"VariableDeclaration","scope":1010,"src":"1743:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":986,"name":"int256","nodeType":"ElementaryTypeName","src":"1743:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1742:14:7"},"returnParameters":{"id":991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":990,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1010,"src":"1780:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":989,"name":"string","nodeType":"ElementaryTypeName","src":"1780:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1779:15:7"},"scope":2106,"src":"1719:168:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1029,"nodeType":"Block","src":"2066:100:7","statements":[{"id":1028,"nodeType":"UncheckedBlock","src":"2076:84:7","statements":[{"expression":{"arguments":[{"id":1019,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"2119:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1022,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"2138:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1020,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3712,"src":"2126:4:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3712_$","typeString":"type(library Math)"}},"id":1021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2131:6:7","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":3655,"src":"2126:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2126:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2147:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2126:22:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1018,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1030,1113,1133],"referencedDeclaration":1113,"src":"2107:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2107:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1017,"id":1027,"nodeType":"Return","src":"2100:49:7"}]}]},"documentation":{"id":1011,"nodeType":"StructuredDocumentation","src":"1893:94:7","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":1030,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2001:11:7","nodeType":"FunctionDefinition","parameters":{"id":1014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1013,"mutability":"mutable","name":"value","nameLocation":"2021:5:7","nodeType":"VariableDeclaration","scope":1030,"src":"2013:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1012,"name":"uint256","nodeType":"ElementaryTypeName","src":"2013:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2012:15:7"},"returnParameters":{"id":1017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1016,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1030,"src":"2051:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1015,"name":"string","nodeType":"ElementaryTypeName","src":"2051:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2050:15:7"},"scope":2106,"src":"1992:174:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1112,"nodeType":"Block","src":"2379:435:7","statements":[{"assignments":[1041],"declarations":[{"constant":false,"id":1041,"mutability":"mutable","name":"localValue","nameLocation":"2397:10:7","nodeType":"VariableDeclaration","scope":1112,"src":"2389:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1040,"name":"uint256","nodeType":"ElementaryTypeName","src":"2389:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1043,"initialValue":{"id":1042,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"2410:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2389:26:7"},{"assignments":[1045],"declarations":[{"constant":false,"id":1045,"mutability":"mutable","name":"buffer","nameLocation":"2438:6:7","nodeType":"VariableDeclaration","scope":1112,"src":"2425:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1044,"name":"bytes","nodeType":"ElementaryTypeName","src":"2425:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1054,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2457:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1049,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1035,"src":"2461:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2457:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":1051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2470:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2457:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1047,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2447:9:7","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1046,"name":"bytes","nodeType":"ElementaryTypeName","src":"2451:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2447:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2425:47:7"},{"expression":{"id":1059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1055,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1045,"src":"2482:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1057,"indexExpression":{"hexValue":"30","id":1056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2489:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2482:9:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2494:3:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2482:15:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1060,"nodeType":"ExpressionStatement","src":"2482:15:7"},{"expression":{"id":1065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1061,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1045,"src":"2507:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1063,"indexExpression":{"hexValue":"31","id":1062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2514:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2507:9:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":1064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2519:3:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2507:15:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1066,"nodeType":"ExpressionStatement","src":"2507:15:7"},{"body":{"id":1095,"nodeType":"Block","src":"2577:95:7","statements":[{"expression":{"id":1089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1081,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1045,"src":"2591:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1083,"indexExpression":{"id":1082,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"2598:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2591:9:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1084,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"2603:10:7","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":1088,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1085,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"2614:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":1086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2627:3:7","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2614:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2603:28:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2591:40:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1090,"nodeType":"ExpressionStatement","src":"2591:40:7"},{"expression":{"id":1093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1091,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"2645:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2660:1:7","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2645:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1094,"nodeType":"ExpressionStatement","src":"2645:16:7"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1075,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"2565:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2569:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2565:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1096,"initializationExpression":{"assignments":[1068],"declarations":[{"constant":false,"id":1068,"mutability":"mutable","name":"i","nameLocation":"2545:1:7","nodeType":"VariableDeclaration","scope":1096,"src":"2537:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1067,"name":"uint256","nodeType":"ElementaryTypeName","src":"2537:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1074,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2549:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1070,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1035,"src":"2553:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2549:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2562:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2549:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2537:26:7"},"loopExpression":{"expression":{"id":1079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2572:3:7","subExpression":{"id":1078,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"2574:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1080,"nodeType":"ExpressionStatement","src":"2572:3:7"},"nodeType":"ForStatement","src":"2532:140:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1097,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"2685:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2699:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2685:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1106,"nodeType":"IfStatement","src":"2681:96:7","trueBody":{"id":1105,"nodeType":"Block","src":"2702:75:7","statements":[{"errorCall":{"arguments":[{"id":1101,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"2752:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1102,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1035,"src":"2759:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1100,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":930,"src":"2723:28:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":1103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:43:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1104,"nodeType":"RevertStatement","src":"2716:50:7"}]}},{"expression":{"arguments":[{"id":1109,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1045,"src":"2800:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2793:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1107,"name":"string","nodeType":"ElementaryTypeName","src":"2793:6:7","typeDescriptions":{}}},"id":1110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2793:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1039,"id":1111,"nodeType":"Return","src":"2786:21:7"}]},"documentation":{"id":1031,"nodeType":"StructuredDocumentation","src":"2172:112:7","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":1113,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2298:11:7","nodeType":"FunctionDefinition","parameters":{"id":1036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1033,"mutability":"mutable","name":"value","nameLocation":"2318:5:7","nodeType":"VariableDeclaration","scope":1113,"src":"2310:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1032,"name":"uint256","nodeType":"ElementaryTypeName","src":"2310:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1035,"mutability":"mutable","name":"length","nameLocation":"2333:6:7","nodeType":"VariableDeclaration","scope":1113,"src":"2325:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1034,"name":"uint256","nodeType":"ElementaryTypeName","src":"2325:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2309:31:7"},"returnParameters":{"id":1039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1038,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1113,"src":"2364:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1037,"name":"string","nodeType":"ElementaryTypeName","src":"2364:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2363:15:7"},"scope":2106,"src":"2289:525:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1132,"nodeType":"Block","src":"3046:75:7","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":1126,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1116,"src":"3091:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1125,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3083:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1124,"name":"uint160","nodeType":"ElementaryTypeName","src":"3083:7:7","typeDescriptions":{}}},"id":1127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3083:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1123,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3075:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1122,"name":"uint256","nodeType":"ElementaryTypeName","src":"3075:7:7","typeDescriptions":{}}},"id":1128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3075:22:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1129,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":923,"src":"3099:14:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1121,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1030,1113,1133],"referencedDeclaration":1113,"src":"3063:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3063:51:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1120,"id":1131,"nodeType":"Return","src":"3056:58:7"}]},"documentation":{"id":1114,"nodeType":"StructuredDocumentation","src":"2820:148:7","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":1133,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2982:11:7","nodeType":"FunctionDefinition","parameters":{"id":1117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1116,"mutability":"mutable","name":"addr","nameLocation":"3002:4:7","nodeType":"VariableDeclaration","scope":1133,"src":"2994:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1115,"name":"address","nodeType":"ElementaryTypeName","src":"2994:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2993:14:7"},"returnParameters":{"id":1120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1119,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1133,"src":"3031:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1118,"name":"string","nodeType":"ElementaryTypeName","src":"3031:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3030:15:7"},"scope":2106,"src":"2973:148:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1197,"nodeType":"Block","src":"3378:642:7","statements":[{"assignments":[1142],"declarations":[{"constant":false,"id":1142,"mutability":"mutable","name":"buffer","nameLocation":"3401:6:7","nodeType":"VariableDeclaration","scope":1197,"src":"3388:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1141,"name":"bytes","nodeType":"ElementaryTypeName","src":"3388:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1149,"initialValue":{"arguments":[{"arguments":[{"id":1146,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1136,"src":"3428:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1145,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1030,1113,1133],"referencedDeclaration":1133,"src":"3416:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":1147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3416:17:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1144,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3410:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1143,"name":"bytes","nodeType":"ElementaryTypeName","src":"3410:5:7","typeDescriptions":{}}},"id":1148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3410:24:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3388:46:7"},{"assignments":[1151],"declarations":[{"constant":false,"id":1151,"mutability":"mutable","name":"hashValue","nameLocation":"3527:9:7","nodeType":"VariableDeclaration","scope":1197,"src":"3519:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1150,"name":"uint256","nodeType":"ElementaryTypeName","src":"3519:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1152,"nodeType":"VariableDeclarationStatement","src":"3519:17:7"},{"AST":{"nodeType":"YulBlock","src":"3571:78:7","statements":[{"nodeType":"YulAssignment","src":"3585:54:7","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3602:2:7","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"3620:6:7"},{"kind":"number","nodeType":"YulLiteral","src":"3628:4:7","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3616:3:7"},"nodeType":"YulFunctionCall","src":"3616:17:7"},{"kind":"number","nodeType":"YulLiteral","src":"3635:2:7","type":"","value":"40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3606:9:7"},"nodeType":"YulFunctionCall","src":"3606:32:7"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3598:3:7"},"nodeType":"YulFunctionCall","src":"3598:41:7"},"variableNames":[{"name":"hashValue","nodeType":"YulIdentifier","src":"3585:9:7"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1142,"isOffset":false,"isSlot":false,"src":"3620:6:7","valueSize":1},{"declaration":1151,"isOffset":false,"isSlot":false,"src":"3585:9:7","valueSize":1}],"flags":["memory-safe"],"id":1153,"nodeType":"InlineAssembly","src":"3546:103:7"},{"body":{"id":1190,"nodeType":"Block","src":"3692:291:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1164,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"3798:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":1165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3810:3:7","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"3798:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":1167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3816:1:7","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"3798:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":1171,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"3827:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1173,"indexExpression":{"id":1172,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1155,"src":"3834:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3827:9:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":1170,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3821:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1169,"name":"uint8","nodeType":"ElementaryTypeName","src":"3821:5:7","typeDescriptions":{}}},"id":1174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3821:16:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":1175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3840:2:7","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"3821:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3798:44:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1185,"nodeType":"IfStatement","src":"3794:150:7","trueBody":{"id":1184,"nodeType":"Block","src":"3844:100:7","statements":[{"expression":{"id":1182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1178,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"3912:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1180,"indexExpression":{"id":1179,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1155,"src":"3919:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3912:9:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":1181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3925:4:7","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"3912:17:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1183,"nodeType":"ExpressionStatement","src":"3912:17:7"}]}},{"expression":{"id":1188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1186,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"3957:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3971:1:7","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"3957:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1189,"nodeType":"ExpressionStatement","src":"3957:15:7"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1158,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1155,"src":"3680:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3684:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3680:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1191,"initializationExpression":{"assignments":[1155],"declarations":[{"constant":false,"id":1155,"mutability":"mutable","name":"i","nameLocation":"3672:1:7","nodeType":"VariableDeclaration","scope":1191,"src":"3664:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1154,"name":"uint256","nodeType":"ElementaryTypeName","src":"3664:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1157,"initialValue":{"hexValue":"3431","id":1156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3676:2:7","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3664:14:7"},"loopExpression":{"expression":{"id":1162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"3687:3:7","subExpression":{"id":1161,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1155,"src":"3689:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1163,"nodeType":"ExpressionStatement","src":"3687:3:7"},"nodeType":"ForStatement","src":"3659:324:7"},{"expression":{"arguments":[{"id":1194,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"4006:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1193,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3999:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1192,"name":"string","nodeType":"ElementaryTypeName","src":"3999:6:7","typeDescriptions":{}}},"id":1195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3999:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1140,"id":1196,"nodeType":"Return","src":"3992:21:7"}]},"documentation":{"id":1134,"nodeType":"StructuredDocumentation","src":"3127:165:7","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":1198,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"3306:19:7","nodeType":"FunctionDefinition","parameters":{"id":1137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1136,"mutability":"mutable","name":"addr","nameLocation":"3334:4:7","nodeType":"VariableDeclaration","scope":1198,"src":"3326:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1135,"name":"address","nodeType":"ElementaryTypeName","src":"3326:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3325:14:7"},"returnParameters":{"id":1140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1139,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1198,"src":"3363:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1138,"name":"string","nodeType":"ElementaryTypeName","src":"3363:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3362:15:7"},"scope":2106,"src":"3297:723:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1234,"nodeType":"Block","src":"4175:104:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1210,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1201,"src":"4198:1:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1209,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4192:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1208,"name":"bytes","nodeType":"ElementaryTypeName","src":"4192:5:7","typeDescriptions":{}}},"id":1211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4192:8:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4201:6:7","memberName":"length","nodeType":"MemberAccess","src":"4192:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1215,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"4217:1:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1214,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4211:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1213,"name":"bytes","nodeType":"ElementaryTypeName","src":"4211:5:7","typeDescriptions":{}}},"id":1216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4211:8:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4220:6:7","memberName":"length","nodeType":"MemberAccess","src":"4211:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4192:34:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1222,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1201,"src":"4246:1:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1221,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4240:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1220,"name":"bytes","nodeType":"ElementaryTypeName","src":"4240:5:7","typeDescriptions":{}}},"id":1223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4240:8:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1219,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4230:9:7","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4230:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":1228,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"4269:1:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1227,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4263:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1226,"name":"bytes","nodeType":"ElementaryTypeName","src":"4263:5:7","typeDescriptions":{}}},"id":1229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4263:8:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1225,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4253:9:7","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4253:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4230:42:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4192:80:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1207,"id":1233,"nodeType":"Return","src":"4185:87:7"}]},"documentation":{"id":1199,"nodeType":"StructuredDocumentation","src":"4026:66:7","text":" @dev Returns true if the two strings are equal."},"id":1235,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"4106:5:7","nodeType":"FunctionDefinition","parameters":{"id":1204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1201,"mutability":"mutable","name":"a","nameLocation":"4126:1:7","nodeType":"VariableDeclaration","scope":1235,"src":"4112:15:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1200,"name":"string","nodeType":"ElementaryTypeName","src":"4112:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1203,"mutability":"mutable","name":"b","nameLocation":"4143:1:7","nodeType":"VariableDeclaration","scope":1235,"src":"4129:15:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1202,"name":"string","nodeType":"ElementaryTypeName","src":"4129:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4111:34:7"},"returnParameters":{"id":1207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1206,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1235,"src":"4169:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1205,"name":"bool","nodeType":"ElementaryTypeName","src":"4169:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4168:6:7"},"scope":2106,"src":"4097:182:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1253,"nodeType":"Block","src":"4576:64:7","statements":[{"expression":{"arguments":[{"id":1244,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1238,"src":"4603:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4610:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1248,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1238,"src":"4619:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1247,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4613:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1246,"name":"bytes","nodeType":"ElementaryTypeName","src":"4613:5:7","typeDescriptions":{}}},"id":1249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4613:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4626:6:7","memberName":"length","nodeType":"MemberAccess","src":"4613:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1243,"name":"parseUint","nodeType":"Identifier","overloadedDeclarations":[1254,1285],"referencedDeclaration":1285,"src":"4593:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":1251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4593:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1242,"id":1252,"nodeType":"Return","src":"4586:47:7"}]},"documentation":{"id":1236,"nodeType":"StructuredDocumentation","src":"4285:214:7","text":" @dev Parse a decimal string and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":1254,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4513:9:7","nodeType":"FunctionDefinition","parameters":{"id":1239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1238,"mutability":"mutable","name":"input","nameLocation":"4537:5:7","nodeType":"VariableDeclaration","scope":1254,"src":"4523:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1237,"name":"string","nodeType":"ElementaryTypeName","src":"4523:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4522:21:7"},"returnParameters":{"id":1242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1241,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1254,"src":"4567:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1240,"name":"uint256","nodeType":"ElementaryTypeName","src":"4567:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4566:9:7"},"scope":2106,"src":"4504:136:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1284,"nodeType":"Block","src":"5038:153:7","statements":[{"assignments":[1267,1269],"declarations":[{"constant":false,"id":1267,"mutability":"mutable","name":"success","nameLocation":"5054:7:7","nodeType":"VariableDeclaration","scope":1284,"src":"5049:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1266,"name":"bool","nodeType":"ElementaryTypeName","src":"5049:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1269,"mutability":"mutable","name":"value","nameLocation":"5071:5:7","nodeType":"VariableDeclaration","scope":1284,"src":"5063:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1268,"name":"uint256","nodeType":"ElementaryTypeName","src":"5063:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1275,"initialValue":{"arguments":[{"id":1271,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"5093:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1272,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1259,"src":"5100:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1273,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1261,"src":"5107:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1270,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[1306,1343],"referencedDeclaration":1343,"src":"5080:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5080:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5048:63:7"},{"condition":{"id":1277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5125:8:7","subExpression":{"id":1276,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1267,"src":"5126:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1281,"nodeType":"IfStatement","src":"5121:41:7","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1278,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":933,"src":"5142:18:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5142:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1280,"nodeType":"RevertStatement","src":"5135:27:7"}},{"expression":{"id":1282,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1269,"src":"5179:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1265,"id":1283,"nodeType":"Return","src":"5172:12:7"}]},"documentation":{"id":1255,"nodeType":"StructuredDocumentation","src":"4646:287:7","text":" @dev Variant of {parseUint} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":1285,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4947:9:7","nodeType":"FunctionDefinition","parameters":{"id":1262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1257,"mutability":"mutable","name":"input","nameLocation":"4971:5:7","nodeType":"VariableDeclaration","scope":1285,"src":"4957:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1256,"name":"string","nodeType":"ElementaryTypeName","src":"4957:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1259,"mutability":"mutable","name":"begin","nameLocation":"4986:5:7","nodeType":"VariableDeclaration","scope":1285,"src":"4978:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1258,"name":"uint256","nodeType":"ElementaryTypeName","src":"4978:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1261,"mutability":"mutable","name":"end","nameLocation":"5001:3:7","nodeType":"VariableDeclaration","scope":1285,"src":"4993:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1260,"name":"uint256","nodeType":"ElementaryTypeName","src":"4993:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4956:49:7"},"returnParameters":{"id":1265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1264,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1285,"src":"5029:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1263,"name":"uint256","nodeType":"ElementaryTypeName","src":"5029:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5028:9:7"},"scope":2106,"src":"4938:253:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1305,"nodeType":"Block","src":"5512:83:7","statements":[{"expression":{"arguments":[{"id":1296,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1288,"src":"5558:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5565:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1300,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1288,"src":"5574:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1299,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5568:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1298,"name":"bytes","nodeType":"ElementaryTypeName","src":"5568:5:7","typeDescriptions":{}}},"id":1301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5568:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5581:6:7","memberName":"length","nodeType":"MemberAccess","src":"5568:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1295,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1413,"src":"5529:28:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5529:59:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1294,"id":1304,"nodeType":"Return","src":"5522:66:7"}]},"documentation":{"id":1286,"nodeType":"StructuredDocumentation","src":"5197:215:7","text":" @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":1306,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5426:12:7","nodeType":"FunctionDefinition","parameters":{"id":1289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1288,"mutability":"mutable","name":"input","nameLocation":"5453:5:7","nodeType":"VariableDeclaration","scope":1306,"src":"5439:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1287,"name":"string","nodeType":"ElementaryTypeName","src":"5439:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5438:21:7"},"returnParameters":{"id":1294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1291,"mutability":"mutable","name":"success","nameLocation":"5488:7:7","nodeType":"VariableDeclaration","scope":1306,"src":"5483:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1290,"name":"bool","nodeType":"ElementaryTypeName","src":"5483:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1293,"mutability":"mutable","name":"value","nameLocation":"5505:5:7","nodeType":"VariableDeclaration","scope":1306,"src":"5497:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1292,"name":"uint256","nodeType":"ElementaryTypeName","src":"5497:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5482:29:7"},"scope":2106,"src":"5417:178:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1342,"nodeType":"Block","src":"5997:144:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1320,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1313,"src":"6011:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1323,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"6023:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1322,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6017:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1321,"name":"bytes","nodeType":"ElementaryTypeName","src":"6017:5:7","typeDescriptions":{}}},"id":1324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6017:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6030:6:7","memberName":"length","nodeType":"MemberAccess","src":"6017:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6011:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1327,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1311,"src":"6040:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1328,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1313,"src":"6048:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6040:11:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6011:40:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1335,"nodeType":"IfStatement","src":"6007:63:7","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6061:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6068:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1333,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6060:10:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1319,"id":1334,"nodeType":"Return","src":"6053:17:7"}},{"expression":{"arguments":[{"id":1337,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"6116:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1338,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1311,"src":"6123:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1339,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1313,"src":"6130:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1336,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1413,"src":"6087:28:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6087:47:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1319,"id":1341,"nodeType":"Return","src":"6080:54:7"}]},"documentation":{"id":1307,"nodeType":"StructuredDocumentation","src":"5601:238:7","text":" @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":1343,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5853:12:7","nodeType":"FunctionDefinition","parameters":{"id":1314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1309,"mutability":"mutable","name":"input","nameLocation":"5889:5:7","nodeType":"VariableDeclaration","scope":1343,"src":"5875:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1308,"name":"string","nodeType":"ElementaryTypeName","src":"5875:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1311,"mutability":"mutable","name":"begin","nameLocation":"5912:5:7","nodeType":"VariableDeclaration","scope":1343,"src":"5904:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1310,"name":"uint256","nodeType":"ElementaryTypeName","src":"5904:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1313,"mutability":"mutable","name":"end","nameLocation":"5935:3:7","nodeType":"VariableDeclaration","scope":1343,"src":"5927:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1312,"name":"uint256","nodeType":"ElementaryTypeName","src":"5927:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5865:79:7"},"returnParameters":{"id":1319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1316,"mutability":"mutable","name":"success","nameLocation":"5973:7:7","nodeType":"VariableDeclaration","scope":1343,"src":"5968:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1315,"name":"bool","nodeType":"ElementaryTypeName","src":"5968:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1318,"mutability":"mutable","name":"value","nameLocation":"5990:5:7","nodeType":"VariableDeclaration","scope":1343,"src":"5982:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1317,"name":"uint256","nodeType":"ElementaryTypeName","src":"5982:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5967:29:7"},"scope":2106,"src":"5844:297:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1412,"nodeType":"Block","src":"6521:347:7","statements":[{"assignments":[1358],"declarations":[{"constant":false,"id":1358,"mutability":"mutable","name":"buffer","nameLocation":"6544:6:7","nodeType":"VariableDeclaration","scope":1412,"src":"6531:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1357,"name":"bytes","nodeType":"ElementaryTypeName","src":"6531:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1363,"initialValue":{"arguments":[{"id":1361,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1346,"src":"6559:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1360,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6553:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1359,"name":"bytes","nodeType":"ElementaryTypeName","src":"6553:5:7","typeDescriptions":{}}},"id":1362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6553:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6531:34:7"},{"assignments":[1365],"declarations":[{"constant":false,"id":1365,"mutability":"mutable","name":"result","nameLocation":"6584:6:7","nodeType":"VariableDeclaration","scope":1412,"src":"6576:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1364,"name":"uint256","nodeType":"ElementaryTypeName","src":"6576:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1367,"initialValue":{"hexValue":"30","id":1366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6593:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6576:18:7"},{"body":{"id":1406,"nodeType":"Block","src":"6642:189:7","statements":[{"assignments":[1379],"declarations":[{"constant":false,"id":1379,"mutability":"mutable","name":"chr","nameLocation":"6662:3:7","nodeType":"VariableDeclaration","scope":1406,"src":"6656:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1378,"name":"uint8","nodeType":"ElementaryTypeName","src":"6656:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1389,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":1384,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1358,"src":"6711:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1385,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1369,"src":"6719:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1383,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2105,"src":"6688:22:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":1386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6688:33:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1382,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6681:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":1381,"name":"bytes1","nodeType":"ElementaryTypeName","src":"6681:6:7","typeDescriptions":{}}},"id":1387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6681:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":1380,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2093,"src":"6668:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":1388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6668:55:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"6656:67:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1390,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1379,"src":"6741:3:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"39","id":1391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6747:1:7","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"6741:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1397,"nodeType":"IfStatement","src":"6737:30:7","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6758:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6765:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1395,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6757:10:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1356,"id":1396,"nodeType":"Return","src":"6750:17:7"}},{"expression":{"id":1400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1398,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1365,"src":"6781:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3130","id":1399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6791:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"6781:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1401,"nodeType":"ExpressionStatement","src":"6781:12:7"},{"expression":{"id":1404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1402,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1365,"src":"6807:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1403,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1379,"src":"6817:3:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6807:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1405,"nodeType":"ExpressionStatement","src":"6807:13:7"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1372,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1369,"src":"6628:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1373,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1350,"src":"6632:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6628:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1407,"initializationExpression":{"assignments":[1369],"declarations":[{"constant":false,"id":1369,"mutability":"mutable","name":"i","nameLocation":"6617:1:7","nodeType":"VariableDeclaration","scope":1407,"src":"6609:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1368,"name":"uint256","nodeType":"ElementaryTypeName","src":"6609:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1371,"initialValue":{"id":1370,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1348,"src":"6621:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6609:17:7"},"loopExpression":{"expression":{"id":1376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6637:3:7","subExpression":{"id":1375,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1369,"src":"6639:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1377,"nodeType":"ExpressionStatement","src":"6637:3:7"},"nodeType":"ForStatement","src":"6604:227:7"},{"expression":{"components":[{"hexValue":"74727565","id":1408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6848:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":1409,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1365,"src":"6854:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1410,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6847:14:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1356,"id":1411,"nodeType":"Return","src":"6840:21:7"}]},"documentation":{"id":1344,"nodeType":"StructuredDocumentation","src":"6147:201:7","text":" @dev Implementation of {tryParseUint} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":1413,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseUintUncheckedBounds","nameLocation":"6362:28:7","nodeType":"FunctionDefinition","parameters":{"id":1351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1346,"mutability":"mutable","name":"input","nameLocation":"6414:5:7","nodeType":"VariableDeclaration","scope":1413,"src":"6400:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1345,"name":"string","nodeType":"ElementaryTypeName","src":"6400:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1348,"mutability":"mutable","name":"begin","nameLocation":"6437:5:7","nodeType":"VariableDeclaration","scope":1413,"src":"6429:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1347,"name":"uint256","nodeType":"ElementaryTypeName","src":"6429:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1350,"mutability":"mutable","name":"end","nameLocation":"6460:3:7","nodeType":"VariableDeclaration","scope":1413,"src":"6452:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1349,"name":"uint256","nodeType":"ElementaryTypeName","src":"6452:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6390:79:7"},"returnParameters":{"id":1356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1353,"mutability":"mutable","name":"success","nameLocation":"6497:7:7","nodeType":"VariableDeclaration","scope":1413,"src":"6492:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1352,"name":"bool","nodeType":"ElementaryTypeName","src":"6492:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1355,"mutability":"mutable","name":"value","nameLocation":"6514:5:7","nodeType":"VariableDeclaration","scope":1413,"src":"6506:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1354,"name":"uint256","nodeType":"ElementaryTypeName","src":"6506:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6491:29:7"},"scope":2106,"src":"6353:515:7","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1431,"nodeType":"Block","src":"7165:63:7","statements":[{"expression":{"arguments":[{"id":1422,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1416,"src":"7191:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7198:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1426,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1416,"src":"7207:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1425,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7201:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1424,"name":"bytes","nodeType":"ElementaryTypeName","src":"7201:5:7","typeDescriptions":{}}},"id":1427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7201:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7214:6:7","memberName":"length","nodeType":"MemberAccess","src":"7201:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1421,"name":"parseInt","nodeType":"Identifier","overloadedDeclarations":[1432,1463],"referencedDeclaration":1463,"src":"7182:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (int256)"}},"id":1429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7182:39:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":1420,"id":1430,"nodeType":"Return","src":"7175:46:7"}]},"documentation":{"id":1414,"nodeType":"StructuredDocumentation","src":"6874:216:7","text":" @dev Parse a decimal string and returns the value as a `int256`.\n Requirements:\n - The string must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":1432,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7104:8:7","nodeType":"FunctionDefinition","parameters":{"id":1417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1416,"mutability":"mutable","name":"input","nameLocation":"7127:5:7","nodeType":"VariableDeclaration","scope":1432,"src":"7113:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1415,"name":"string","nodeType":"ElementaryTypeName","src":"7113:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7112:21:7"},"returnParameters":{"id":1420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1419,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1432,"src":"7157:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1418,"name":"int256","nodeType":"ElementaryTypeName","src":"7157:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7156:8:7"},"scope":2106,"src":"7095:133:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1462,"nodeType":"Block","src":"7633:151:7","statements":[{"assignments":[1445,1447],"declarations":[{"constant":false,"id":1445,"mutability":"mutable","name":"success","nameLocation":"7649:7:7","nodeType":"VariableDeclaration","scope":1462,"src":"7644:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1444,"name":"bool","nodeType":"ElementaryTypeName","src":"7644:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1447,"mutability":"mutable","name":"value","nameLocation":"7665:5:7","nodeType":"VariableDeclaration","scope":1462,"src":"7658:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1446,"name":"int256","nodeType":"ElementaryTypeName","src":"7658:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":1453,"initialValue":{"arguments":[{"id":1449,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"7686:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1450,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1437,"src":"7693:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1451,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1439,"src":"7700:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1448,"name":"tryParseInt","nodeType":"Identifier","overloadedDeclarations":[1484,1526],"referencedDeclaration":1526,"src":"7674:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":1452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7674:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"nodeType":"VariableDeclarationStatement","src":"7643:61:7"},{"condition":{"id":1455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7718:8:7","subExpression":{"id":1454,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1445,"src":"7719:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1459,"nodeType":"IfStatement","src":"7714:41:7","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1456,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":933,"src":"7735:18:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7735:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1458,"nodeType":"RevertStatement","src":"7728:27:7"}},{"expression":{"id":1460,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"7772:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":1443,"id":1461,"nodeType":"Return","src":"7765:12:7"}]},"documentation":{"id":1433,"nodeType":"StructuredDocumentation","src":"7234:296:7","text":" @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":1463,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7544:8:7","nodeType":"FunctionDefinition","parameters":{"id":1440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1435,"mutability":"mutable","name":"input","nameLocation":"7567:5:7","nodeType":"VariableDeclaration","scope":1463,"src":"7553:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1434,"name":"string","nodeType":"ElementaryTypeName","src":"7553:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1437,"mutability":"mutable","name":"begin","nameLocation":"7582:5:7","nodeType":"VariableDeclaration","scope":1463,"src":"7574:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1436,"name":"uint256","nodeType":"ElementaryTypeName","src":"7574:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1439,"mutability":"mutable","name":"end","nameLocation":"7597:3:7","nodeType":"VariableDeclaration","scope":1463,"src":"7589:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1438,"name":"uint256","nodeType":"ElementaryTypeName","src":"7589:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7552:49:7"},"returnParameters":{"id":1443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1442,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1463,"src":"7625:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1441,"name":"int256","nodeType":"ElementaryTypeName","src":"7625:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7624:8:7"},"scope":2106,"src":"7535:249:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1483,"nodeType":"Block","src":"8175:82:7","statements":[{"expression":{"arguments":[{"id":1474,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1466,"src":"8220:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8227:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1478,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1466,"src":"8236:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1477,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8230:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1476,"name":"bytes","nodeType":"ElementaryTypeName","src":"8230:5:7","typeDescriptions":{}}},"id":1479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8230:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8243:6:7","memberName":"length","nodeType":"MemberAccess","src":"8230:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1473,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"8192:27:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":1481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8192:58:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":1472,"id":1482,"nodeType":"Return","src":"8185:65:7"}]},"documentation":{"id":1464,"nodeType":"StructuredDocumentation","src":"7790:287:7","text":" @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":1484,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8091:11:7","nodeType":"FunctionDefinition","parameters":{"id":1467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1466,"mutability":"mutable","name":"input","nameLocation":"8117:5:7","nodeType":"VariableDeclaration","scope":1484,"src":"8103:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1465,"name":"string","nodeType":"ElementaryTypeName","src":"8103:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8102:21:7"},"returnParameters":{"id":1472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1469,"mutability":"mutable","name":"success","nameLocation":"8152:7:7","nodeType":"VariableDeclaration","scope":1484,"src":"8147:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1468,"name":"bool","nodeType":"ElementaryTypeName","src":"8147:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1471,"mutability":"mutable","name":"value","nameLocation":"8168:5:7","nodeType":"VariableDeclaration","scope":1484,"src":"8161:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1470,"name":"int256","nodeType":"ElementaryTypeName","src":"8161:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8146:28:7"},"scope":2106,"src":"8082:175:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"constant":true,"id":1489,"mutability":"constant","name":"ABS_MIN_INT256","nameLocation":"8288:14:7","nodeType":"VariableDeclaration","scope":2106,"src":"8263:50:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1485,"name":"uint256","nodeType":"ElementaryTypeName","src":"8263:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":1488,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8305:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323535","id":1487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8310:3:7","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"8305:8:7","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"visibility":"private"},{"body":{"id":1525,"nodeType":"Block","src":"8779:143:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1503,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"8793:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1506,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"8805:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1505,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8799:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1504,"name":"bytes","nodeType":"ElementaryTypeName","src":"8799:5:7","typeDescriptions":{}}},"id":1507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8799:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8812:6:7","memberName":"length","nodeType":"MemberAccess","src":"8799:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8793:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1510,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"8822:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1511,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"8830:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8822:11:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8793:40:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1518,"nodeType":"IfStatement","src":"8789:63:7","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8843:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8850:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1516,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"8842:10:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1502,"id":1517,"nodeType":"Return","src":"8835:17:7"}},{"expression":{"arguments":[{"id":1520,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"8897:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1521,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"8904:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1522,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"8911:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1519,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"8869:27:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":1523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8869:46:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":1502,"id":1524,"nodeType":"Return","src":"8862:53:7"}]},"documentation":{"id":1490,"nodeType":"StructuredDocumentation","src":"8320:303:7","text":" @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character or if the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":1526,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8637:11:7","nodeType":"FunctionDefinition","parameters":{"id":1497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1492,"mutability":"mutable","name":"input","nameLocation":"8672:5:7","nodeType":"VariableDeclaration","scope":1526,"src":"8658:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1491,"name":"string","nodeType":"ElementaryTypeName","src":"8658:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1494,"mutability":"mutable","name":"begin","nameLocation":"8695:5:7","nodeType":"VariableDeclaration","scope":1526,"src":"8687:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1493,"name":"uint256","nodeType":"ElementaryTypeName","src":"8687:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1496,"mutability":"mutable","name":"end","nameLocation":"8718:3:7","nodeType":"VariableDeclaration","scope":1526,"src":"8710:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1495,"name":"uint256","nodeType":"ElementaryTypeName","src":"8710:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8648:79:7"},"returnParameters":{"id":1502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1499,"mutability":"mutable","name":"success","nameLocation":"8756:7:7","nodeType":"VariableDeclaration","scope":1526,"src":"8751:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1498,"name":"bool","nodeType":"ElementaryTypeName","src":"8751:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1501,"mutability":"mutable","name":"value","nameLocation":"8772:5:7","nodeType":"VariableDeclaration","scope":1526,"src":"8765:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1500,"name":"int256","nodeType":"ElementaryTypeName","src":"8765:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8750:28:7"},"scope":2106,"src":"8628:294:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1646,"nodeType":"Block","src":"9299:812:7","statements":[{"assignments":[1541],"declarations":[{"constant":false,"id":1541,"mutability":"mutable","name":"buffer","nameLocation":"9322:6:7","nodeType":"VariableDeclaration","scope":1646,"src":"9309:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1540,"name":"bytes","nodeType":"ElementaryTypeName","src":"9309:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1546,"initialValue":{"arguments":[{"id":1544,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1529,"src":"9337:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1543,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9331:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1542,"name":"bytes","nodeType":"ElementaryTypeName","src":"9331:5:7","typeDescriptions":{}}},"id":1545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9331:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9309:34:7"},{"assignments":[1548],"declarations":[{"constant":false,"id":1548,"mutability":"mutable","name":"sign","nameLocation":"9407:4:7","nodeType":"VariableDeclaration","scope":1646,"src":"9400:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":1547,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9400:6:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":1564,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1549,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"9414:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1550,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1533,"src":"9423:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9414:12:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"arguments":[{"id":1559,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1541,"src":"9471:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1560,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"9479:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1558,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2105,"src":"9448:22:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":1561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9448:37:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1557,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9441:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":1556,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9441:6:7","typeDescriptions":{}}},"id":1562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9441:45:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9414:72:7","trueExpression":{"arguments":[{"hexValue":"30","id":1554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9436:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1553,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9429:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":1552,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9429:6:7","typeDescriptions":{}}},"id":1555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9429:9:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"9400:86:7"},{"assignments":[1566],"declarations":[{"constant":false,"id":1566,"mutability":"mutable","name":"positiveSign","nameLocation":"9572:12:7","nodeType":"VariableDeclaration","scope":1646,"src":"9567:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1565,"name":"bool","nodeType":"ElementaryTypeName","src":"9567:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1573,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":1572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1567,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1548,"src":"9587:4:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2b","id":1570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9602:3:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""},"value":"+"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""}],"id":1569,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9595:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":1568,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9595:6:7","typeDescriptions":{}}},"id":1571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9595:11:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9587:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9567:39:7"},{"assignments":[1575],"declarations":[{"constant":false,"id":1575,"mutability":"mutable","name":"negativeSign","nameLocation":"9621:12:7","nodeType":"VariableDeclaration","scope":1646,"src":"9616:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1574,"name":"bool","nodeType":"ElementaryTypeName","src":"9616:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1582,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":1581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1576,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1548,"src":"9636:4:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2d","id":1579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9651:3:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""}],"id":1578,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9644:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":1577,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9644:6:7","typeDescriptions":{}}},"id":1580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9644:11:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9636:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9616:39:7"},{"assignments":[1584],"declarations":[{"constant":false,"id":1584,"mutability":"mutable","name":"offset","nameLocation":"9673:6:7","nodeType":"VariableDeclaration","scope":1646,"src":"9665:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1583,"name":"uint256","nodeType":"ElementaryTypeName","src":"9665:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1591,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1585,"name":"positiveSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1566,"src":"9683:12:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":1586,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1575,"src":"9699:12:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9683:28:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1588,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9682:30:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9713:6:7","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5476,"src":"9682:37:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":1590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9682:39:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9665:56:7"},{"assignments":[1593,1595],"declarations":[{"constant":false,"id":1593,"mutability":"mutable","name":"absSuccess","nameLocation":"9738:10:7","nodeType":"VariableDeclaration","scope":1646,"src":"9733:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1592,"name":"bool","nodeType":"ElementaryTypeName","src":"9733:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1595,"mutability":"mutable","name":"absValue","nameLocation":"9758:8:7","nodeType":"VariableDeclaration","scope":1646,"src":"9750:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1594,"name":"uint256","nodeType":"ElementaryTypeName","src":"9750:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1603,"initialValue":{"arguments":[{"id":1597,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1529,"src":"9783:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1598,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"9790:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1599,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1584,"src":"9798:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9790:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1601,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1533,"src":"9806:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1596,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[1306,1343],"referencedDeclaration":1343,"src":"9770:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9770:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"9732:78:7"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1604,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1593,"src":"9825:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1605,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1595,"src":"9839:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1606,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1489,"src":"9850:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9839:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9825:39:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1624,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1593,"src":"9967:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":1625,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1575,"src":"9981:12:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9967:26:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1627,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1595,"src":"9997:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1628,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1489,"src":"10009:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9997:26:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9967:56:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10095:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10102:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1642,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10094:10:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1539,"id":1643,"nodeType":"Return","src":"10087:17:7"},"id":1644,"nodeType":"IfStatement","src":"9963:141:7","trueBody":{"id":1639,"nodeType":"Block","src":"10025:56:7","statements":[{"expression":{"components":[{"hexValue":"74727565","id":1631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10047:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"arguments":[{"id":1634,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10058:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":1633,"name":"int256","nodeType":"ElementaryTypeName","src":"10058:6:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":1632,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10053:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10053:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":1636,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10066:3:7","memberName":"min","nodeType":"MemberAccess","src":"10053:16:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1637,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10046:24:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":1539,"id":1638,"nodeType":"Return","src":"10039:31:7"}]}},"id":1645,"nodeType":"IfStatement","src":"9821:283:7","trueBody":{"id":1623,"nodeType":"Block","src":"9866:91:7","statements":[{"expression":{"components":[{"hexValue":"74727565","id":1609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9888:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"condition":{"id":1610,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1575,"src":"9894:12:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":1618,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1595,"src":"9936:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1617,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9929:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":1616,"name":"int256","nodeType":"ElementaryTypeName","src":"9929:6:7","typeDescriptions":{}}},"id":1619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9929:16:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9894:51:7","trueExpression":{"id":1615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"9909:17:7","subExpression":{"arguments":[{"id":1613,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1595,"src":"9917:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1612,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9910:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":1611,"name":"int256","nodeType":"ElementaryTypeName","src":"9910:6:7","typeDescriptions":{}}},"id":1614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9910:16:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1621,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9887:59:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":1539,"id":1622,"nodeType":"Return","src":"9880:66:7"}]}}]},"documentation":{"id":1527,"nodeType":"StructuredDocumentation","src":"8928:200:7","text":" @dev Implementation of {tryParseInt} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":1647,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseIntUncheckedBounds","nameLocation":"9142:27:7","nodeType":"FunctionDefinition","parameters":{"id":1534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1529,"mutability":"mutable","name":"input","nameLocation":"9193:5:7","nodeType":"VariableDeclaration","scope":1647,"src":"9179:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1528,"name":"string","nodeType":"ElementaryTypeName","src":"9179:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1531,"mutability":"mutable","name":"begin","nameLocation":"9216:5:7","nodeType":"VariableDeclaration","scope":1647,"src":"9208:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1530,"name":"uint256","nodeType":"ElementaryTypeName","src":"9208:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1533,"mutability":"mutable","name":"end","nameLocation":"9239:3:7","nodeType":"VariableDeclaration","scope":1647,"src":"9231:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1532,"name":"uint256","nodeType":"ElementaryTypeName","src":"9231:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9169:79:7"},"returnParameters":{"id":1539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1536,"mutability":"mutable","name":"success","nameLocation":"9276:7:7","nodeType":"VariableDeclaration","scope":1647,"src":"9271:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1535,"name":"bool","nodeType":"ElementaryTypeName","src":"9271:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1538,"mutability":"mutable","name":"value","nameLocation":"9292:5:7","nodeType":"VariableDeclaration","scope":1647,"src":"9285:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1537,"name":"int256","nodeType":"ElementaryTypeName","src":"9285:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9270:28:7"},"scope":2106,"src":"9133:978:7","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1665,"nodeType":"Block","src":"10456:67:7","statements":[{"expression":{"arguments":[{"id":1656,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1650,"src":"10486:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10493:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1660,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1650,"src":"10502:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1659,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10496:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1658,"name":"bytes","nodeType":"ElementaryTypeName","src":"10496:5:7","typeDescriptions":{}}},"id":1661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10496:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10509:6:7","memberName":"length","nodeType":"MemberAccess","src":"10496:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1655,"name":"parseHexUint","nodeType":"Identifier","overloadedDeclarations":[1666,1697],"referencedDeclaration":1697,"src":"10473:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":1663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10473:43:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1654,"id":1664,"nodeType":"Return","src":"10466:50:7"}]},"documentation":{"id":1648,"nodeType":"StructuredDocumentation","src":"10117:259:7","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":1666,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10390:12:7","nodeType":"FunctionDefinition","parameters":{"id":1651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1650,"mutability":"mutable","name":"input","nameLocation":"10417:5:7","nodeType":"VariableDeclaration","scope":1666,"src":"10403:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1649,"name":"string","nodeType":"ElementaryTypeName","src":"10403:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10402:21:7"},"returnParameters":{"id":1654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1653,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1666,"src":"10447:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1652,"name":"uint256","nodeType":"ElementaryTypeName","src":"10447:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10446:9:7"},"scope":2106,"src":"10381:142:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1696,"nodeType":"Block","src":"10937:156:7","statements":[{"assignments":[1679,1681],"declarations":[{"constant":false,"id":1679,"mutability":"mutable","name":"success","nameLocation":"10953:7:7","nodeType":"VariableDeclaration","scope":1696,"src":"10948:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1678,"name":"bool","nodeType":"ElementaryTypeName","src":"10948:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1681,"mutability":"mutable","name":"value","nameLocation":"10970:5:7","nodeType":"VariableDeclaration","scope":1696,"src":"10962:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1680,"name":"uint256","nodeType":"ElementaryTypeName","src":"10962:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1687,"initialValue":{"arguments":[{"id":1683,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"10995:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1684,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1671,"src":"11002:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1685,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1673,"src":"11009:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1682,"name":"tryParseHexUint","nodeType":"Identifier","overloadedDeclarations":[1718,1755],"referencedDeclaration":1755,"src":"10979:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10979:34:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"10947:66:7"},{"condition":{"id":1689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11027:8:7","subExpression":{"id":1688,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1679,"src":"11028:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1693,"nodeType":"IfStatement","src":"11023:41:7","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1690,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":933,"src":"11044:18:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11044:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1692,"nodeType":"RevertStatement","src":"11037:27:7"}},{"expression":{"id":1694,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1681,"src":"11081:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1677,"id":1695,"nodeType":"Return","src":"11074:12:7"}]},"documentation":{"id":1667,"nodeType":"StructuredDocumentation","src":"10529:300:7","text":" @dev Variant of {parseHexUint} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":1697,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10843:12:7","nodeType":"FunctionDefinition","parameters":{"id":1674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1669,"mutability":"mutable","name":"input","nameLocation":"10870:5:7","nodeType":"VariableDeclaration","scope":1697,"src":"10856:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1668,"name":"string","nodeType":"ElementaryTypeName","src":"10856:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1671,"mutability":"mutable","name":"begin","nameLocation":"10885:5:7","nodeType":"VariableDeclaration","scope":1697,"src":"10877:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1670,"name":"uint256","nodeType":"ElementaryTypeName","src":"10877:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1673,"mutability":"mutable","name":"end","nameLocation":"10900:3:7","nodeType":"VariableDeclaration","scope":1697,"src":"10892:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1672,"name":"uint256","nodeType":"ElementaryTypeName","src":"10892:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10855:49:7"},"returnParameters":{"id":1677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1676,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1697,"src":"10928:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1675,"name":"uint256","nodeType":"ElementaryTypeName","src":"10928:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10927:9:7"},"scope":2106,"src":"10834:259:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1717,"nodeType":"Block","src":"11420:86:7","statements":[{"expression":{"arguments":[{"id":1708,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1700,"src":"11469:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11476:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1712,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1700,"src":"11485:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1711,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11479:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1710,"name":"bytes","nodeType":"ElementaryTypeName","src":"11479:5:7","typeDescriptions":{}}},"id":1713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11479:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11492:6:7","memberName":"length","nodeType":"MemberAccess","src":"11479:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1707,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"11437:31:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11437:62:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1706,"id":1716,"nodeType":"Return","src":"11430:69:7"}]},"documentation":{"id":1698,"nodeType":"StructuredDocumentation","src":"11099:218:7","text":" @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":1718,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11331:15:7","nodeType":"FunctionDefinition","parameters":{"id":1701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1700,"mutability":"mutable","name":"input","nameLocation":"11361:5:7","nodeType":"VariableDeclaration","scope":1718,"src":"11347:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1699,"name":"string","nodeType":"ElementaryTypeName","src":"11347:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11346:21:7"},"returnParameters":{"id":1706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1703,"mutability":"mutable","name":"success","nameLocation":"11396:7:7","nodeType":"VariableDeclaration","scope":1718,"src":"11391:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1702,"name":"bool","nodeType":"ElementaryTypeName","src":"11391:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1705,"mutability":"mutable","name":"value","nameLocation":"11413:5:7","nodeType":"VariableDeclaration","scope":1718,"src":"11405:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1704,"name":"uint256","nodeType":"ElementaryTypeName","src":"11405:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11390:29:7"},"scope":2106,"src":"11322:184:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1754,"nodeType":"Block","src":"11914:147:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1732,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1725,"src":"11928:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1735,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1721,"src":"11940:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1734,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11934:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1733,"name":"bytes","nodeType":"ElementaryTypeName","src":"11934:5:7","typeDescriptions":{}}},"id":1736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11934:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11947:6:7","memberName":"length","nodeType":"MemberAccess","src":"11934:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11928:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1739,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1723,"src":"11957:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1740,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1725,"src":"11965:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11957:11:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11928:40:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1747,"nodeType":"IfStatement","src":"11924:63:7","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11978:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11985:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1745,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"11977:10:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1731,"id":1746,"nodeType":"Return","src":"11970:17:7"}},{"expression":{"arguments":[{"id":1749,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1721,"src":"12036:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1750,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1723,"src":"12043:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1751,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1725,"src":"12050:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1748,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"12004:31:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12004:50:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1731,"id":1753,"nodeType":"Return","src":"11997:57:7"}]},"documentation":{"id":1719,"nodeType":"StructuredDocumentation","src":"11512:241:7","text":" @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":1755,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11767:15:7","nodeType":"FunctionDefinition","parameters":{"id":1726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1721,"mutability":"mutable","name":"input","nameLocation":"11806:5:7","nodeType":"VariableDeclaration","scope":1755,"src":"11792:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1720,"name":"string","nodeType":"ElementaryTypeName","src":"11792:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1723,"mutability":"mutable","name":"begin","nameLocation":"11829:5:7","nodeType":"VariableDeclaration","scope":1755,"src":"11821:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1722,"name":"uint256","nodeType":"ElementaryTypeName","src":"11821:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1725,"mutability":"mutable","name":"end","nameLocation":"11852:3:7","nodeType":"VariableDeclaration","scope":1755,"src":"11844:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1724,"name":"uint256","nodeType":"ElementaryTypeName","src":"11844:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11782:79:7"},"returnParameters":{"id":1731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1728,"mutability":"mutable","name":"success","nameLocation":"11890:7:7","nodeType":"VariableDeclaration","scope":1755,"src":"11885:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1727,"name":"bool","nodeType":"ElementaryTypeName","src":"11885:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1730,"mutability":"mutable","name":"value","nameLocation":"11907:5:7","nodeType":"VariableDeclaration","scope":1755,"src":"11899:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1729,"name":"uint256","nodeType":"ElementaryTypeName","src":"11899:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11884:29:7"},"scope":2106,"src":"11758:303:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1857,"nodeType":"Block","src":"12447:880:7","statements":[{"assignments":[1770],"declarations":[{"constant":false,"id":1770,"mutability":"mutable","name":"buffer","nameLocation":"12470:6:7","nodeType":"VariableDeclaration","scope":1857,"src":"12457:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1769,"name":"bytes","nodeType":"ElementaryTypeName","src":"12457:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1775,"initialValue":{"arguments":[{"id":1773,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1758,"src":"12485:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1772,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12479:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1771,"name":"bytes","nodeType":"ElementaryTypeName","src":"12479:5:7","typeDescriptions":{}}},"id":1774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12479:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"12457:34:7"},{"assignments":[1777],"declarations":[{"constant":false,"id":1777,"mutability":"mutable","name":"hasPrefix","nameLocation":"12544:9:7","nodeType":"VariableDeclaration","scope":1857,"src":"12539:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1776,"name":"bool","nodeType":"ElementaryTypeName","src":"12539:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1797,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1778,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"12557:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1779,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1760,"src":"12563:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12571:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12563:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12557:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1783,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12556:17:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":1795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1787,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1770,"src":"12607:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1788,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1760,"src":"12615:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1786,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2105,"src":"12584:22:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":1789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12584:37:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1785,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12577:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":1784,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12577:6:7","typeDescriptions":{}}},"id":1790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12577:45:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":1793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12633:4:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":1792,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12626:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":1791,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12626:6:7","typeDescriptions":{}}},"id":1794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12626:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"12577:61:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12556:82:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"12539:99:7"},{"assignments":[1799],"declarations":[{"constant":false,"id":1799,"mutability":"mutable","name":"offset","nameLocation":"12727:6:7","nodeType":"VariableDeclaration","scope":1857,"src":"12719:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1798,"name":"uint256","nodeType":"ElementaryTypeName","src":"12719:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1805,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1800,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1777,"src":"12736:9:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12746:6:7","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5476,"src":"12736:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":1802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12736:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":1803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12757:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12736:22:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12719:39:7"},{"assignments":[1807],"declarations":[{"constant":false,"id":1807,"mutability":"mutable","name":"result","nameLocation":"12777:6:7","nodeType":"VariableDeclaration","scope":1857,"src":"12769:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1806,"name":"uint256","nodeType":"ElementaryTypeName","src":"12769:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1809,"initialValue":{"hexValue":"30","id":1808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12786:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12769:18:7"},{"body":{"id":1851,"nodeType":"Block","src":"12844:446:7","statements":[{"assignments":[1823],"declarations":[{"constant":false,"id":1823,"mutability":"mutable","name":"chr","nameLocation":"12864:3:7","nodeType":"VariableDeclaration","scope":1851,"src":"12858:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1822,"name":"uint8","nodeType":"ElementaryTypeName","src":"12858:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1833,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":1828,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1770,"src":"12913:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1829,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1811,"src":"12921:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1827,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2105,"src":"12890:22:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":1830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12890:33:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1826,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12883:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":1825,"name":"bytes1","nodeType":"ElementaryTypeName","src":"12883:6:7","typeDescriptions":{}}},"id":1831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12883:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":1824,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2093,"src":"12870:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":1832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12870:55:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"12858:67:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1834,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1823,"src":"12943:3:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3135","id":1835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12949:2:7","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"12943:8:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1841,"nodeType":"IfStatement","src":"12939:31:7","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12961:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12968:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1839,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12960:10:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1768,"id":1840,"nodeType":"Return","src":"12953:17:7"}},{"expression":{"id":1844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1842,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1807,"src":"12984:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3136","id":1843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12994:2:7","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12984:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1845,"nodeType":"ExpressionStatement","src":"12984:12:7"},{"id":1850,"nodeType":"UncheckedBlock","src":"13010:270:7","statements":[{"expression":{"id":1848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1846,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1807,"src":"13252:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1847,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1823,"src":"13262:3:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13252:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1849,"nodeType":"ExpressionStatement","src":"13252:13:7"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1816,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1811,"src":"12830:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1817,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"12834:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12830:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1852,"initializationExpression":{"assignments":[1811],"declarations":[{"constant":false,"id":1811,"mutability":"mutable","name":"i","nameLocation":"12810:1:7","nodeType":"VariableDeclaration","scope":1852,"src":"12802:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1810,"name":"uint256","nodeType":"ElementaryTypeName","src":"12802:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1815,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1812,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1760,"src":"12814:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1813,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1799,"src":"12822:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12814:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12802:26:7"},"loopExpression":{"expression":{"id":1820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"12839:3:7","subExpression":{"id":1819,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1811,"src":"12841:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1821,"nodeType":"ExpressionStatement","src":"12839:3:7"},"nodeType":"ForStatement","src":"12797:493:7"},{"expression":{"components":[{"hexValue":"74727565","id":1853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13307:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":1854,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1807,"src":"13313:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1855,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13306:14:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1768,"id":1856,"nodeType":"Return","src":"13299:21:7"}]},"documentation":{"id":1756,"nodeType":"StructuredDocumentation","src":"12067:204:7","text":" @dev Implementation of {tryParseHexUint} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":1858,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseHexUintUncheckedBounds","nameLocation":"12285:31:7","nodeType":"FunctionDefinition","parameters":{"id":1763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1758,"mutability":"mutable","name":"input","nameLocation":"12340:5:7","nodeType":"VariableDeclaration","scope":1858,"src":"12326:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1757,"name":"string","nodeType":"ElementaryTypeName","src":"12326:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1760,"mutability":"mutable","name":"begin","nameLocation":"12363:5:7","nodeType":"VariableDeclaration","scope":1858,"src":"12355:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1759,"name":"uint256","nodeType":"ElementaryTypeName","src":"12355:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1762,"mutability":"mutable","name":"end","nameLocation":"12386:3:7","nodeType":"VariableDeclaration","scope":1858,"src":"12378:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1761,"name":"uint256","nodeType":"ElementaryTypeName","src":"12378:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12316:79:7"},"returnParameters":{"id":1768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1765,"mutability":"mutable","name":"success","nameLocation":"12423:7:7","nodeType":"VariableDeclaration","scope":1858,"src":"12418:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1764,"name":"bool","nodeType":"ElementaryTypeName","src":"12418:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1767,"mutability":"mutable","name":"value","nameLocation":"12440:5:7","nodeType":"VariableDeclaration","scope":1858,"src":"12432:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1766,"name":"uint256","nodeType":"ElementaryTypeName","src":"12432:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12417:29:7"},"scope":2106,"src":"12276:1051:7","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1876,"nodeType":"Block","src":"13625:67:7","statements":[{"expression":{"arguments":[{"id":1867,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1861,"src":"13655:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13662:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1871,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1861,"src":"13671:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1870,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13665:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1869,"name":"bytes","nodeType":"ElementaryTypeName","src":"13665:5:7","typeDescriptions":{}}},"id":1872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13665:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13678:6:7","memberName":"length","nodeType":"MemberAccess","src":"13665:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1866,"name":"parseAddress","nodeType":"Identifier","overloadedDeclarations":[1877,1908],"referencedDeclaration":1908,"src":"13642:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (address)"}},"id":1874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13642:43:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1865,"id":1875,"nodeType":"Return","src":"13635:50:7"}]},"documentation":{"id":1859,"nodeType":"StructuredDocumentation","src":"13333:212:7","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":1877,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13559:12:7","nodeType":"FunctionDefinition","parameters":{"id":1862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1861,"mutability":"mutable","name":"input","nameLocation":"13586:5:7","nodeType":"VariableDeclaration","scope":1877,"src":"13572:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1860,"name":"string","nodeType":"ElementaryTypeName","src":"13572:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13571:21:7"},"returnParameters":{"id":1865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1864,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1877,"src":"13616:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1863,"name":"address","nodeType":"ElementaryTypeName","src":"13616:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13615:9:7"},"scope":2106,"src":"13550:142:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1907,"nodeType":"Block","src":"14058:165:7","statements":[{"assignments":[1890,1892],"declarations":[{"constant":false,"id":1890,"mutability":"mutable","name":"success","nameLocation":"14074:7:7","nodeType":"VariableDeclaration","scope":1907,"src":"14069:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1889,"name":"bool","nodeType":"ElementaryTypeName","src":"14069:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1892,"mutability":"mutable","name":"value","nameLocation":"14091:5:7","nodeType":"VariableDeclaration","scope":1907,"src":"14083:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1891,"name":"address","nodeType":"ElementaryTypeName","src":"14083:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1898,"initialValue":{"arguments":[{"id":1894,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1880,"src":"14116:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1895,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1882,"src":"14123:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1896,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1884,"src":"14130:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1893,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[1929,2033],"referencedDeclaration":2033,"src":"14100:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":1897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14100:34:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"nodeType":"VariableDeclarationStatement","src":"14068:66:7"},{"condition":{"id":1900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14148:8:7","subExpression":{"id":1899,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1890,"src":"14149:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1904,"nodeType":"IfStatement","src":"14144:50:7","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1901,"name":"StringsInvalidAddressFormat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":936,"src":"14165:27:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14165:29:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1903,"nodeType":"RevertStatement","src":"14158:36:7"}},{"expression":{"id":1905,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1892,"src":"14211:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1888,"id":1906,"nodeType":"Return","src":"14204:12:7"}]},"documentation":{"id":1878,"nodeType":"StructuredDocumentation","src":"13698:252:7","text":" @dev Variant of {parseAddress} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":1908,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13964:12:7","nodeType":"FunctionDefinition","parameters":{"id":1885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1880,"mutability":"mutable","name":"input","nameLocation":"13991:5:7","nodeType":"VariableDeclaration","scope":1908,"src":"13977:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1879,"name":"string","nodeType":"ElementaryTypeName","src":"13977:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1882,"mutability":"mutable","name":"begin","nameLocation":"14006:5:7","nodeType":"VariableDeclaration","scope":1908,"src":"13998:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1881,"name":"uint256","nodeType":"ElementaryTypeName","src":"13998:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1884,"mutability":"mutable","name":"end","nameLocation":"14021:3:7","nodeType":"VariableDeclaration","scope":1908,"src":"14013:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1883,"name":"uint256","nodeType":"ElementaryTypeName","src":"14013:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13976:49:7"},"returnParameters":{"id":1888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1887,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1908,"src":"14049:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1886,"name":"address","nodeType":"ElementaryTypeName","src":"14049:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14048:9:7"},"scope":2106,"src":"13955:268:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1928,"nodeType":"Block","src":"14523:70:7","statements":[{"expression":{"arguments":[{"id":1919,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1911,"src":"14556:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14563:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1923,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1911,"src":"14572:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1922,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14566:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1921,"name":"bytes","nodeType":"ElementaryTypeName","src":"14566:5:7","typeDescriptions":{}}},"id":1924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14566:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14579:6:7","memberName":"length","nodeType":"MemberAccess","src":"14566:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1918,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[1929,2033],"referencedDeclaration":2033,"src":"14540:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":1926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14540:46:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":1917,"id":1927,"nodeType":"Return","src":"14533:53:7"}]},"documentation":{"id":1909,"nodeType":"StructuredDocumentation","src":"14229:191:7","text":" @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n formatted address. See {parseAddress} requirements."},"id":1929,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14434:15:7","nodeType":"FunctionDefinition","parameters":{"id":1912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1911,"mutability":"mutable","name":"input","nameLocation":"14464:5:7","nodeType":"VariableDeclaration","scope":1929,"src":"14450:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1910,"name":"string","nodeType":"ElementaryTypeName","src":"14450:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14449:21:7"},"returnParameters":{"id":1917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1914,"mutability":"mutable","name":"success","nameLocation":"14499:7:7","nodeType":"VariableDeclaration","scope":1929,"src":"14494:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1913,"name":"bool","nodeType":"ElementaryTypeName","src":"14494:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1916,"mutability":"mutable","name":"value","nameLocation":"14516:5:7","nodeType":"VariableDeclaration","scope":1929,"src":"14508:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1915,"name":"address","nodeType":"ElementaryTypeName","src":"14508:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14493:29:7"},"scope":2106,"src":"14425:168:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2032,"nodeType":"Block","src":"14963:733:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1943,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1936,"src":"14977:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1946,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1932,"src":"14989:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1945,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14983:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1944,"name":"bytes","nodeType":"ElementaryTypeName","src":"14983:5:7","typeDescriptions":{}}},"id":1947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14983:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14996:6:7","memberName":"length","nodeType":"MemberAccess","src":"14983:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14977:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1950,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1934,"src":"15006:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1951,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1936,"src":"15014:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15006:11:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14977:40:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1961,"nodeType":"IfStatement","src":"14973:72:7","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15027:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":1957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15042:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1956,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15034:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1955,"name":"address","nodeType":"ElementaryTypeName","src":"15034:7:7","typeDescriptions":{}}},"id":1958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15034:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1959,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15026:19:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":1942,"id":1960,"nodeType":"Return","src":"15019:26:7"}},{"assignments":[1963],"declarations":[{"constant":false,"id":1963,"mutability":"mutable","name":"hasPrefix","nameLocation":"15061:9:7","nodeType":"VariableDeclaration","scope":2032,"src":"15056:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1962,"name":"bool","nodeType":"ElementaryTypeName","src":"15056:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1986,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1964,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1936,"src":"15074:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1965,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1934,"src":"15080:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15088:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15080:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15074:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1969,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15073:17:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":1984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":1975,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1932,"src":"15130:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1974,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15124:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1973,"name":"bytes","nodeType":"ElementaryTypeName","src":"15124:5:7","typeDescriptions":{}}},"id":1976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15124:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1977,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1934,"src":"15138:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1972,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2105,"src":"15101:22:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":1978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15101:43:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1971,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15094:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":1970,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15094:6:7","typeDescriptions":{}}},"id":1979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15094:51:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":1982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15156:4:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":1981,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15149:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":1980,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15149:6:7","typeDescriptions":{}}},"id":1983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15149:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"15094:67:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15073:88:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15056:105:7"},{"assignments":[1988],"declarations":[{"constant":false,"id":1988,"mutability":"mutable","name":"expectedLength","nameLocation":"15250:14:7","nodeType":"VariableDeclaration","scope":2032,"src":"15242:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1987,"name":"uint256","nodeType":"ElementaryTypeName","src":"15242:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1996,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3430","id":1989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15267:2:7","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1990,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1963,"src":"15272:9:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15282:6:7","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5476,"src":"15272:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":1992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15272:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":1993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15293:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15272:22:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15267:27:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15242:52:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1997,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1936,"src":"15359:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1998,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1934,"src":"15365:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15359:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2000,"name":"expectedLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1988,"src":"15374:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15359:29:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2030,"nodeType":"Block","src":"15639:51:7","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":2023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15661:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":2026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15676:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2025,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15668:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2024,"name":"address","nodeType":"ElementaryTypeName","src":"15668:7:7","typeDescriptions":{}}},"id":2027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15668:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2028,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15660:19:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":1942,"id":2029,"nodeType":"Return","src":"15653:26:7"}]},"id":2031,"nodeType":"IfStatement","src":"15355:335:7","trueBody":{"id":2022,"nodeType":"Block","src":"15390:243:7","statements":[{"assignments":[2003,2005],"declarations":[{"constant":false,"id":2003,"mutability":"mutable","name":"s","nameLocation":"15511:1:7","nodeType":"VariableDeclaration","scope":2022,"src":"15506:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2002,"name":"bool","nodeType":"ElementaryTypeName","src":"15506:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2005,"mutability":"mutable","name":"v","nameLocation":"15522:1:7","nodeType":"VariableDeclaration","scope":2022,"src":"15514:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2004,"name":"uint256","nodeType":"ElementaryTypeName","src":"15514:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2011,"initialValue":{"arguments":[{"id":2007,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1932,"src":"15559:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2008,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1934,"src":"15566:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2009,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1936,"src":"15573:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2006,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"15527:31:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15527:50:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"15505:72:7"},{"expression":{"components":[{"id":2012,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2003,"src":"15599:1:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"id":2017,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2005,"src":"15618:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15610:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2015,"name":"uint160","nodeType":"ElementaryTypeName","src":"15610:7:7","typeDescriptions":{}}},"id":2018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15610:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2014,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15602:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2013,"name":"address","nodeType":"ElementaryTypeName","src":"15602:7:7","typeDescriptions":{}}},"id":2019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15602:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2020,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15598:24:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":1942,"id":2021,"nodeType":"Return","src":"15591:31:7"}]}}]},"documentation":{"id":1930,"nodeType":"StructuredDocumentation","src":"14599:203:7","text":" @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n formatted address. See {parseAddress} requirements."},"id":2033,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14816:15:7","nodeType":"FunctionDefinition","parameters":{"id":1937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1932,"mutability":"mutable","name":"input","nameLocation":"14855:5:7","nodeType":"VariableDeclaration","scope":2033,"src":"14841:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1931,"name":"string","nodeType":"ElementaryTypeName","src":"14841:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1934,"mutability":"mutable","name":"begin","nameLocation":"14878:5:7","nodeType":"VariableDeclaration","scope":2033,"src":"14870:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1933,"name":"uint256","nodeType":"ElementaryTypeName","src":"14870:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1936,"mutability":"mutable","name":"end","nameLocation":"14901:3:7","nodeType":"VariableDeclaration","scope":2033,"src":"14893:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1935,"name":"uint256","nodeType":"ElementaryTypeName","src":"14893:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14831:79:7"},"returnParameters":{"id":1942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1939,"mutability":"mutable","name":"success","nameLocation":"14939:7:7","nodeType":"VariableDeclaration","scope":2033,"src":"14934:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1938,"name":"bool","nodeType":"ElementaryTypeName","src":"14934:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1941,"mutability":"mutable","name":"value","nameLocation":"14956:5:7","nodeType":"VariableDeclaration","scope":2033,"src":"14948:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1940,"name":"address","nodeType":"ElementaryTypeName","src":"14948:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14933:29:7"},"scope":2106,"src":"14807:889:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2092,"nodeType":"Block","src":"15765:461:7","statements":[{"assignments":[2041],"declarations":[{"constant":false,"id":2041,"mutability":"mutable","name":"value","nameLocation":"15781:5:7","nodeType":"VariableDeclaration","scope":2092,"src":"15775:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2040,"name":"uint8","nodeType":"ElementaryTypeName","src":"15775:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2046,"initialValue":{"arguments":[{"id":2044,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2035,"src":"15795:3:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2043,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15789:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2042,"name":"uint8","nodeType":"ElementaryTypeName","src":"15789:5:7","typeDescriptions":{}}},"id":2045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15789:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"15775:24:7"},{"id":2089,"nodeType":"UncheckedBlock","src":"15959:238:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2047,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"15987:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3437","id":2048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15995:2:7","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"src":"15987:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2050,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"16001:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3538","id":2051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16009:2:7","typeDescriptions":{"typeIdentifier":"t_rational_58_by_1","typeString":"int_const 58"},"value":"58"},"src":"16001:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15987:24:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2058,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"16047:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":2059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16055:2:7","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"16047:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2061,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"16061:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313033","id":2062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16069:3:7","typeDescriptions":{"typeIdentifier":"t_rational_103_by_1","typeString":"int_const 103"},"value":"103"},"src":"16061:11:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16047:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2069,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"16108:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3634","id":2070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16116:2:7","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"16108:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2072,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"16122:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3731","id":2073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16130:2:7","typeDescriptions":{"typeIdentifier":"t_rational_71_by_1","typeString":"int_const 71"},"value":"71"},"src":"16122:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16108:24:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"expression":{"arguments":[{"id":2082,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16176:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2081,"name":"uint8","nodeType":"ElementaryTypeName","src":"16176:5:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":2080,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16171:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16171:11:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":2084,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16183:3:7","memberName":"max","nodeType":"MemberAccess","src":"16171:15:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":2039,"id":2085,"nodeType":"Return","src":"16164:22:7"},"id":2086,"nodeType":"IfStatement","src":"16104:82:7","trueBody":{"expression":{"id":2078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2076,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"16134:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3535","id":2077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16143:2:7","typeDescriptions":{"typeIdentifier":"t_rational_55_by_1","typeString":"int_const 55"},"value":"55"},"src":"16134:11:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2079,"nodeType":"ExpressionStatement","src":"16134:11:7"}},"id":2087,"nodeType":"IfStatement","src":"16043:143:7","trueBody":{"expression":{"id":2067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2065,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"16074:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3837","id":2066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16083:2:7","typeDescriptions":{"typeIdentifier":"t_rational_87_by_1","typeString":"int_const 87"},"value":"87"},"src":"16074:11:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2068,"nodeType":"ExpressionStatement","src":"16074:11:7"}},"id":2088,"nodeType":"IfStatement","src":"15983:203:7","trueBody":{"expression":{"id":2056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2054,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"16013:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3438","id":2055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16022:2:7","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"16013:11:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2057,"nodeType":"ExpressionStatement","src":"16013:11:7"}}]},{"expression":{"id":2090,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"16214:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":2039,"id":2091,"nodeType":"Return","src":"16207:12:7"}]},"id":2093,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseChr","nameLocation":"15711:12:7","nodeType":"FunctionDefinition","parameters":{"id":2036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2035,"mutability":"mutable","name":"chr","nameLocation":"15731:3:7","nodeType":"VariableDeclaration","scope":2093,"src":"15724:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2034,"name":"bytes1","nodeType":"ElementaryTypeName","src":"15724:6:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"src":"15723:12:7"},"returnParameters":{"id":2039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2038,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2093,"src":"15758:5:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2037,"name":"uint8","nodeType":"ElementaryTypeName","src":"15758:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"15757:7:7"},"scope":2106,"src":"15702:524:7","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2104,"nodeType":"Block","src":"16611:225:7","statements":[{"AST":{"nodeType":"YulBlock","src":"16760:70:7","statements":[{"nodeType":"YulAssignment","src":"16774:46:7","value":{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"16793:6:7"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16805:4:7","type":"","value":"0x20"},{"name":"offset","nodeType":"YulIdentifier","src":"16811:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16801:3:7"},"nodeType":"YulFunctionCall","src":"16801:17:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16789:3:7"},"nodeType":"YulFunctionCall","src":"16789:30:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16783:5:7"},"nodeType":"YulFunctionCall","src":"16783:37:7"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"16774:5:7"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2096,"isOffset":false,"isSlot":false,"src":"16793:6:7","valueSize":1},{"declaration":2098,"isOffset":false,"isSlot":false,"src":"16811:6:7","valueSize":1},{"declaration":2101,"isOffset":false,"isSlot":false,"src":"16774:5:7","valueSize":1}],"flags":["memory-safe"],"id":2103,"nodeType":"InlineAssembly","src":"16735:95:7"}]},"documentation":{"id":2094,"nodeType":"StructuredDocumentation","src":"16232:268:7","text":" @dev Reads a bytes32 from a bytes array without bounds checking.\n NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n assembly block as such would prevent some optimizations."},"id":2105,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeReadBytesOffset","nameLocation":"16514:22:7","nodeType":"FunctionDefinition","parameters":{"id":2099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2096,"mutability":"mutable","name":"buffer","nameLocation":"16550:6:7","nodeType":"VariableDeclaration","scope":2105,"src":"16537:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2095,"name":"bytes","nodeType":"ElementaryTypeName","src":"16537:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2098,"mutability":"mutable","name":"offset","nameLocation":"16566:6:7","nodeType":"VariableDeclaration","scope":2105,"src":"16558:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2097,"name":"uint256","nodeType":"ElementaryTypeName","src":"16558:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16536:37:7"},"returnParameters":{"id":2102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2101,"mutability":"mutable","name":"value","nameLocation":"16604:5:7","nodeType":"VariableDeclaration","scope":2105,"src":"16596:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2100,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16596:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"16595:15:7"},"scope":2106,"src":"16505:331:7","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2107,"src":"297:16541:7","usedErrors":[930,933,936],"usedEvents":[]}],"src":"101:16738:7"},"id":7},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[3712],"Panic":[837],"SafeCast":[5477]},"id":3713,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2108,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:8"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":2110,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3713,"sourceUnit":838,"src":"129:35:8","symbolAliases":[{"foreign":{"id":2109,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"137:5:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":2112,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3713,"sourceUnit":5478,"src":"165:40:8","symbolAliases":[{"foreign":{"id":2111,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5477,"src":"173:8:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":2113,"nodeType":"StructuredDocumentation","src":"207:73:8","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":3712,"linearizedBaseContracts":[3712],"name":"Math","nameLocation":"289:4:8","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":2118,"members":[{"id":2114,"name":"Floor","nameLocation":"324:5:8","nodeType":"EnumValue","src":"324:5:8"},{"id":2115,"name":"Ceil","nameLocation":"367:4:8","nodeType":"EnumValue","src":"367:4:8"},{"id":2116,"name":"Trunc","nameLocation":"409:5:8","nodeType":"EnumValue","src":"409:5:8"},{"id":2117,"name":"Expand","nameLocation":"439:6:8","nodeType":"EnumValue","src":"439:6:8"}],"name":"Rounding","nameLocation":"305:8:8","nodeType":"EnumDefinition","src":"300:169:8"},{"body":{"id":2149,"nodeType":"Block","src":"677:140:8","statements":[{"id":2148,"nodeType":"UncheckedBlock","src":"687:124:8","statements":[{"assignments":[2131],"declarations":[{"constant":false,"id":2131,"mutability":"mutable","name":"c","nameLocation":"719:1:8","nodeType":"VariableDeclaration","scope":2148,"src":"711:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2130,"name":"uint256","nodeType":"ElementaryTypeName","src":"711:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2135,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2132,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2121,"src":"723:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2133,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2123,"src":"727:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"723:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"711:17:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2136,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2131,"src":"746:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2137,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2121,"src":"750:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"746:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2143,"nodeType":"IfStatement","src":"742:28:8","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"761:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"768:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2141,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"760:10:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2129,"id":2142,"nodeType":"Return","src":"753:17:8"}},{"expression":{"components":[{"hexValue":"74727565","id":2144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"792:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2145,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2131,"src":"798:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2146,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"791:9:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2129,"id":2147,"nodeType":"Return","src":"784:16:8"}]}]},"documentation":{"id":2119,"nodeType":"StructuredDocumentation","src":"475:106:8","text":" @dev Returns the addition of two unsigned integers, with an success flag (no overflow)."},"id":2150,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"595:6:8","nodeType":"FunctionDefinition","parameters":{"id":2124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2121,"mutability":"mutable","name":"a","nameLocation":"610:1:8","nodeType":"VariableDeclaration","scope":2150,"src":"602:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2120,"name":"uint256","nodeType":"ElementaryTypeName","src":"602:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2123,"mutability":"mutable","name":"b","nameLocation":"621:1:8","nodeType":"VariableDeclaration","scope":2150,"src":"613:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2122,"name":"uint256","nodeType":"ElementaryTypeName","src":"613:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"601:22:8"},"returnParameters":{"id":2129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2126,"mutability":"mutable","name":"success","nameLocation":"652:7:8","nodeType":"VariableDeclaration","scope":2150,"src":"647:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2125,"name":"bool","nodeType":"ElementaryTypeName","src":"647:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2128,"mutability":"mutable","name":"result","nameLocation":"669:6:8","nodeType":"VariableDeclaration","scope":2150,"src":"661:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2127,"name":"uint256","nodeType":"ElementaryTypeName","src":"661:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"646:30:8"},"scope":3712,"src":"586:231:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2177,"nodeType":"Block","src":"1028:113:8","statements":[{"id":2176,"nodeType":"UncheckedBlock","src":"1038:97:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2162,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2155,"src":"1066:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2163,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2153,"src":"1070:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1066:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2169,"nodeType":"IfStatement","src":"1062:28:8","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1081:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1088:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2167,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1080:10:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2161,"id":2168,"nodeType":"Return","src":"1073:17:8"}},{"expression":{"components":[{"hexValue":"74727565","id":2170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1112:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2171,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2153,"src":"1118:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2172,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2155,"src":"1122:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1118:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2174,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1111:13:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2161,"id":2175,"nodeType":"Return","src":"1104:20:8"}]}]},"documentation":{"id":2151,"nodeType":"StructuredDocumentation","src":"823:109:8","text":" @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow)."},"id":2178,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"946:6:8","nodeType":"FunctionDefinition","parameters":{"id":2156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2153,"mutability":"mutable","name":"a","nameLocation":"961:1:8","nodeType":"VariableDeclaration","scope":2178,"src":"953:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2152,"name":"uint256","nodeType":"ElementaryTypeName","src":"953:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2155,"mutability":"mutable","name":"b","nameLocation":"972:1:8","nodeType":"VariableDeclaration","scope":2178,"src":"964:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2154,"name":"uint256","nodeType":"ElementaryTypeName","src":"964:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"952:22:8"},"returnParameters":{"id":2161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2158,"mutability":"mutable","name":"success","nameLocation":"1003:7:8","nodeType":"VariableDeclaration","scope":2178,"src":"998:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2157,"name":"bool","nodeType":"ElementaryTypeName","src":"998:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2160,"mutability":"mutable","name":"result","nameLocation":"1020:6:8","nodeType":"VariableDeclaration","scope":2178,"src":"1012:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2159,"name":"uint256","nodeType":"ElementaryTypeName","src":"1012:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"997:30:8"},"scope":3712,"src":"937:204:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2219,"nodeType":"Block","src":"1355:417:8","statements":[{"id":2218,"nodeType":"UncheckedBlock","src":"1365:401:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2190,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2181,"src":"1623:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1628:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1623:6:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2197,"nodeType":"IfStatement","src":"1619:28:8","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":2193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1639:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":2194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1645:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2195,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1638:9:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2189,"id":2196,"nodeType":"Return","src":"1631:16:8"}},{"assignments":[2199],"declarations":[{"constant":false,"id":2199,"mutability":"mutable","name":"c","nameLocation":"1669:1:8","nodeType":"VariableDeclaration","scope":2218,"src":"1661:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2198,"name":"uint256","nodeType":"ElementaryTypeName","src":"1661:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2203,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2200,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2181,"src":"1673:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2201,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2183,"src":"1677:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1673:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1661:17:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2204,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2199,"src":"1696:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2205,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2181,"src":"1700:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2207,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2183,"src":"1705:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:10:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2213,"nodeType":"IfStatement","src":"1692:33:8","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1716:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1723:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2211,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1715:10:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2189,"id":2212,"nodeType":"Return","src":"1708:17:8"}},{"expression":{"components":[{"hexValue":"74727565","id":2214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1747:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2215,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2199,"src":"1753:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2216,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1746:9:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2189,"id":2217,"nodeType":"Return","src":"1739:16:8"}]}]},"documentation":{"id":2179,"nodeType":"StructuredDocumentation","src":"1147:112:8","text":" @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow)."},"id":2220,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1273:6:8","nodeType":"FunctionDefinition","parameters":{"id":2184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2181,"mutability":"mutable","name":"a","nameLocation":"1288:1:8","nodeType":"VariableDeclaration","scope":2220,"src":"1280:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2180,"name":"uint256","nodeType":"ElementaryTypeName","src":"1280:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2183,"mutability":"mutable","name":"b","nameLocation":"1299:1:8","nodeType":"VariableDeclaration","scope":2220,"src":"1291:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2182,"name":"uint256","nodeType":"ElementaryTypeName","src":"1291:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1279:22:8"},"returnParameters":{"id":2189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2186,"mutability":"mutable","name":"success","nameLocation":"1330:7:8","nodeType":"VariableDeclaration","scope":2220,"src":"1325:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2185,"name":"bool","nodeType":"ElementaryTypeName","src":"1325:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2188,"mutability":"mutable","name":"result","nameLocation":"1347:6:8","nodeType":"VariableDeclaration","scope":2220,"src":"1339:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2187,"name":"uint256","nodeType":"ElementaryTypeName","src":"1339:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1324:30:8"},"scope":3712,"src":"1264:508:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2247,"nodeType":"Block","src":"1987:114:8","statements":[{"id":2246,"nodeType":"UncheckedBlock","src":"1997:98:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2232,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"2025:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2030:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2025:6:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2239,"nodeType":"IfStatement","src":"2021:29:8","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2041:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2048:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2237,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2040:10:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2231,"id":2238,"nodeType":"Return","src":"2033:17:8"}},{"expression":{"components":[{"hexValue":"74727565","id":2240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2072:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2241,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2223,"src":"2078:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2242,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"2082:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2078:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2244,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2071:13:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2231,"id":2245,"nodeType":"Return","src":"2064:20:8"}]}]},"documentation":{"id":2221,"nodeType":"StructuredDocumentation","src":"1778:113:8","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":2248,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1905:6:8","nodeType":"FunctionDefinition","parameters":{"id":2226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2223,"mutability":"mutable","name":"a","nameLocation":"1920:1:8","nodeType":"VariableDeclaration","scope":2248,"src":"1912:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2222,"name":"uint256","nodeType":"ElementaryTypeName","src":"1912:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2225,"mutability":"mutable","name":"b","nameLocation":"1931:1:8","nodeType":"VariableDeclaration","scope":2248,"src":"1923:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2224,"name":"uint256","nodeType":"ElementaryTypeName","src":"1923:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1911:22:8"},"returnParameters":{"id":2231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2228,"mutability":"mutable","name":"success","nameLocation":"1962:7:8","nodeType":"VariableDeclaration","scope":2248,"src":"1957:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2227,"name":"bool","nodeType":"ElementaryTypeName","src":"1957:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2230,"mutability":"mutable","name":"result","nameLocation":"1979:6:8","nodeType":"VariableDeclaration","scope":2248,"src":"1971:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2229,"name":"uint256","nodeType":"ElementaryTypeName","src":"1971:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1956:30:8"},"scope":3712,"src":"1896:205:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2275,"nodeType":"Block","src":"2326:114:8","statements":[{"id":2274,"nodeType":"UncheckedBlock","src":"2336:98:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2260,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2253,"src":"2364:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2369:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2364:6:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2267,"nodeType":"IfStatement","src":"2360:29:8","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2380:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2387:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2265,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2379:10:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2259,"id":2266,"nodeType":"Return","src":"2372:17:8"}},{"expression":{"components":[{"hexValue":"74727565","id":2268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2411:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2269,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2251,"src":"2417:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":2270,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2253,"src":"2421:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2417:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2272,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2410:13:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2259,"id":2273,"nodeType":"Return","src":"2403:20:8"}]}]},"documentation":{"id":2249,"nodeType":"StructuredDocumentation","src":"2107:123:8","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":2276,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2244:6:8","nodeType":"FunctionDefinition","parameters":{"id":2254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2251,"mutability":"mutable","name":"a","nameLocation":"2259:1:8","nodeType":"VariableDeclaration","scope":2276,"src":"2251:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2250,"name":"uint256","nodeType":"ElementaryTypeName","src":"2251:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2253,"mutability":"mutable","name":"b","nameLocation":"2270:1:8","nodeType":"VariableDeclaration","scope":2276,"src":"2262:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2252,"name":"uint256","nodeType":"ElementaryTypeName","src":"2262:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2250:22:8"},"returnParameters":{"id":2259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2256,"mutability":"mutable","name":"success","nameLocation":"2301:7:8","nodeType":"VariableDeclaration","scope":2276,"src":"2296:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2255,"name":"bool","nodeType":"ElementaryTypeName","src":"2296:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2258,"mutability":"mutable","name":"result","nameLocation":"2318:6:8","nodeType":"VariableDeclaration","scope":2276,"src":"2310:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2257,"name":"uint256","nodeType":"ElementaryTypeName","src":"2310:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2295:30:8"},"scope":3712,"src":"2235:205:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2302,"nodeType":"Block","src":"2912:207:8","statements":[{"id":2301,"nodeType":"UncheckedBlock","src":"2922:191:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2288,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2283,"src":"3060:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2289,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2281,"src":"3066:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2290,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2283,"src":"3070:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3066:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2292,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3065:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":2295,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2279,"src":"3091:9:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2293,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5477,"src":"3075:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5477_$","typeString":"type(library SafeCast)"}},"id":2294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3084:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5476,"src":"3075:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3075:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3065:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2298,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3064:38:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3060:42:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2287,"id":2300,"nodeType":"Return","src":"3053:49:8"}]}]},"documentation":{"id":2277,"nodeType":"StructuredDocumentation","src":"2446:374:8","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":2303,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"2834:7:8","nodeType":"FunctionDefinition","parameters":{"id":2284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2279,"mutability":"mutable","name":"condition","nameLocation":"2847:9:8","nodeType":"VariableDeclaration","scope":2303,"src":"2842:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2278,"name":"bool","nodeType":"ElementaryTypeName","src":"2842:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2281,"mutability":"mutable","name":"a","nameLocation":"2866:1:8","nodeType":"VariableDeclaration","scope":2303,"src":"2858:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2280,"name":"uint256","nodeType":"ElementaryTypeName","src":"2858:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2283,"mutability":"mutable","name":"b","nameLocation":"2877:1:8","nodeType":"VariableDeclaration","scope":2303,"src":"2869:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2282,"name":"uint256","nodeType":"ElementaryTypeName","src":"2869:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2841:38:8"},"returnParameters":{"id":2287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2286,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2303,"src":"2903:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2285,"name":"uint256","nodeType":"ElementaryTypeName","src":"2903:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2902:9:8"},"scope":3712,"src":"2825:294:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2321,"nodeType":"Block","src":"3256:44:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2314,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2306,"src":"3281:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2315,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2308,"src":"3285:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3281:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2317,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2306,"src":"3288:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2318,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2308,"src":"3291:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2313,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2303,"src":"3273:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":2319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3273:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2312,"id":2320,"nodeType":"Return","src":"3266:27:8"}]},"documentation":{"id":2304,"nodeType":"StructuredDocumentation","src":"3125:59:8","text":" @dev Returns the largest of two numbers."},"id":2322,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"3198:3:8","nodeType":"FunctionDefinition","parameters":{"id":2309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2306,"mutability":"mutable","name":"a","nameLocation":"3210:1:8","nodeType":"VariableDeclaration","scope":2322,"src":"3202:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2305,"name":"uint256","nodeType":"ElementaryTypeName","src":"3202:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2308,"mutability":"mutable","name":"b","nameLocation":"3221:1:8","nodeType":"VariableDeclaration","scope":2322,"src":"3213:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2307,"name":"uint256","nodeType":"ElementaryTypeName","src":"3213:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3201:22:8"},"returnParameters":{"id":2312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2311,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2322,"src":"3247:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2310,"name":"uint256","nodeType":"ElementaryTypeName","src":"3247:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3246:9:8"},"scope":3712,"src":"3189:111:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2340,"nodeType":"Block","src":"3438:44:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2333,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2325,"src":"3463:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2334,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2327,"src":"3467:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3463:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2336,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2325,"src":"3470:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2337,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2327,"src":"3473:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2332,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2303,"src":"3455:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":2338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3455:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2331,"id":2339,"nodeType":"Return","src":"3448:27:8"}]},"documentation":{"id":2323,"nodeType":"StructuredDocumentation","src":"3306:60:8","text":" @dev Returns the smallest of two numbers."},"id":2341,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"3380:3:8","nodeType":"FunctionDefinition","parameters":{"id":2328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2325,"mutability":"mutable","name":"a","nameLocation":"3392:1:8","nodeType":"VariableDeclaration","scope":2341,"src":"3384:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2324,"name":"uint256","nodeType":"ElementaryTypeName","src":"3384:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2327,"mutability":"mutable","name":"b","nameLocation":"3403:1:8","nodeType":"VariableDeclaration","scope":2341,"src":"3395:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2326,"name":"uint256","nodeType":"ElementaryTypeName","src":"3395:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3383:22:8"},"returnParameters":{"id":2331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2330,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2341,"src":"3429:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2329,"name":"uint256","nodeType":"ElementaryTypeName","src":"3429:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3428:9:8"},"scope":3712,"src":"3371:111:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2363,"nodeType":"Block","src":"3666:82:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2351,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2344,"src":"3721:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":2352,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2346,"src":"3725:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3721:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2354,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3720:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2355,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2344,"src":"3731:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2356,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2346,"src":"3735:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3731:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2358,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3730:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":2359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3740:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3730:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3720:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2350,"id":2362,"nodeType":"Return","src":"3713:28:8"}]},"documentation":{"id":2342,"nodeType":"StructuredDocumentation","src":"3488:102:8","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":2364,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"3604:7:8","nodeType":"FunctionDefinition","parameters":{"id":2347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2344,"mutability":"mutable","name":"a","nameLocation":"3620:1:8","nodeType":"VariableDeclaration","scope":2364,"src":"3612:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2343,"name":"uint256","nodeType":"ElementaryTypeName","src":"3612:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2346,"mutability":"mutable","name":"b","nameLocation":"3631:1:8","nodeType":"VariableDeclaration","scope":2364,"src":"3623:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2345,"name":"uint256","nodeType":"ElementaryTypeName","src":"3623:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3611:22:8"},"returnParameters":{"id":2350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2349,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2364,"src":"3657:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2348,"name":"uint256","nodeType":"ElementaryTypeName","src":"3657:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3656:9:8"},"scope":3712,"src":"3595:153:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2404,"nodeType":"Block","src":"4040:633:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2374,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2369,"src":"4054:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4059:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4054:6:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2385,"nodeType":"IfStatement","src":"4050:150:8","trueBody":{"id":2384,"nodeType":"Block","src":"4062:138:8","statements":[{"expression":{"arguments":[{"expression":{"id":2380,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"4166:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$837_$","typeString":"type(library Panic)"}},"id":2381,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4172:16:8","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":804,"src":"4166:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2377,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"4154:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$837_$","typeString":"type(library Panic)"}},"id":2379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4160:5:8","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":836,"src":"4154:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4154:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2383,"nodeType":"ExpressionStatement","src":"4154:35:8"}]}},{"id":2403,"nodeType":"UncheckedBlock","src":"4583:84:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2388,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"4630:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4634:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4630:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2386,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5477,"src":"4614:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5477_$","typeString":"type(library SafeCast)"}},"id":2387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4623:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5476,"src":"4614:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4614:22:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2392,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"4641:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4645:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4641:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2395,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4640:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2396,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2369,"src":"4650:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4640:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4654:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4640:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2400,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4639:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4614:42:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2373,"id":2402,"nodeType":"Return","src":"4607:49:8"}]}]},"documentation":{"id":2365,"nodeType":"StructuredDocumentation","src":"3754:210:8","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":2405,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"3978:7:8","nodeType":"FunctionDefinition","parameters":{"id":2370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2367,"mutability":"mutable","name":"a","nameLocation":"3994:1:8","nodeType":"VariableDeclaration","scope":2405,"src":"3986:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2366,"name":"uint256","nodeType":"ElementaryTypeName","src":"3986:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2369,"mutability":"mutable","name":"b","nameLocation":"4005:1:8","nodeType":"VariableDeclaration","scope":2405,"src":"3997:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2368,"name":"uint256","nodeType":"ElementaryTypeName","src":"3997:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3985:22:8"},"returnParameters":{"id":2373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2372,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2405,"src":"4031:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2371,"name":"uint256","nodeType":"ElementaryTypeName","src":"4031:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4030:9:8"},"scope":3712,"src":"3969:704:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2541,"nodeType":"Block","src":"5094:4128:8","statements":[{"id":2540,"nodeType":"UncheckedBlock","src":"5104:4112:8","statements":[{"assignments":[2418],"declarations":[{"constant":false,"id":2418,"mutability":"mutable","name":"prod0","nameLocation":"5441:5:8","nodeType":"VariableDeclaration","scope":2540,"src":"5433:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2417,"name":"uint256","nodeType":"ElementaryTypeName","src":"5433:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2422,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2419,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2408,"src":"5449:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2420,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2410,"src":"5453:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5449:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5433:21:8"},{"assignments":[2424],"declarations":[{"constant":false,"id":2424,"mutability":"mutable","name":"prod1","nameLocation":"5521:5:8","nodeType":"VariableDeclaration","scope":2540,"src":"5513:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2423,"name":"uint256","nodeType":"ElementaryTypeName","src":"5513:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2425,"nodeType":"VariableDeclarationStatement","src":"5513:13:8"},{"AST":{"nodeType":"YulBlock","src":"5593:122:8","statements":[{"nodeType":"YulVariableDeclaration","src":"5611:30:8","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5628:1:8"},{"name":"y","nodeType":"YulIdentifier","src":"5631:1:8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5638:1:8","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5634:3:8"},"nodeType":"YulFunctionCall","src":"5634:6:8"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"5621:6:8"},"nodeType":"YulFunctionCall","src":"5621:20:8"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"5615:2:8","type":""}]},{"nodeType":"YulAssignment","src":"5658:43:8","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"5675:2:8"},{"name":"prod0","nodeType":"YulIdentifier","src":"5679:5:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5671:3:8"},"nodeType":"YulFunctionCall","src":"5671:14:8"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"5690:2:8"},{"name":"prod0","nodeType":"YulIdentifier","src":"5694:5:8"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5687:2:8"},"nodeType":"YulFunctionCall","src":"5687:13:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5667:3:8"},"nodeType":"YulFunctionCall","src":"5667:34:8"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"5658:5:8"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2418,"isOffset":false,"isSlot":false,"src":"5679:5:8","valueSize":1},{"declaration":2418,"isOffset":false,"isSlot":false,"src":"5694:5:8","valueSize":1},{"declaration":2424,"isOffset":false,"isSlot":false,"src":"5658:5:8","valueSize":1},{"declaration":2408,"isOffset":false,"isSlot":false,"src":"5628:1:8","valueSize":1},{"declaration":2410,"isOffset":false,"isSlot":false,"src":"5631:1:8","valueSize":1}],"id":2426,"nodeType":"InlineAssembly","src":"5584:131:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2427,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2424,"src":"5796:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5805:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5796:10:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2435,"nodeType":"IfStatement","src":"5792:368:8","trueBody":{"id":2434,"nodeType":"Block","src":"5808:352:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2430,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"6126:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2431,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"6134:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6126:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2416,"id":2433,"nodeType":"Return","src":"6119:26:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2436,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"6270:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":2437,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2424,"src":"6285:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6270:20:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2454,"nodeType":"IfStatement","src":"6266:143:8","trueBody":{"id":2453,"nodeType":"Block","src":"6292:117:8","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2443,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"6330:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6345:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6330:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":2446,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"6348:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$837_$","typeString":"type(library Panic)"}},"id":2447,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6354:16:8","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":804,"src":"6348:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2448,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"6372:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$837_$","typeString":"type(library Panic)"}},"id":2449,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6378:14:8","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":800,"src":"6372:20:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2442,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2303,"src":"6322:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":2450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6322:71:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2439,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"6310:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$837_$","typeString":"type(library Panic)"}},"id":2441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6316:5:8","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":836,"src":"6310:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6310:84:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2452,"nodeType":"ExpressionStatement","src":"6310:84:8"}]}},{"assignments":[2456],"declarations":[{"constant":false,"id":2456,"mutability":"mutable","name":"remainder","nameLocation":"6672:9:8","nodeType":"VariableDeclaration","scope":2540,"src":"6664:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2455,"name":"uint256","nodeType":"ElementaryTypeName","src":"6664:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2457,"nodeType":"VariableDeclarationStatement","src":"6664:17:8"},{"AST":{"nodeType":"YulBlock","src":"6704:291:8","statements":[{"nodeType":"YulAssignment","src":"6773:38:8","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6793:1:8"},{"name":"y","nodeType":"YulIdentifier","src":"6796:1:8"},{"name":"denominator","nodeType":"YulIdentifier","src":"6799:11:8"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"6786:6:8"},"nodeType":"YulFunctionCall","src":"6786:25:8"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"6773:9:8"}]},{"nodeType":"YulAssignment","src":"6893:41:8","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"6906:5:8"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"6916:9:8"},{"name":"prod0","nodeType":"YulIdentifier","src":"6927:5:8"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6913:2:8"},"nodeType":"YulFunctionCall","src":"6913:20:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6902:3:8"},"nodeType":"YulFunctionCall","src":"6902:32:8"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"6893:5:8"}]},{"nodeType":"YulAssignment","src":"6951:30:8","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"6964:5:8"},{"name":"remainder","nodeType":"YulIdentifier","src":"6971:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6960:3:8"},"nodeType":"YulFunctionCall","src":"6960:21:8"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"6951:5:8"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2412,"isOffset":false,"isSlot":false,"src":"6799:11:8","valueSize":1},{"declaration":2418,"isOffset":false,"isSlot":false,"src":"6927:5:8","valueSize":1},{"declaration":2418,"isOffset":false,"isSlot":false,"src":"6951:5:8","valueSize":1},{"declaration":2418,"isOffset":false,"isSlot":false,"src":"6964:5:8","valueSize":1},{"declaration":2424,"isOffset":false,"isSlot":false,"src":"6893:5:8","valueSize":1},{"declaration":2424,"isOffset":false,"isSlot":false,"src":"6906:5:8","valueSize":1},{"declaration":2456,"isOffset":false,"isSlot":false,"src":"6773:9:8","valueSize":1},{"declaration":2456,"isOffset":false,"isSlot":false,"src":"6916:9:8","valueSize":1},{"declaration":2456,"isOffset":false,"isSlot":false,"src":"6971:9:8","valueSize":1},{"declaration":2408,"isOffset":false,"isSlot":false,"src":"6793:1:8","valueSize":1},{"declaration":2410,"isOffset":false,"isSlot":false,"src":"6796:1:8","valueSize":1}],"id":2458,"nodeType":"InlineAssembly","src":"6695:300:8"},{"assignments":[2460],"declarations":[{"constant":false,"id":2460,"mutability":"mutable","name":"twos","nameLocation":"7207:4:8","nodeType":"VariableDeclaration","scope":2540,"src":"7199:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2459,"name":"uint256","nodeType":"ElementaryTypeName","src":"7199:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2467,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2461,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"7214:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":2462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7229:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2463,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"7233:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7229:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2465,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7228:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7214:31:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7199:46:8"},{"AST":{"nodeType":"YulBlock","src":"7268:366:8","statements":[{"nodeType":"YulAssignment","src":"7333:37:8","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"7352:11:8"},{"name":"twos","nodeType":"YulIdentifier","src":"7365:4:8"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7348:3:8"},"nodeType":"YulFunctionCall","src":"7348:22:8"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"7333:11:8"}]},{"nodeType":"YulAssignment","src":"7437:25:8","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"7450:5:8"},{"name":"twos","nodeType":"YulIdentifier","src":"7457:4:8"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7446:3:8"},"nodeType":"YulFunctionCall","src":"7446:16:8"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"7437:5:8"}]},{"nodeType":"YulAssignment","src":"7581:39:8","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7601:1:8","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"7604:4:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7597:3:8"},"nodeType":"YulFunctionCall","src":"7597:12:8"},{"name":"twos","nodeType":"YulIdentifier","src":"7611:4:8"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7593:3:8"},"nodeType":"YulFunctionCall","src":"7593:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"7618:1:8","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7589:3:8"},"nodeType":"YulFunctionCall","src":"7589:31:8"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"7581:4:8"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2412,"isOffset":false,"isSlot":false,"src":"7333:11:8","valueSize":1},{"declaration":2412,"isOffset":false,"isSlot":false,"src":"7352:11:8","valueSize":1},{"declaration":2418,"isOffset":false,"isSlot":false,"src":"7437:5:8","valueSize":1},{"declaration":2418,"isOffset":false,"isSlot":false,"src":"7450:5:8","valueSize":1},{"declaration":2460,"isOffset":false,"isSlot":false,"src":"7365:4:8","valueSize":1},{"declaration":2460,"isOffset":false,"isSlot":false,"src":"7457:4:8","valueSize":1},{"declaration":2460,"isOffset":false,"isSlot":false,"src":"7581:4:8","valueSize":1},{"declaration":2460,"isOffset":false,"isSlot":false,"src":"7604:4:8","valueSize":1},{"declaration":2460,"isOffset":false,"isSlot":false,"src":"7611:4:8","valueSize":1}],"id":2468,"nodeType":"InlineAssembly","src":"7259:375:8"},{"expression":{"id":2473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2469,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"7700:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2470,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2424,"src":"7709:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2471,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2460,"src":"7717:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7709:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7700:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2474,"nodeType":"ExpressionStatement","src":"7700:21:8"},{"assignments":[2476],"declarations":[{"constant":false,"id":2476,"mutability":"mutable","name":"inverse","nameLocation":"8064:7:8","nodeType":"VariableDeclaration","scope":2540,"src":"8056:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2475,"name":"uint256","nodeType":"ElementaryTypeName","src":"8056:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2483,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":2477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8075:1:8","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2478,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"8079:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8075:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2480,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8074:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":2481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8094:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"8074:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8056:39:8"},{"expression":{"id":2490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2484,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"8312:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8323:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2486,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"8327:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2487,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"8341:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8327:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8323:25:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8312:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2491,"nodeType":"ExpressionStatement","src":"8312:36:8"},{"expression":{"id":2498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2492,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"8382:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8393:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2494,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"8397:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2495,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"8411:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8397:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8393:25:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8382:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2499,"nodeType":"ExpressionStatement","src":"8382:36:8"},{"expression":{"id":2506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2500,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"8454:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8465:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2502,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"8469:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2503,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"8483:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8469:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8465:25:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8454:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2507,"nodeType":"ExpressionStatement","src":"8454:36:8"},{"expression":{"id":2514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2508,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"8525:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8536:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2510,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"8540:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2511,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"8554:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8540:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8536:25:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8525:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2515,"nodeType":"ExpressionStatement","src":"8525:36:8"},{"expression":{"id":2522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2516,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"8598:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8609:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2518,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"8613:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2519,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"8627:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8613:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8609:25:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8598:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2523,"nodeType":"ExpressionStatement","src":"8598:36:8"},{"expression":{"id":2530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2524,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"8672:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8683:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2526,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"8687:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2527,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"8701:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8687:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8683:25:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8672:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2531,"nodeType":"ExpressionStatement","src":"8672:36:8"},{"expression":{"id":2536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2532,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2415,"src":"9154:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2533,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"9163:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2534,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"9171:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9163:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9154:24:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2537,"nodeType":"ExpressionStatement","src":"9154:24:8"},{"expression":{"id":2538,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2415,"src":"9199:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2416,"id":2539,"nodeType":"Return","src":"9192:13:8"}]}]},"documentation":{"id":2406,"nodeType":"StructuredDocumentation","src":"4679:312:8","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":2542,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"5005:6:8","nodeType":"FunctionDefinition","parameters":{"id":2413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2408,"mutability":"mutable","name":"x","nameLocation":"5020:1:8","nodeType":"VariableDeclaration","scope":2542,"src":"5012:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2407,"name":"uint256","nodeType":"ElementaryTypeName","src":"5012:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2410,"mutability":"mutable","name":"y","nameLocation":"5031:1:8","nodeType":"VariableDeclaration","scope":2542,"src":"5023:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2409,"name":"uint256","nodeType":"ElementaryTypeName","src":"5023:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2412,"mutability":"mutable","name":"denominator","nameLocation":"5042:11:8","nodeType":"VariableDeclaration","scope":2542,"src":"5034:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2411,"name":"uint256","nodeType":"ElementaryTypeName","src":"5034:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5011:43:8"},"returnParameters":{"id":2416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2415,"mutability":"mutable","name":"result","nameLocation":"5086:6:8","nodeType":"VariableDeclaration","scope":2542,"src":"5078:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2414,"name":"uint256","nodeType":"ElementaryTypeName","src":"5078:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5077:16:8"},"scope":3712,"src":"4996:4226:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2578,"nodeType":"Block","src":"9461:128:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2558,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2545,"src":"9485:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2559,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2547,"src":"9488:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2560,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2549,"src":"9491:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2557,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[2542,2579],"referencedDeclaration":2542,"src":"9478:6:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9478:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2565,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2552,"src":"9539:8:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2118","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2118","typeString":"enum Math.Rounding"}],"id":2564,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3711,"src":"9522:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2118_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9522:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2568,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2545,"src":"9559:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2569,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2547,"src":"9562:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2570,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2549,"src":"9565:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2567,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"9552:6:8","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9552:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9580:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9552:29:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9522:59:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2562,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5477,"src":"9506:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5477_$","typeString":"type(library SafeCast)"}},"id":2563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9515:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5476,"src":"9506:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9506:76:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9478:104:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2556,"id":2577,"nodeType":"Return","src":"9471:111:8"}]},"documentation":{"id":2543,"nodeType":"StructuredDocumentation","src":"9228:118:8","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":2579,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"9360:6:8","nodeType":"FunctionDefinition","parameters":{"id":2553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2545,"mutability":"mutable","name":"x","nameLocation":"9375:1:8","nodeType":"VariableDeclaration","scope":2579,"src":"9367:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2544,"name":"uint256","nodeType":"ElementaryTypeName","src":"9367:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2547,"mutability":"mutable","name":"y","nameLocation":"9386:1:8","nodeType":"VariableDeclaration","scope":2579,"src":"9378:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2546,"name":"uint256","nodeType":"ElementaryTypeName","src":"9378:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2549,"mutability":"mutable","name":"denominator","nameLocation":"9397:11:8","nodeType":"VariableDeclaration","scope":2579,"src":"9389:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2548,"name":"uint256","nodeType":"ElementaryTypeName","src":"9389:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2552,"mutability":"mutable","name":"rounding","nameLocation":"9419:8:8","nodeType":"VariableDeclaration","scope":2579,"src":"9410:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2118","typeString":"enum Math.Rounding"},"typeName":{"id":2551,"nodeType":"UserDefinedTypeName","pathNode":{"id":2550,"name":"Rounding","nameLocations":["9410:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":2118,"src":"9410:8:8"},"referencedDeclaration":2118,"src":"9410:8:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2118","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9366:62:8"},"returnParameters":{"id":2556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2555,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2579,"src":"9452:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2554,"name":"uint256","nodeType":"ElementaryTypeName","src":"9452:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9451:9:8"},"scope":3712,"src":"9351:238:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2675,"nodeType":"Block","src":"10223:1849:8","statements":[{"id":2674,"nodeType":"UncheckedBlock","src":"10233:1833:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2589,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2584,"src":"10261:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10266:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10261:6:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2594,"nodeType":"IfStatement","src":"10257:20:8","trueBody":{"expression":{"hexValue":"30","id":2592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2588,"id":2593,"nodeType":"Return","src":"10269:8:8"}},{"assignments":[2596],"declarations":[{"constant":false,"id":2596,"mutability":"mutable","name":"remainder","nameLocation":"10756:9:8","nodeType":"VariableDeclaration","scope":2674,"src":"10748:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2595,"name":"uint256","nodeType":"ElementaryTypeName","src":"10748:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2600,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2597,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2582,"src":"10768:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":2598,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2584,"src":"10772:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10768:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10748:25:8"},{"assignments":[2602],"declarations":[{"constant":false,"id":2602,"mutability":"mutable","name":"gcd","nameLocation":"10795:3:8","nodeType":"VariableDeclaration","scope":2674,"src":"10787:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2601,"name":"uint256","nodeType":"ElementaryTypeName","src":"10787:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2604,"initialValue":{"id":2603,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2584,"src":"10801:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10787:15:8"},{"assignments":[2606],"declarations":[{"constant":false,"id":2606,"mutability":"mutable","name":"x","nameLocation":"10945:1:8","nodeType":"VariableDeclaration","scope":2674,"src":"10938:8:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2605,"name":"int256","nodeType":"ElementaryTypeName","src":"10938:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":2608,"initialValue":{"hexValue":"30","id":2607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10949:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10938:12:8"},{"assignments":[2610],"declarations":[{"constant":false,"id":2610,"mutability":"mutable","name":"y","nameLocation":"10971:1:8","nodeType":"VariableDeclaration","scope":2674,"src":"10964:8:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2609,"name":"int256","nodeType":"ElementaryTypeName","src":"10964:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":2612,"initialValue":{"hexValue":"31","id":2611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10975:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"10964:12:8"},{"body":{"id":2649,"nodeType":"Block","src":"11014:882:8","statements":[{"assignments":[2617],"declarations":[{"constant":false,"id":2617,"mutability":"mutable","name":"quotient","nameLocation":"11040:8:8","nodeType":"VariableDeclaration","scope":2649,"src":"11032:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2616,"name":"uint256","nodeType":"ElementaryTypeName","src":"11032:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2621,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2618,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"11051:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2619,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2596,"src":"11057:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11051:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11032:34:8"},{"expression":{"id":2632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":2622,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"11086:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2623,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2596,"src":"11091:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2624,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11085:16:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":2625,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2596,"src":"11191:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2626,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"11436:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2627,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2596,"src":"11442:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2628,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2617,"src":"11454:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11442:20:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11436:26:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2631,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11104:376:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"11085:395:8","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2633,"nodeType":"ExpressionStatement","src":"11085:395:8"},{"expression":{"id":2647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":2634,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2606,"src":"11500:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":2635,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2610,"src":"11503:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2636,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11499:6:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":2637,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2610,"src":"11585:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2638,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2606,"src":"11839:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2639,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2610,"src":"11843:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":2642,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2617,"src":"11854:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2641,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11847:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2640,"name":"int256","nodeType":"ElementaryTypeName","src":"11847:6:8","typeDescriptions":{}}},"id":2643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11847:16:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11843:20:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11839:24:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2646,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11508:373:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"11499:382:8","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2648,"nodeType":"ExpressionStatement","src":"11499:382:8"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2613,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2596,"src":"10998:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11011:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10998:14:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2650,"nodeType":"WhileStatement","src":"10991:905:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2651,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"11914:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":2652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11921:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11914:8:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2656,"nodeType":"IfStatement","src":"11910:22:8","trueBody":{"expression":{"hexValue":"30","id":2654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11931:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2588,"id":2655,"nodeType":"Return","src":"11924:8:8"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2658,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2606,"src":"11983:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":2659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11987:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11983:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2661,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2584,"src":"11990:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":2665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"12002:2:8","subExpression":{"id":2664,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2606,"src":"12003:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2663,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11994:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2662,"name":"uint256","nodeType":"ElementaryTypeName","src":"11994:7:8","typeDescriptions":{}}},"id":2666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11994:11:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11990:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2670,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2606,"src":"12015:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2669,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12007:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2668,"name":"uint256","nodeType":"ElementaryTypeName","src":"12007:7:8","typeDescriptions":{}}},"id":2671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12007:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2657,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2303,"src":"11975:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":2672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11975:43:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2588,"id":2673,"nodeType":"Return","src":"11968:50:8"}]}]},"documentation":{"id":2580,"nodeType":"StructuredDocumentation","src":"9595:553:8","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":2676,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"10162:6:8","nodeType":"FunctionDefinition","parameters":{"id":2585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2582,"mutability":"mutable","name":"a","nameLocation":"10177:1:8","nodeType":"VariableDeclaration","scope":2676,"src":"10169:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2581,"name":"uint256","nodeType":"ElementaryTypeName","src":"10169:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2584,"mutability":"mutable","name":"n","nameLocation":"10188:1:8","nodeType":"VariableDeclaration","scope":2676,"src":"10180:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2583,"name":"uint256","nodeType":"ElementaryTypeName","src":"10180:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10168:22:8"},"returnParameters":{"id":2588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2587,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2676,"src":"10214:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2586,"name":"uint256","nodeType":"ElementaryTypeName","src":"10214:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10213:9:8"},"scope":3712,"src":"10153:1919:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2696,"nodeType":"Block","src":"12672:82:8","statements":[{"id":2695,"nodeType":"UncheckedBlock","src":"12682:66:8","statements":[{"expression":{"arguments":[{"id":2688,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2679,"src":"12725:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2689,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2681,"src":"12728:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":2690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12732:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12728:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2692,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2681,"src":"12735:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2686,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3712,"src":"12713:4:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3712_$","typeString":"type(library Math)"}},"id":2687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12718:6:8","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":2733,"src":"12713:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":2693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12713:24:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2685,"id":2694,"nodeType":"Return","src":"12706:31:8"}]}]},"documentation":{"id":2677,"nodeType":"StructuredDocumentation","src":"12078:514:8","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":2697,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"12606:11:8","nodeType":"FunctionDefinition","parameters":{"id":2682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2679,"mutability":"mutable","name":"a","nameLocation":"12626:1:8","nodeType":"VariableDeclaration","scope":2697,"src":"12618:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2678,"name":"uint256","nodeType":"ElementaryTypeName","src":"12618:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2681,"mutability":"mutable","name":"p","nameLocation":"12637:1:8","nodeType":"VariableDeclaration","scope":2697,"src":"12629:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2680,"name":"uint256","nodeType":"ElementaryTypeName","src":"12629:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12617:22:8"},"returnParameters":{"id":2685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2684,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2697,"src":"12663:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2683,"name":"uint256","nodeType":"ElementaryTypeName","src":"12663:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12662:9:8"},"scope":3712,"src":"12597:157:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2732,"nodeType":"Block","src":"13524:174:8","statements":[{"assignments":[2710,2712],"declarations":[{"constant":false,"id":2710,"mutability":"mutable","name":"success","nameLocation":"13540:7:8","nodeType":"VariableDeclaration","scope":2732,"src":"13535:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2709,"name":"bool","nodeType":"ElementaryTypeName","src":"13535:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2712,"mutability":"mutable","name":"result","nameLocation":"13557:6:8","nodeType":"VariableDeclaration","scope":2732,"src":"13549:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2711,"name":"uint256","nodeType":"ElementaryTypeName","src":"13549:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2718,"initialValue":{"arguments":[{"id":2714,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2700,"src":"13577:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2715,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2702,"src":"13580:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2716,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2704,"src":"13583:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2713,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[2757,2839],"referencedDeclaration":2757,"src":"13567:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":2717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13567:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"13534:51:8"},{"condition":{"id":2720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"13599:8:8","subExpression":{"id":2719,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2710,"src":"13600:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2729,"nodeType":"IfStatement","src":"13595:74:8","trueBody":{"id":2728,"nodeType":"Block","src":"13609:60:8","statements":[{"expression":{"arguments":[{"expression":{"id":2724,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"13635:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$837_$","typeString":"type(library Panic)"}},"id":2725,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13641:16:8","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":804,"src":"13635:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2721,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"13623:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$837_$","typeString":"type(library Panic)"}},"id":2723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13629:5:8","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":836,"src":"13623:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13623:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2727,"nodeType":"ExpressionStatement","src":"13623:35:8"}]}},{"expression":{"id":2730,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2712,"src":"13685:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2708,"id":2731,"nodeType":"Return","src":"13678:13:8"}]},"documentation":{"id":2698,"nodeType":"StructuredDocumentation","src":"12760:678:8","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":2733,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"13452:6:8","nodeType":"FunctionDefinition","parameters":{"id":2705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2700,"mutability":"mutable","name":"b","nameLocation":"13467:1:8","nodeType":"VariableDeclaration","scope":2733,"src":"13459:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2699,"name":"uint256","nodeType":"ElementaryTypeName","src":"13459:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2702,"mutability":"mutable","name":"e","nameLocation":"13478:1:8","nodeType":"VariableDeclaration","scope":2733,"src":"13470:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2701,"name":"uint256","nodeType":"ElementaryTypeName","src":"13470:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2704,"mutability":"mutable","name":"m","nameLocation":"13489:1:8","nodeType":"VariableDeclaration","scope":2733,"src":"13481:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2703,"name":"uint256","nodeType":"ElementaryTypeName","src":"13481:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13458:33:8"},"returnParameters":{"id":2708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2707,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2733,"src":"13515:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2706,"name":"uint256","nodeType":"ElementaryTypeName","src":"13515:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13514:9:8"},"scope":3712,"src":"13443:255:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2756,"nodeType":"Block","src":"14552:1493:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2747,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2740,"src":"14566:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14571:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14566:6:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2754,"nodeType":"IfStatement","src":"14562:29:8","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14582:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14589:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2752,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"14581:10:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2746,"id":2753,"nodeType":"Return","src":"14574:17:8"}},{"AST":{"nodeType":"YulBlock","src":"14626:1413:8","statements":[{"nodeType":"YulVariableDeclaration","src":"14640:22:8","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14657:4:8","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14651:5:8"},"nodeType":"YulFunctionCall","src":"14651:11:8"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"14644:3:8","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15570:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"15575:4:8","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15563:6:8"},"nodeType":"YulFunctionCall","src":"15563:17:8"},"nodeType":"YulExpressionStatement","src":"15563:17:8"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15604:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"15609:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15600:3:8"},"nodeType":"YulFunctionCall","src":"15600:14:8"},{"kind":"number","nodeType":"YulLiteral","src":"15616:4:8","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15593:6:8"},"nodeType":"YulFunctionCall","src":"15593:28:8"},"nodeType":"YulExpressionStatement","src":"15593:28:8"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15645:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"15650:4:8","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15641:3:8"},"nodeType":"YulFunctionCall","src":"15641:14:8"},{"kind":"number","nodeType":"YulLiteral","src":"15657:4:8","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15634:6:8"},"nodeType":"YulFunctionCall","src":"15634:28:8"},"nodeType":"YulExpressionStatement","src":"15634:28:8"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15686:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"15691:4:8","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15682:3:8"},"nodeType":"YulFunctionCall","src":"15682:14:8"},{"name":"b","nodeType":"YulIdentifier","src":"15698:1:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15675:6:8"},"nodeType":"YulFunctionCall","src":"15675:25:8"},"nodeType":"YulExpressionStatement","src":"15675:25:8"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15724:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"15729:4:8","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15720:3:8"},"nodeType":"YulFunctionCall","src":"15720:14:8"},{"name":"e","nodeType":"YulIdentifier","src":"15736:1:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15713:6:8"},"nodeType":"YulFunctionCall","src":"15713:25:8"},"nodeType":"YulExpressionStatement","src":"15713:25:8"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15762:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"15767:4:8","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15758:3:8"},"nodeType":"YulFunctionCall","src":"15758:14:8"},{"name":"m","nodeType":"YulIdentifier","src":"15774:1:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15751:6:8"},"nodeType":"YulFunctionCall","src":"15751:25:8"},"nodeType":"YulExpressionStatement","src":"15751:25:8"},{"nodeType":"YulAssignment","src":"15938:57:8","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"15960:3:8"},"nodeType":"YulFunctionCall","src":"15960:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"15967:4:8","type":"","value":"0x05"},{"name":"ptr","nodeType":"YulIdentifier","src":"15973:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"15978:4:8","type":"","value":"0xc0"},{"kind":"number","nodeType":"YulLiteral","src":"15984:4:8","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"15990:4:8","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"15949:10:8"},"nodeType":"YulFunctionCall","src":"15949:46:8"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"15938:7:8"}]},{"nodeType":"YulAssignment","src":"16008:21:8","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16024:4:8","type":"","value":"0x00"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16018:5:8"},"nodeType":"YulFunctionCall","src":"16018:11:8"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"16008:6:8"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2736,"isOffset":false,"isSlot":false,"src":"15698:1:8","valueSize":1},{"declaration":2738,"isOffset":false,"isSlot":false,"src":"15736:1:8","valueSize":1},{"declaration":2740,"isOffset":false,"isSlot":false,"src":"15774:1:8","valueSize":1},{"declaration":2745,"isOffset":false,"isSlot":false,"src":"16008:6:8","valueSize":1},{"declaration":2743,"isOffset":false,"isSlot":false,"src":"15938:7:8","valueSize":1}],"flags":["memory-safe"],"id":2755,"nodeType":"InlineAssembly","src":"14601:1438:8"}]},"documentation":{"id":2734,"nodeType":"StructuredDocumentation","src":"13704:738:8","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":2757,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"14456:9:8","nodeType":"FunctionDefinition","parameters":{"id":2741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2736,"mutability":"mutable","name":"b","nameLocation":"14474:1:8","nodeType":"VariableDeclaration","scope":2757,"src":"14466:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2735,"name":"uint256","nodeType":"ElementaryTypeName","src":"14466:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2738,"mutability":"mutable","name":"e","nameLocation":"14485:1:8","nodeType":"VariableDeclaration","scope":2757,"src":"14477:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2737,"name":"uint256","nodeType":"ElementaryTypeName","src":"14477:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2740,"mutability":"mutable","name":"m","nameLocation":"14496:1:8","nodeType":"VariableDeclaration","scope":2757,"src":"14488:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2739,"name":"uint256","nodeType":"ElementaryTypeName","src":"14488:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14465:33:8"},"returnParameters":{"id":2746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2743,"mutability":"mutable","name":"success","nameLocation":"14527:7:8","nodeType":"VariableDeclaration","scope":2757,"src":"14522:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2742,"name":"bool","nodeType":"ElementaryTypeName","src":"14522:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2745,"mutability":"mutable","name":"result","nameLocation":"14544:6:8","nodeType":"VariableDeclaration","scope":2757,"src":"14536:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2744,"name":"uint256","nodeType":"ElementaryTypeName","src":"14536:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14521:30:8"},"scope":3712,"src":"14447:1598:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2792,"nodeType":"Block","src":"16242:179:8","statements":[{"assignments":[2770,2772],"declarations":[{"constant":false,"id":2770,"mutability":"mutable","name":"success","nameLocation":"16258:7:8","nodeType":"VariableDeclaration","scope":2792,"src":"16253:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2769,"name":"bool","nodeType":"ElementaryTypeName","src":"16253:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2772,"mutability":"mutable","name":"result","nameLocation":"16280:6:8","nodeType":"VariableDeclaration","scope":2792,"src":"16267:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2771,"name":"bytes","nodeType":"ElementaryTypeName","src":"16267:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2778,"initialValue":{"arguments":[{"id":2774,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2760,"src":"16300:1:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2775,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2762,"src":"16303:1:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2776,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2764,"src":"16306:1:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2773,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[2757,2839],"referencedDeclaration":2839,"src":"16290:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":2777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16290:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"16252:56:8"},{"condition":{"id":2780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16322:8:8","subExpression":{"id":2779,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2770,"src":"16323:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2789,"nodeType":"IfStatement","src":"16318:74:8","trueBody":{"id":2788,"nodeType":"Block","src":"16332:60:8","statements":[{"expression":{"arguments":[{"expression":{"id":2784,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"16358:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$837_$","typeString":"type(library Panic)"}},"id":2785,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16364:16:8","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":804,"src":"16358:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2781,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"16346:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$837_$","typeString":"type(library Panic)"}},"id":2783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16352:5:8","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":836,"src":"16346:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16346:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2787,"nodeType":"ExpressionStatement","src":"16346:35:8"}]}},{"expression":{"id":2790,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2772,"src":"16408:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2768,"id":2791,"nodeType":"Return","src":"16401:13:8"}]},"documentation":{"id":2758,"nodeType":"StructuredDocumentation","src":"16051:85:8","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":2793,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"16150:6:8","nodeType":"FunctionDefinition","parameters":{"id":2765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2760,"mutability":"mutable","name":"b","nameLocation":"16170:1:8","nodeType":"VariableDeclaration","scope":2793,"src":"16157:14:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2759,"name":"bytes","nodeType":"ElementaryTypeName","src":"16157:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2762,"mutability":"mutable","name":"e","nameLocation":"16186:1:8","nodeType":"VariableDeclaration","scope":2793,"src":"16173:14:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2761,"name":"bytes","nodeType":"ElementaryTypeName","src":"16173:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2764,"mutability":"mutable","name":"m","nameLocation":"16202:1:8","nodeType":"VariableDeclaration","scope":2793,"src":"16189:14:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2763,"name":"bytes","nodeType":"ElementaryTypeName","src":"16189:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16156:48:8"},"returnParameters":{"id":2768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2767,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2793,"src":"16228:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2766,"name":"bytes","nodeType":"ElementaryTypeName","src":"16228:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16227:14:8"},"scope":3712,"src":"16141:280:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2838,"nodeType":"Block","src":"16675:771:8","statements":[{"condition":{"arguments":[{"id":2808,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2800,"src":"16700:1:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2807,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2872,"src":"16689:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":2809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16689:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2817,"nodeType":"IfStatement","src":"16685:47:8","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16712:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":2813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16729:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2812,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"16719:9:8","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2811,"name":"bytes","nodeType":"ElementaryTypeName","src":"16723:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16719:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":2815,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16711:21:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":2806,"id":2816,"nodeType":"Return","src":"16704:28:8"}},{"assignments":[2819],"declarations":[{"constant":false,"id":2819,"mutability":"mutable","name":"mLen","nameLocation":"16751:4:8","nodeType":"VariableDeclaration","scope":2838,"src":"16743:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2818,"name":"uint256","nodeType":"ElementaryTypeName","src":"16743:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2822,"initialValue":{"expression":{"id":2820,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2800,"src":"16758:1:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16760:6:8","memberName":"length","nodeType":"MemberAccess","src":"16758:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16743:23:8"},{"expression":{"id":2835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2823,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2805,"src":"16848:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":2826,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2796,"src":"16874:1:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16876:6:8","memberName":"length","nodeType":"MemberAccess","src":"16874:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2828,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2798,"src":"16884:1:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16886:6:8","memberName":"length","nodeType":"MemberAccess","src":"16884:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2830,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2819,"src":"16894:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2831,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2796,"src":"16900:1:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2832,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2798,"src":"16903:1:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2833,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2800,"src":"16906:1:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2824,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"16857:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2825,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16861:12:8","memberName":"encodePacked","nodeType":"MemberAccess","src":"16857:16:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16857:51:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"16848:60:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2836,"nodeType":"ExpressionStatement","src":"16848:60:8"},{"AST":{"nodeType":"YulBlock","src":"16944:496:8","statements":[{"nodeType":"YulVariableDeclaration","src":"16958:32:8","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"16977:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"16985:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16973:3:8"},"nodeType":"YulFunctionCall","src":"16973:17:8"},"variables":[{"name":"dataPtr","nodeType":"YulTypedName","src":"16962:7:8","type":""}]},{"nodeType":"YulAssignment","src":"17080:73:8","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"17102:3:8"},"nodeType":"YulFunctionCall","src":"17102:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"17109:4:8","type":"","value":"0x05"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"17115:7:8"},{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"17130:6:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17124:5:8"},"nodeType":"YulFunctionCall","src":"17124:13:8"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"17139:7:8"},{"name":"mLen","nodeType":"YulIdentifier","src":"17148:4:8"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"17091:10:8"},"nodeType":"YulFunctionCall","src":"17091:62:8"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"17080:7:8"}]},{"expression":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"17309:6:8"},{"name":"mLen","nodeType":"YulIdentifier","src":"17317:4:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17302:6:8"},"nodeType":"YulFunctionCall","src":"17302:20:8"},"nodeType":"YulExpressionStatement","src":"17302:20:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17405:4:8","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"17415:7:8"},{"name":"mLen","nodeType":"YulIdentifier","src":"17424:4:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17411:3:8"},"nodeType":"YulFunctionCall","src":"17411:18:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17398:6:8"},"nodeType":"YulFunctionCall","src":"17398:32:8"},"nodeType":"YulExpressionStatement","src":"17398:32:8"}]},"evmVersion":"paris","externalReferences":[{"declaration":2819,"isOffset":false,"isSlot":false,"src":"17148:4:8","valueSize":1},{"declaration":2819,"isOffset":false,"isSlot":false,"src":"17317:4:8","valueSize":1},{"declaration":2819,"isOffset":false,"isSlot":false,"src":"17424:4:8","valueSize":1},{"declaration":2805,"isOffset":false,"isSlot":false,"src":"16977:6:8","valueSize":1},{"declaration":2805,"isOffset":false,"isSlot":false,"src":"17130:6:8","valueSize":1},{"declaration":2805,"isOffset":false,"isSlot":false,"src":"17309:6:8","valueSize":1},{"declaration":2803,"isOffset":false,"isSlot":false,"src":"17080:7:8","valueSize":1}],"flags":["memory-safe"],"id":2837,"nodeType":"InlineAssembly","src":"16919:521:8"}]},"documentation":{"id":2794,"nodeType":"StructuredDocumentation","src":"16427:88:8","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":2839,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16529:9:8","nodeType":"FunctionDefinition","parameters":{"id":2801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2796,"mutability":"mutable","name":"b","nameLocation":"16561:1:8","nodeType":"VariableDeclaration","scope":2839,"src":"16548:14:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2795,"name":"bytes","nodeType":"ElementaryTypeName","src":"16548:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2798,"mutability":"mutable","name":"e","nameLocation":"16585:1:8","nodeType":"VariableDeclaration","scope":2839,"src":"16572:14:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2797,"name":"bytes","nodeType":"ElementaryTypeName","src":"16572:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2800,"mutability":"mutable","name":"m","nameLocation":"16609:1:8","nodeType":"VariableDeclaration","scope":2839,"src":"16596:14:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2799,"name":"bytes","nodeType":"ElementaryTypeName","src":"16596:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16538:78:8"},"returnParameters":{"id":2806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2803,"mutability":"mutable","name":"success","nameLocation":"16645:7:8","nodeType":"VariableDeclaration","scope":2839,"src":"16640:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2802,"name":"bool","nodeType":"ElementaryTypeName","src":"16640:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2805,"mutability":"mutable","name":"result","nameLocation":"16667:6:8","nodeType":"VariableDeclaration","scope":2839,"src":"16654:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2804,"name":"bytes","nodeType":"ElementaryTypeName","src":"16654:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16639:35:8"},"scope":3712,"src":"16520:926:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2871,"nodeType":"Block","src":"17601:176:8","statements":[{"body":{"id":2867,"nodeType":"Block","src":"17658:92:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2858,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2842,"src":"17676:9:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2860,"indexExpression":{"id":2859,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"17686:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17676:12:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17692:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17676:17:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2866,"nodeType":"IfStatement","src":"17672:68:8","trueBody":{"id":2865,"nodeType":"Block","src":"17695:45:8","statements":[{"expression":{"hexValue":"66616c7365","id":2863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17720:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":2846,"id":2864,"nodeType":"Return","src":"17713:12:8"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2851,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"17631:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2852,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2842,"src":"17635:9:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17645:6:8","memberName":"length","nodeType":"MemberAccess","src":"17635:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17631:20:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2868,"initializationExpression":{"assignments":[2848],"declarations":[{"constant":false,"id":2848,"mutability":"mutable","name":"i","nameLocation":"17624:1:8","nodeType":"VariableDeclaration","scope":2868,"src":"17616:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2847,"name":"uint256","nodeType":"ElementaryTypeName","src":"17616:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2850,"initialValue":{"hexValue":"30","id":2849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17628:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17616:13:8"},"loopExpression":{"expression":{"id":2856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17653:3:8","subExpression":{"id":2855,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"17655:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2857,"nodeType":"ExpressionStatement","src":"17653:3:8"},"nodeType":"ForStatement","src":"17611:139:8"},{"expression":{"hexValue":"74727565","id":2869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17766:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2846,"id":2870,"nodeType":"Return","src":"17759:11:8"}]},"documentation":{"id":2840,"nodeType":"StructuredDocumentation","src":"17452:72:8","text":" @dev Returns whether the provided byte array is zero."},"id":2872,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"17538:10:8","nodeType":"FunctionDefinition","parameters":{"id":2843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2842,"mutability":"mutable","name":"byteArray","nameLocation":"17562:9:8","nodeType":"VariableDeclaration","scope":2872,"src":"17549:22:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2841,"name":"bytes","nodeType":"ElementaryTypeName","src":"17549:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"17548:24:8"},"returnParameters":{"id":2846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2845,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2872,"src":"17595:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2844,"name":"bool","nodeType":"ElementaryTypeName","src":"17595:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17594:6:8"},"scope":3712,"src":"17529:248:8","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3090,"nodeType":"Block","src":"18137:5124:8","statements":[{"id":3089,"nodeType":"UncheckedBlock","src":"18147:5108:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2880,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2875,"src":"18241:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":2881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18246:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"18241:6:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2886,"nodeType":"IfStatement","src":"18237:53:8","trueBody":{"id":2885,"nodeType":"Block","src":"18249:41:8","statements":[{"expression":{"id":2883,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2875,"src":"18274:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2879,"id":2884,"nodeType":"Return","src":"18267:8:8"}]}},{"assignments":[2888],"declarations":[{"constant":false,"id":2888,"mutability":"mutable","name":"aa","nameLocation":"19225:2:8","nodeType":"VariableDeclaration","scope":3089,"src":"19217:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2887,"name":"uint256","nodeType":"ElementaryTypeName","src":"19217:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2890,"initialValue":{"id":2889,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2875,"src":"19230:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19217:14:8"},{"assignments":[2892],"declarations":[{"constant":false,"id":2892,"mutability":"mutable","name":"xn","nameLocation":"19253:2:8","nodeType":"VariableDeclaration","scope":3089,"src":"19245:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2891,"name":"uint256","nodeType":"ElementaryTypeName","src":"19245:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2894,"initialValue":{"hexValue":"31","id":2893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19258:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"19245:14:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2895,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2888,"src":"19278:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":2898,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19285:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":2897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19290:3:8","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19285:8:8","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":2899,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19284:10:8","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"19278:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2910,"nodeType":"IfStatement","src":"19274:92:8","trueBody":{"id":2909,"nodeType":"Block","src":"19296:70:8","statements":[{"expression":{"id":2903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2901,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2888,"src":"19314:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":2902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19321:3:8","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19314:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2904,"nodeType":"ExpressionStatement","src":"19314:10:8"},{"expression":{"id":2907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2905,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2892,"src":"19342:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":2906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19349:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19342:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2908,"nodeType":"ExpressionStatement","src":"19342:9:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2911,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2888,"src":"19383:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":2914,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19390:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":2913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19395:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19390:7:8","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":2915,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19389:9:8","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"19383:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2926,"nodeType":"IfStatement","src":"19379:90:8","trueBody":{"id":2925,"nodeType":"Block","src":"19400:69:8","statements":[{"expression":{"id":2919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2917,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2888,"src":"19418:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":2918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19425:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19418:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2920,"nodeType":"ExpressionStatement","src":"19418:9:8"},{"expression":{"id":2923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2921,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2892,"src":"19445:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":2922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19452:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19445:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2924,"nodeType":"ExpressionStatement","src":"19445:9:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2927,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2888,"src":"19486:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":2930,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19493:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":2929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19498:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19493:7:8","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":2931,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19492:9:8","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"19486:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2942,"nodeType":"IfStatement","src":"19482:90:8","trueBody":{"id":2941,"nodeType":"Block","src":"19503:69:8","statements":[{"expression":{"id":2935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2933,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2888,"src":"19521:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":2934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19528:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19521:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2936,"nodeType":"ExpressionStatement","src":"19521:9:8"},{"expression":{"id":2939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2937,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2892,"src":"19548:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":2938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19555:2:8","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19548:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2940,"nodeType":"ExpressionStatement","src":"19548:9:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2943,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2888,"src":"19589:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":2946,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19596:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":2945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19601:2:8","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19596:7:8","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":2947,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19595:9:8","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"19589:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2958,"nodeType":"IfStatement","src":"19585:89:8","trueBody":{"id":2957,"nodeType":"Block","src":"19606:68:8","statements":[{"expression":{"id":2951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2949,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2888,"src":"19624:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":2950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19631:2:8","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19624:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2952,"nodeType":"ExpressionStatement","src":"19624:9:8"},{"expression":{"id":2955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2953,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2892,"src":"19651:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":2954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19658:1:8","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19651:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2956,"nodeType":"ExpressionStatement","src":"19651:8:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2959,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2888,"src":"19691:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":2962,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19698:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":2961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19703:1:8","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19698:6:8","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":2963,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19697:8:8","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"19691:14:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2974,"nodeType":"IfStatement","src":"19687:87:8","trueBody":{"id":2973,"nodeType":"Block","src":"19707:67:8","statements":[{"expression":{"id":2967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2965,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2888,"src":"19725:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":2966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19732:1:8","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19725:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2968,"nodeType":"ExpressionStatement","src":"19725:8:8"},{"expression":{"id":2971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2969,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2892,"src":"19751:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":2970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19758:1:8","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19751:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2972,"nodeType":"ExpressionStatement","src":"19751:8:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2975,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2888,"src":"19791:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":2978,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19798:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":2977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19803:1:8","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19798:6:8","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":2979,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19797:8:8","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"19791:14:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2990,"nodeType":"IfStatement","src":"19787:87:8","trueBody":{"id":2989,"nodeType":"Block","src":"19807:67:8","statements":[{"expression":{"id":2983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2981,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2888,"src":"19825:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19832:1:8","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19825:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2984,"nodeType":"ExpressionStatement","src":"19825:8:8"},{"expression":{"id":2987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2985,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2892,"src":"19851:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":2986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19858:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19851:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2988,"nodeType":"ExpressionStatement","src":"19851:8:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2991,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2888,"src":"19891:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":2994,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19898:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":2993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19903:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19898:6:8","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":2995,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19897:8:8","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"19891:14:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3002,"nodeType":"IfStatement","src":"19887:61:8","trueBody":{"id":3001,"nodeType":"Block","src":"19907:41:8","statements":[{"expression":{"id":2999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2997,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2892,"src":"19925:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":2998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19932:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"19925:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3000,"nodeType":"ExpressionStatement","src":"19925:8:8"}]}},{"expression":{"id":3010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3003,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2892,"src":"20368:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":3004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20374:1:8","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3005,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2892,"src":"20378:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20374:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3007,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20373:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20385:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20373:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20368:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3011,"nodeType":"ExpressionStatement","src":"20368:18:8"},{"expression":{"id":3021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3012,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2892,"src":"22273:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3013,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2892,"src":"22279:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3014,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2875,"src":"22284:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3015,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2892,"src":"22288:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22284:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22279:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3018,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22278:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22295:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22278:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22273:23:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3022,"nodeType":"ExpressionStatement","src":"22273:23:8"},{"expression":{"id":3032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3023,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2892,"src":"22382:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3024,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2892,"src":"22388:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3025,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2875,"src":"22393:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3026,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2892,"src":"22397:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22393:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22388:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3029,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22387:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22404:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22387:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22382:23:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3033,"nodeType":"ExpressionStatement","src":"22382:23:8"},{"expression":{"id":3043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3034,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2892,"src":"22493:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3035,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2892,"src":"22499:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3036,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2875,"src":"22504:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3037,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2892,"src":"22508:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22504:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22499:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3040,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22498:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22515:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22498:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22493:23:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3044,"nodeType":"ExpressionStatement","src":"22493:23:8"},{"expression":{"id":3054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3045,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2892,"src":"22602:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3046,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2892,"src":"22608:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3047,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2875,"src":"22613:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3048,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2892,"src":"22617:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22613:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22608:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3051,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22607:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22624:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22607:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22602:23:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3055,"nodeType":"ExpressionStatement","src":"22602:23:8"},{"expression":{"id":3065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3056,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2892,"src":"22712:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3057,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2892,"src":"22718:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3058,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2875,"src":"22723:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3059,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2892,"src":"22727:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22723:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22718:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3062,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22717:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22734:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22717:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22712:23:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3066,"nodeType":"ExpressionStatement","src":"22712:23:8"},{"expression":{"id":3076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3067,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2892,"src":"22822:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3068,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2892,"src":"22828:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3069,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2875,"src":"22833:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3070,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2892,"src":"22837:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22833:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22828:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3073,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22827:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22844:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22827:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22822:23:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3077,"nodeType":"ExpressionStatement","src":"22822:23:8"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3078,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2892,"src":"23211:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3081,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2892,"src":"23232:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3082,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2875,"src":"23237:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3083,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2892,"src":"23241:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23237:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23232:11:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3079,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5477,"src":"23216:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5477_$","typeString":"type(library SafeCast)"}},"id":3080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23225:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5476,"src":"23216:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23216:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23211:33:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2879,"id":3088,"nodeType":"Return","src":"23204:40:8"}]}]},"documentation":{"id":2873,"nodeType":"StructuredDocumentation","src":"17783:292:8","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":3091,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"18089:4:8","nodeType":"FunctionDefinition","parameters":{"id":2876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2875,"mutability":"mutable","name":"a","nameLocation":"18102:1:8","nodeType":"VariableDeclaration","scope":3091,"src":"18094:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2874,"name":"uint256","nodeType":"ElementaryTypeName","src":"18094:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18093:11:8"},"returnParameters":{"id":2879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2878,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3091,"src":"18128:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2877,"name":"uint256","nodeType":"ElementaryTypeName","src":"18128:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18127:9:8"},"scope":3712,"src":"18080:5181:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3124,"nodeType":"Block","src":"23434:171:8","statements":[{"id":3123,"nodeType":"UncheckedBlock","src":"23444:155:8","statements":[{"assignments":[3103],"declarations":[{"constant":false,"id":3103,"mutability":"mutable","name":"result","nameLocation":"23476:6:8","nodeType":"VariableDeclaration","scope":3123,"src":"23468:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3102,"name":"uint256","nodeType":"ElementaryTypeName","src":"23468:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3107,"initialValue":{"arguments":[{"id":3105,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3094,"src":"23490:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3104,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[3091,3125],"referencedDeclaration":3091,"src":"23485:4:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23485:7:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"23468:24:8"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3108,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3103,"src":"23513:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3112,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3097,"src":"23555:8:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2118","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2118","typeString":"enum Math.Rounding"}],"id":3111,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3711,"src":"23538:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2118_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23538:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3114,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3103,"src":"23568:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3115,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3103,"src":"23577:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3117,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3094,"src":"23586:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"23538:49:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3109,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5477,"src":"23522:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5477_$","typeString":"type(library SafeCast)"}},"id":3110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23531:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5476,"src":"23522:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23522:66:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23513:75:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3101,"id":3122,"nodeType":"Return","src":"23506:82:8"}]}]},"documentation":{"id":3092,"nodeType":"StructuredDocumentation","src":"23267:86:8","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":3125,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"23367:4:8","nodeType":"FunctionDefinition","parameters":{"id":3098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3094,"mutability":"mutable","name":"a","nameLocation":"23380:1:8","nodeType":"VariableDeclaration","scope":3125,"src":"23372:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3093,"name":"uint256","nodeType":"ElementaryTypeName","src":"23372:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3097,"mutability":"mutable","name":"rounding","nameLocation":"23392:8:8","nodeType":"VariableDeclaration","scope":3125,"src":"23383:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2118","typeString":"enum Math.Rounding"},"typeName":{"id":3096,"nodeType":"UserDefinedTypeName","pathNode":{"id":3095,"name":"Rounding","nameLocations":["23383:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":2118,"src":"23383:8:8"},"referencedDeclaration":2118,"src":"23383:8:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2118","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"23371:30:8"},"returnParameters":{"id":3101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3100,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3125,"src":"23425:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3099,"name":"uint256","nodeType":"ElementaryTypeName","src":"23425:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23424:9:8"},"scope":3712,"src":"23358:247:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3320,"nodeType":"Block","src":"23796:981:8","statements":[{"assignments":[3134],"declarations":[{"constant":false,"id":3134,"mutability":"mutable","name":"result","nameLocation":"23814:6:8","nodeType":"VariableDeclaration","scope":3320,"src":"23806:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3133,"name":"uint256","nodeType":"ElementaryTypeName","src":"23806:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3136,"initialValue":{"hexValue":"30","id":3135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23823:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23806:18:8"},{"assignments":[3138],"declarations":[{"constant":false,"id":3138,"mutability":"mutable","name":"exp","nameLocation":"23842:3:8","nodeType":"VariableDeclaration","scope":3320,"src":"23834:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3137,"name":"uint256","nodeType":"ElementaryTypeName","src":"23834:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3139,"nodeType":"VariableDeclarationStatement","src":"23834:11:8"},{"id":3317,"nodeType":"UncheckedBlock","src":"23855:893:8","statements":[{"expression":{"id":3154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3140,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3138,"src":"23879:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"313238","id":3141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23885:3:8","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3144,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3128,"src":"23907:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":3150,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":3147,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23916:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":3146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23921:3:8","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"23916:8:8","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":3148,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"23915:10:8","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23928:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"23915:14:8","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"23907:22:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3142,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5477,"src":"23891:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5477_$","typeString":"type(library SafeCast)"}},"id":3143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23900:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5476,"src":"23891:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23891:39:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23885:45:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23879:51:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3155,"nodeType":"ExpressionStatement","src":"23879:51:8"},{"expression":{"id":3158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3156,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3128,"src":"23944:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":3157,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3138,"src":"23954:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23944:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3159,"nodeType":"ExpressionStatement","src":"23944:13:8"},{"expression":{"id":3162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3160,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3134,"src":"23971:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3161,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3138,"src":"23981:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23971:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3163,"nodeType":"ExpressionStatement","src":"23971:13:8"},{"expression":{"id":3178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3164,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3138,"src":"23999:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3634","id":3165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24005:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3168,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3128,"src":"24026:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":3174,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":3171,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24035:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":3170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24040:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"24035:7:8","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":3172,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24034:9:8","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24046:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24034:13:8","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"24026:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3166,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5477,"src":"24010:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5477_$","typeString":"type(library SafeCast)"}},"id":3167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24019:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5476,"src":"24010:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24010:38:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24005:43:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23999:49:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3179,"nodeType":"ExpressionStatement","src":"23999:49:8"},{"expression":{"id":3182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3180,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3128,"src":"24062:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":3181,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3138,"src":"24072:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24062:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3183,"nodeType":"ExpressionStatement","src":"24062:13:8"},{"expression":{"id":3186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3184,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3134,"src":"24089:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3185,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3138,"src":"24099:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24089:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3187,"nodeType":"ExpressionStatement","src":"24089:13:8"},{"expression":{"id":3202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3188,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3138,"src":"24117:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3332","id":3189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24123:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3192,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3128,"src":"24144:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":3198,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":3195,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24153:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":3194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24158:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"24153:7:8","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":3196,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24152:9:8","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24164:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24152:13:8","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"24144:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3190,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5477,"src":"24128:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5477_$","typeString":"type(library SafeCast)"}},"id":3191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24137:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5476,"src":"24128:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24128:38:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24123:43:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24117:49:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3203,"nodeType":"ExpressionStatement","src":"24117:49:8"},{"expression":{"id":3206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3204,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3128,"src":"24180:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":3205,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3138,"src":"24190:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24180:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3207,"nodeType":"ExpressionStatement","src":"24180:13:8"},{"expression":{"id":3210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3208,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3134,"src":"24207:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3209,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3138,"src":"24217:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24207:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3211,"nodeType":"ExpressionStatement","src":"24207:13:8"},{"expression":{"id":3226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3212,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3138,"src":"24235:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3136","id":3213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24241:2:8","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3216,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3128,"src":"24262:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":3222,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":3219,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24271:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":3218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24276:2:8","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"24271:7:8","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":3220,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24270:9:8","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24282:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24270:13:8","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"24262:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3214,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5477,"src":"24246:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5477_$","typeString":"type(library SafeCast)"}},"id":3215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24255:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5476,"src":"24246:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24246:38:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24241:43:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24235:49:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3227,"nodeType":"ExpressionStatement","src":"24235:49:8"},{"expression":{"id":3230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3228,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3128,"src":"24298:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":3229,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3138,"src":"24308:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24298:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3231,"nodeType":"ExpressionStatement","src":"24298:13:8"},{"expression":{"id":3234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3232,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3134,"src":"24325:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3233,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3138,"src":"24335:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24325:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3235,"nodeType":"ExpressionStatement","src":"24325:13:8"},{"expression":{"id":3250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3236,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3138,"src":"24353:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"38","id":3237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24359:1:8","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3240,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3128,"src":"24379:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":3246,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":3243,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24388:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":3242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24393:1:8","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"24388:6:8","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":3244,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24387:8:8","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24398:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24387:12:8","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"24379:20:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3238,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5477,"src":"24363:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5477_$","typeString":"type(library SafeCast)"}},"id":3239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24372:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5476,"src":"24363:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24363:37:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24359:41:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24353:47:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3251,"nodeType":"ExpressionStatement","src":"24353:47:8"},{"expression":{"id":3254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3252,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3128,"src":"24414:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":3253,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3138,"src":"24424:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24414:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3255,"nodeType":"ExpressionStatement","src":"24414:13:8"},{"expression":{"id":3258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3256,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3134,"src":"24441:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3257,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3138,"src":"24451:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24441:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3259,"nodeType":"ExpressionStatement","src":"24441:13:8"},{"expression":{"id":3274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3260,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3138,"src":"24469:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"34","id":3261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24475:1:8","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3264,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3128,"src":"24495:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"id":3270,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":3267,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24504:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":3266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24509:1:8","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"24504:6:8","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":3268,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24503:8:8","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24514:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24503:12:8","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"}},"src":"24495:20:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3262,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5477,"src":"24479:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5477_$","typeString":"type(library SafeCast)"}},"id":3263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24488:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5476,"src":"24479:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24479:37:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24475:41:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24469:47:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3275,"nodeType":"ExpressionStatement","src":"24469:47:8"},{"expression":{"id":3278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3276,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3128,"src":"24530:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":3277,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3138,"src":"24540:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24530:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3279,"nodeType":"ExpressionStatement","src":"24530:13:8"},{"expression":{"id":3282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3280,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3134,"src":"24557:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3281,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3138,"src":"24567:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24557:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3283,"nodeType":"ExpressionStatement","src":"24557:13:8"},{"expression":{"id":3298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3284,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3138,"src":"24585:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24591:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3288,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3128,"src":"24611:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"id":3294,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":3291,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24620:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":3290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24625:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"24620:6:8","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":3292,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24619:8:8","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24630:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24619:12:8","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"}},"src":"24611:20:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3286,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5477,"src":"24595:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5477_$","typeString":"type(library SafeCast)"}},"id":3287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24604:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5476,"src":"24595:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24595:37:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24591:41:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24585:47:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3299,"nodeType":"ExpressionStatement","src":"24585:47:8"},{"expression":{"id":3302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3300,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3128,"src":"24646:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":3301,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3138,"src":"24656:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24646:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3303,"nodeType":"ExpressionStatement","src":"24646:13:8"},{"expression":{"id":3306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3304,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3134,"src":"24673:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3305,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3138,"src":"24683:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24673:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3307,"nodeType":"ExpressionStatement","src":"24673:13:8"},{"expression":{"id":3315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3308,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3134,"src":"24701:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3311,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3128,"src":"24727:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":3312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24735:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24727:9:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3309,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5477,"src":"24711:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5477_$","typeString":"type(library SafeCast)"}},"id":3310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24720:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5476,"src":"24711:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24711:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24701:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3316,"nodeType":"ExpressionStatement","src":"24701:36:8"}]},{"expression":{"id":3318,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3134,"src":"24764:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3132,"id":3319,"nodeType":"Return","src":"24757:13:8"}]},"documentation":{"id":3126,"nodeType":"StructuredDocumentation","src":"23611:119:8","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":3321,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"23744:4:8","nodeType":"FunctionDefinition","parameters":{"id":3129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3128,"mutability":"mutable","name":"value","nameLocation":"23757:5:8","nodeType":"VariableDeclaration","scope":3321,"src":"23749:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3127,"name":"uint256","nodeType":"ElementaryTypeName","src":"23749:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23748:15:8"},"returnParameters":{"id":3132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3131,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3321,"src":"23787:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3130,"name":"uint256","nodeType":"ElementaryTypeName","src":"23787:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23786:9:8"},"scope":3712,"src":"23735:1042:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3354,"nodeType":"Block","src":"25010:175:8","statements":[{"id":3353,"nodeType":"UncheckedBlock","src":"25020:159:8","statements":[{"assignments":[3333],"declarations":[{"constant":false,"id":3333,"mutability":"mutable","name":"result","nameLocation":"25052:6:8","nodeType":"VariableDeclaration","scope":3353,"src":"25044:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3332,"name":"uint256","nodeType":"ElementaryTypeName","src":"25044:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3337,"initialValue":{"arguments":[{"id":3335,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3324,"src":"25066:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3334,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[3321,3355],"referencedDeclaration":3321,"src":"25061:4:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25061:11:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25044:28:8"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3338,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3333,"src":"25093:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3342,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3327,"src":"25135:8:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2118","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2118","typeString":"enum Math.Rounding"}],"id":3341,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3711,"src":"25118:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2118_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25118:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25148:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3345,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3333,"src":"25153:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3347,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3324,"src":"25162:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"25118:49:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3339,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5477,"src":"25102:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5477_$","typeString":"type(library SafeCast)"}},"id":3340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25111:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5476,"src":"25102:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25102:66:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25093:75:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3331,"id":3352,"nodeType":"Return","src":"25086:82:8"}]}]},"documentation":{"id":3322,"nodeType":"StructuredDocumentation","src":"24783:142:8","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3355,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"24939:4:8","nodeType":"FunctionDefinition","parameters":{"id":3328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3324,"mutability":"mutable","name":"value","nameLocation":"24952:5:8","nodeType":"VariableDeclaration","scope":3355,"src":"24944:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3323,"name":"uint256","nodeType":"ElementaryTypeName","src":"24944:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3327,"mutability":"mutable","name":"rounding","nameLocation":"24968:8:8","nodeType":"VariableDeclaration","scope":3355,"src":"24959:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2118","typeString":"enum Math.Rounding"},"typeName":{"id":3326,"nodeType":"UserDefinedTypeName","pathNode":{"id":3325,"name":"Rounding","nameLocations":["24959:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":2118,"src":"24959:8:8"},"referencedDeclaration":2118,"src":"24959:8:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2118","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"24943:34:8"},"returnParameters":{"id":3331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3330,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3355,"src":"25001:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3329,"name":"uint256","nodeType":"ElementaryTypeName","src":"25001:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25000:9:8"},"scope":3712,"src":"24930:255:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3483,"nodeType":"Block","src":"25378:854:8","statements":[{"assignments":[3364],"declarations":[{"constant":false,"id":3364,"mutability":"mutable","name":"result","nameLocation":"25396:6:8","nodeType":"VariableDeclaration","scope":3483,"src":"25388:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3363,"name":"uint256","nodeType":"ElementaryTypeName","src":"25388:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3366,"initialValue":{"hexValue":"30","id":3365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25405:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"25388:18:8"},{"id":3480,"nodeType":"UncheckedBlock","src":"25416:787:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3367,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3358,"src":"25444:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3370,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25453:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25459:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25453:8:8","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25444:17:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3383,"nodeType":"IfStatement","src":"25440:103:8","trueBody":{"id":3382,"nodeType":"Block","src":"25463:80:8","statements":[{"expression":{"id":3376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3372,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3358,"src":"25481:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3375,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25490:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25496:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25490:8:8","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25481:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3377,"nodeType":"ExpressionStatement","src":"25481:17:8"},{"expression":{"id":3380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3378,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3364,"src":"25516:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":3379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25526:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25516:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3381,"nodeType":"ExpressionStatement","src":"25516:12:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3384,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3358,"src":"25560:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3387,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25569:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25575:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25569:8:8","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25560:17:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3400,"nodeType":"IfStatement","src":"25556:103:8","trueBody":{"id":3399,"nodeType":"Block","src":"25579:80:8","statements":[{"expression":{"id":3393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3389,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3358,"src":"25597:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3392,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25606:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25612:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25606:8:8","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25597:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3394,"nodeType":"ExpressionStatement","src":"25597:17:8"},{"expression":{"id":3397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3395,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3364,"src":"25632:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":3396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25642:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25632:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3398,"nodeType":"ExpressionStatement","src":"25632:12:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3401,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3358,"src":"25676:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3404,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25685:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25691:2:8","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25685:8:8","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25676:17:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3417,"nodeType":"IfStatement","src":"25672:103:8","trueBody":{"id":3416,"nodeType":"Block","src":"25695:80:8","statements":[{"expression":{"id":3410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3406,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3358,"src":"25713:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3409,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25722:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25728:2:8","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25722:8:8","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25713:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3411,"nodeType":"ExpressionStatement","src":"25713:17:8"},{"expression":{"id":3414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3412,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3364,"src":"25748:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25758:2:8","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25748:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3415,"nodeType":"ExpressionStatement","src":"25748:12:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3418,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3358,"src":"25792:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3421,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25801:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25807:1:8","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25801:7:8","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25792:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3434,"nodeType":"IfStatement","src":"25788:100:8","trueBody":{"id":3433,"nodeType":"Block","src":"25810:78:8","statements":[{"expression":{"id":3427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3423,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3358,"src":"25828:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3426,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25837:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25843:1:8","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25837:7:8","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25828:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3428,"nodeType":"ExpressionStatement","src":"25828:16:8"},{"expression":{"id":3431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3429,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3364,"src":"25862:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25872:1:8","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25862:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3432,"nodeType":"ExpressionStatement","src":"25862:11:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3435,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3358,"src":"25905:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3438,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25914:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25920:1:8","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25914:7:8","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25905:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3451,"nodeType":"IfStatement","src":"25901:100:8","trueBody":{"id":3450,"nodeType":"Block","src":"25923:78:8","statements":[{"expression":{"id":3444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3440,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3358,"src":"25941:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3443,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25950:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25956:1:8","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25950:7:8","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25941:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3445,"nodeType":"ExpressionStatement","src":"25941:16:8"},{"expression":{"id":3448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3446,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3364,"src":"25975:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25985:1:8","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25975:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3449,"nodeType":"ExpressionStatement","src":"25975:11:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3452,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3358,"src":"26018:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3455,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26027:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26033:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26027:7:8","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26018:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3468,"nodeType":"IfStatement","src":"26014:100:8","trueBody":{"id":3467,"nodeType":"Block","src":"26036:78:8","statements":[{"expression":{"id":3461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3457,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3358,"src":"26054:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3460,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26063:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26069:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26063:7:8","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26054:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3462,"nodeType":"ExpressionStatement","src":"26054:16:8"},{"expression":{"id":3465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3463,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3364,"src":"26088:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26098:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26088:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3466,"nodeType":"ExpressionStatement","src":"26088:11:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3469,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3358,"src":"26131:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":3472,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26140:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":3471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26146:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26140:7:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"26131:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3479,"nodeType":"IfStatement","src":"26127:66:8","trueBody":{"id":3478,"nodeType":"Block","src":"26149:44:8","statements":[{"expression":{"id":3476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3474,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3364,"src":"26167:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26177:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26167:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3477,"nodeType":"ExpressionStatement","src":"26167:11:8"}]}}]},{"expression":{"id":3481,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3364,"src":"26219:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3362,"id":3482,"nodeType":"Return","src":"26212:13:8"}]},"documentation":{"id":3356,"nodeType":"StructuredDocumentation","src":"25191:120:8","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":3484,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"25325:5:8","nodeType":"FunctionDefinition","parameters":{"id":3359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3358,"mutability":"mutable","name":"value","nameLocation":"25339:5:8","nodeType":"VariableDeclaration","scope":3484,"src":"25331:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3357,"name":"uint256","nodeType":"ElementaryTypeName","src":"25331:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25330:15:8"},"returnParameters":{"id":3362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3361,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3484,"src":"25369:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3360,"name":"uint256","nodeType":"ElementaryTypeName","src":"25369:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25368:9:8"},"scope":3712,"src":"25316:916:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3517,"nodeType":"Block","src":"26467:177:8","statements":[{"id":3516,"nodeType":"UncheckedBlock","src":"26477:161:8","statements":[{"assignments":[3496],"declarations":[{"constant":false,"id":3496,"mutability":"mutable","name":"result","nameLocation":"26509:6:8","nodeType":"VariableDeclaration","scope":3516,"src":"26501:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3495,"name":"uint256","nodeType":"ElementaryTypeName","src":"26501:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3500,"initialValue":{"arguments":[{"id":3498,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3487,"src":"26524:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3497,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[3484,3518],"referencedDeclaration":3484,"src":"26518:5:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26518:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"26501:29:8"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3501,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3496,"src":"26551:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3505,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3490,"src":"26593:8:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2118","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2118","typeString":"enum Math.Rounding"}],"id":3504,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3711,"src":"26576:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2118_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26576:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26606:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":3508,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3496,"src":"26612:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3510,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3487,"src":"26621:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:20:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26576:50:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3502,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5477,"src":"26560:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5477_$","typeString":"type(library SafeCast)"}},"id":3503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26569:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5476,"src":"26560:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26560:67:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26551:76:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3494,"id":3515,"nodeType":"Return","src":"26544:83:8"}]}]},"documentation":{"id":3485,"nodeType":"StructuredDocumentation","src":"26238:143:8","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3518,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"26395:5:8","nodeType":"FunctionDefinition","parameters":{"id":3491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3487,"mutability":"mutable","name":"value","nameLocation":"26409:5:8","nodeType":"VariableDeclaration","scope":3518,"src":"26401:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3486,"name":"uint256","nodeType":"ElementaryTypeName","src":"26401:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3490,"mutability":"mutable","name":"rounding","nameLocation":"26425:8:8","nodeType":"VariableDeclaration","scope":3518,"src":"26416:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2118","typeString":"enum Math.Rounding"},"typeName":{"id":3489,"nodeType":"UserDefinedTypeName","pathNode":{"id":3488,"name":"Rounding","nameLocations":["26416:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":2118,"src":"26416:8:8"},"referencedDeclaration":2118,"src":"26416:8:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2118","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"26400:34:8"},"returnParameters":{"id":3494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3493,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3518,"src":"26458:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3492,"name":"uint256","nodeType":"ElementaryTypeName","src":"26458:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26457:9:8"},"scope":3712,"src":"26386:258:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3654,"nodeType":"Block","src":"26964:674:8","statements":[{"assignments":[3527],"declarations":[{"constant":false,"id":3527,"mutability":"mutable","name":"result","nameLocation":"26982:6:8","nodeType":"VariableDeclaration","scope":3654,"src":"26974:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3526,"name":"uint256","nodeType":"ElementaryTypeName","src":"26974:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3529,"initialValue":{"hexValue":"30","id":3528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26991:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"26974:18:8"},{"assignments":[3531],"declarations":[{"constant":false,"id":3531,"mutability":"mutable","name":"isGt","nameLocation":"27010:4:8","nodeType":"VariableDeclaration","scope":3654,"src":"27002:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3530,"name":"uint256","nodeType":"ElementaryTypeName","src":"27002:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3532,"nodeType":"VariableDeclarationStatement","src":"27002:12:8"},{"id":3651,"nodeType":"UncheckedBlock","src":"27024:585:8","statements":[{"expression":{"id":3545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3533,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3531,"src":"27048:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3536,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3521,"src":"27071:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":3542,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":3539,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27080:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":3538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27085:3:8","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27080:8:8","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":3540,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27079:10:8","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27092:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27079:14:8","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"27071:22:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3534,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5477,"src":"27055:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5477_$","typeString":"type(library SafeCast)"}},"id":3535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27064:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5476,"src":"27055:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27055:39:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27048:46:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3546,"nodeType":"ExpressionStatement","src":"27048:46:8"},{"expression":{"id":3551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3547,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3521,"src":"27108:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3548,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3531,"src":"27118:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"313238","id":3549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27125:3:8","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27118:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27108:20:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3552,"nodeType":"ExpressionStatement","src":"27108:20:8"},{"expression":{"id":3557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3553,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3527,"src":"27142:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3554,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3531,"src":"27152:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":3555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27159:2:8","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27152:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27142:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3558,"nodeType":"ExpressionStatement","src":"27142:19:8"},{"expression":{"id":3571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3559,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3531,"src":"27176:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3562,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3521,"src":"27199:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":3568,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":3565,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27208:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":3564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27213:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27208:7:8","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":3566,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27207:9:8","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27219:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27207:13:8","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"27199:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3560,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5477,"src":"27183:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5477_$","typeString":"type(library SafeCast)"}},"id":3561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27192:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5476,"src":"27183:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27183:38:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27176:45:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3572,"nodeType":"ExpressionStatement","src":"27176:45:8"},{"expression":{"id":3577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3573,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3521,"src":"27235:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3574,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3531,"src":"27245:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3634","id":3575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27252:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27245:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27235:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3578,"nodeType":"ExpressionStatement","src":"27235:19:8"},{"expression":{"id":3583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3579,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3527,"src":"27268:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3580,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3531,"src":"27278:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":3581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27285:1:8","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27278:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27268:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3584,"nodeType":"ExpressionStatement","src":"27268:18:8"},{"expression":{"id":3597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3585,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3531,"src":"27301:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3588,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3521,"src":"27324:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":3594,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":3591,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27333:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":3590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27338:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27333:7:8","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":3592,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27332:9:8","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27344:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27332:13:8","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"27324:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3586,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5477,"src":"27308:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5477_$","typeString":"type(library SafeCast)"}},"id":3587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27317:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5476,"src":"27308:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27308:38:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27301:45:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3598,"nodeType":"ExpressionStatement","src":"27301:45:8"},{"expression":{"id":3603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3599,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3521,"src":"27360:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3600,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3531,"src":"27370:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3332","id":3601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27377:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27370:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27360:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3604,"nodeType":"ExpressionStatement","src":"27360:19:8"},{"expression":{"id":3609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3605,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3527,"src":"27393:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3606,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3531,"src":"27403:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"34","id":3607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27410:1:8","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"27403:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27393:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3610,"nodeType":"ExpressionStatement","src":"27393:18:8"},{"expression":{"id":3623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3611,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3531,"src":"27426:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3614,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3521,"src":"27449:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":3620,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":3617,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27458:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":3616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27463:2:8","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27458:7:8","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":3618,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27457:9:8","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27469:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27457:13:8","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"27449:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3612,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5477,"src":"27433:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5477_$","typeString":"type(library SafeCast)"}},"id":3613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27442:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5476,"src":"27433:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27433:38:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27426:45:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3624,"nodeType":"ExpressionStatement","src":"27426:45:8"},{"expression":{"id":3629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3625,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3521,"src":"27485:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3626,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3531,"src":"27495:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":3627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27502:2:8","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27495:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27485:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3630,"nodeType":"ExpressionStatement","src":"27485:19:8"},{"expression":{"id":3635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3631,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3527,"src":"27518:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3632,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3531,"src":"27528:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":3633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27535:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"27528:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27518:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3636,"nodeType":"ExpressionStatement","src":"27518:18:8"},{"expression":{"id":3649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3637,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3527,"src":"27551:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3640,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3521,"src":"27577:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":3646,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":3643,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27586:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":3642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27591:1:8","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27586:6:8","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":3644,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27585:8:8","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27596:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27585:12:8","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"27577:20:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3638,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5477,"src":"27561:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5477_$","typeString":"type(library SafeCast)"}},"id":3639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27570:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5476,"src":"27561:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27561:37:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27551:47:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3650,"nodeType":"ExpressionStatement","src":"27551:47:8"}]},{"expression":{"id":3652,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3527,"src":"27625:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3525,"id":3653,"nodeType":"Return","src":"27618:13:8"}]},"documentation":{"id":3519,"nodeType":"StructuredDocumentation","src":"26650:246:8","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":3655,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"26910:6:8","nodeType":"FunctionDefinition","parameters":{"id":3522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3521,"mutability":"mutable","name":"value","nameLocation":"26925:5:8","nodeType":"VariableDeclaration","scope":3655,"src":"26917:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3520,"name":"uint256","nodeType":"ElementaryTypeName","src":"26917:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26916:15:8"},"returnParameters":{"id":3525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3524,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3655,"src":"26955:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3523,"name":"uint256","nodeType":"ElementaryTypeName","src":"26955:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26954:9:8"},"scope":3712,"src":"26901:737:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3691,"nodeType":"Block","src":"27875:184:8","statements":[{"id":3690,"nodeType":"UncheckedBlock","src":"27885:168:8","statements":[{"assignments":[3667],"declarations":[{"constant":false,"id":3667,"mutability":"mutable","name":"result","nameLocation":"27917:6:8","nodeType":"VariableDeclaration","scope":3690,"src":"27909:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3666,"name":"uint256","nodeType":"ElementaryTypeName","src":"27909:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3671,"initialValue":{"arguments":[{"id":3669,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3658,"src":"27933:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3668,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[3655,3692],"referencedDeclaration":3655,"src":"27926:6:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27926:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"27909:30:8"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3672,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3667,"src":"27960:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3676,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3661,"src":"28002:8:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2118","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2118","typeString":"enum Math.Rounding"}],"id":3675,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3711,"src":"27985:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2118_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27985:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28015:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3679,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3667,"src":"28021:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":3680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28031:1:8","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"28021:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3682,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"28020:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3684,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3658,"src":"28036:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:26:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"27985:56:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3673,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5477,"src":"27969:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5477_$","typeString":"type(library SafeCast)"}},"id":3674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27978:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5476,"src":"27969:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27969:73:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27960:82:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3665,"id":3689,"nodeType":"Return","src":"27953:89:8"}]}]},"documentation":{"id":3656,"nodeType":"StructuredDocumentation","src":"27644:144:8","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3692,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"27802:6:8","nodeType":"FunctionDefinition","parameters":{"id":3662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3658,"mutability":"mutable","name":"value","nameLocation":"27817:5:8","nodeType":"VariableDeclaration","scope":3692,"src":"27809:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3657,"name":"uint256","nodeType":"ElementaryTypeName","src":"27809:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3661,"mutability":"mutable","name":"rounding","nameLocation":"27833:8:8","nodeType":"VariableDeclaration","scope":3692,"src":"27824:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2118","typeString":"enum Math.Rounding"},"typeName":{"id":3660,"nodeType":"UserDefinedTypeName","pathNode":{"id":3659,"name":"Rounding","nameLocations":["27824:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":2118,"src":"27824:8:8"},"referencedDeclaration":2118,"src":"27824:8:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2118","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"27808:34:8"},"returnParameters":{"id":3665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3664,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3692,"src":"27866:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3663,"name":"uint256","nodeType":"ElementaryTypeName","src":"27866:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"27865:9:8"},"scope":3712,"src":"27793:266:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3710,"nodeType":"Block","src":"28257:48:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3703,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3696,"src":"28280:8:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2118","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2118","typeString":"enum Math.Rounding"}],"id":3702,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28274:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3701,"name":"uint8","nodeType":"ElementaryTypeName","src":"28274:5:8","typeDescriptions":{}}},"id":3704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28274:15:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":3705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28292:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"28274:19:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":3707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28297:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"28274:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3700,"id":3709,"nodeType":"Return","src":"28267:31:8"}]},"documentation":{"id":3693,"nodeType":"StructuredDocumentation","src":"28065:113:8","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":3711,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"28192:16:8","nodeType":"FunctionDefinition","parameters":{"id":3697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3696,"mutability":"mutable","name":"rounding","nameLocation":"28218:8:8","nodeType":"VariableDeclaration","scope":3711,"src":"28209:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2118","typeString":"enum Math.Rounding"},"typeName":{"id":3695,"nodeType":"UserDefinedTypeName","pathNode":{"id":3694,"name":"Rounding","nameLocations":["28209:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":2118,"src":"28209:8:8"},"referencedDeclaration":2118,"src":"28209:8:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2118","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28208:19:8"},"returnParameters":{"id":3700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3699,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3711,"src":"28251:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3698,"name":"bool","nodeType":"ElementaryTypeName","src":"28251:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"28250:6:8"},"scope":3712,"src":"28183:122:8","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3713,"src":"281:28026:8","usedErrors":[],"usedEvents":[]}],"src":"103:28205:8"},"id":8},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[5477]},"id":5478,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3714,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:9"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":3715,"nodeType":"StructuredDocumentation","src":"218:550:9","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":5477,"linearizedBaseContracts":[5477],"name":"SafeCast","nameLocation":"777:8:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3716,"nodeType":"StructuredDocumentation","src":"792:68:9","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":3722,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:9","nodeType":"ErrorDefinition","parameters":{"id":3721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3718,"mutability":"mutable","name":"bits","nameLocation":"908:4:9","nodeType":"VariableDeclaration","scope":3722,"src":"902:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3717,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3720,"mutability":"mutable","name":"value","nameLocation":"922:5:9","nodeType":"VariableDeclaration","scope":3722,"src":"914:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3719,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:9"},"src":"865:64:9"},{"documentation":{"id":3723,"nodeType":"StructuredDocumentation","src":"935:75:9","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":3727,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:9","nodeType":"ErrorDefinition","parameters":{"id":3726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3725,"mutability":"mutable","name":"value","nameLocation":"1056:5:9","nodeType":"VariableDeclaration","scope":3727,"src":"1049:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3724,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:9"},"src":"1015:48:9"},{"documentation":{"id":3728,"nodeType":"StructuredDocumentation","src":"1069:67:9","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":3734,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:9","nodeType":"ErrorDefinition","parameters":{"id":3733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3730,"mutability":"mutable","name":"bits","nameLocation":"1183:4:9","nodeType":"VariableDeclaration","scope":3734,"src":"1177:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3729,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3732,"mutability":"mutable","name":"value","nameLocation":"1196:5:9","nodeType":"VariableDeclaration","scope":3734,"src":"1189:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3731,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:9"},"src":"1141:62:9"},{"documentation":{"id":3735,"nodeType":"StructuredDocumentation","src":"1209:75:9","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":3739,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:9","nodeType":"ErrorDefinition","parameters":{"id":3738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3737,"mutability":"mutable","name":"value","nameLocation":"1331:5:9","nodeType":"VariableDeclaration","scope":3739,"src":"1323:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3736,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:9"},"src":"1289:49:9"},{"body":{"id":3766,"nodeType":"Block","src":"1695:152:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3747,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3742,"src":"1709:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":3749,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":3748,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":3752,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:9","memberName":"max","nodeType":"MemberAccess","src":"1717:17:9","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3760,"nodeType":"IfStatement","src":"1705:105:9","trueBody":{"id":3759,"nodeType":"Block","src":"1736:74:9","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":3755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:9","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":3756,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3742,"src":"1793:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3754,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"1757:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3758,"nodeType":"RevertStatement","src":"1750:49:9"}]}},{"expression":{"arguments":[{"id":3763,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3742,"src":"1834:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3762,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":3761,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:9","typeDescriptions":{}}},"id":3764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":3746,"id":3765,"nodeType":"Return","src":"1819:21:9"}]},"documentation":{"id":3740,"nodeType":"StructuredDocumentation","src":"1344:280:9","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":3767,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:9","nodeType":"FunctionDefinition","parameters":{"id":3743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3742,"mutability":"mutable","name":"value","nameLocation":"1656:5:9","nodeType":"VariableDeclaration","scope":3767,"src":"1648:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3741,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:9"},"returnParameters":{"id":3746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3745,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3767,"src":"1686:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":3744,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:9","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:9"},"scope":5477,"src":"1629:218:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3794,"nodeType":"Block","src":"2204:152:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3775,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3770,"src":"2218:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3778,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":3777,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":3776,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":3780,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:9","memberName":"max","nodeType":"MemberAccess","src":"2226:17:9","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3788,"nodeType":"IfStatement","src":"2214:105:9","trueBody":{"id":3787,"nodeType":"Block","src":"2245:74:9","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":3783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:9","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":3784,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3770,"src":"2302:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3782,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"2266:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3786,"nodeType":"RevertStatement","src":"2259:49:9"}]}},{"expression":{"arguments":[{"id":3791,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3770,"src":"2343:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3790,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":3789,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:9","typeDescriptions":{}}},"id":3792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":3774,"id":3793,"nodeType":"Return","src":"2328:21:9"}]},"documentation":{"id":3768,"nodeType":"StructuredDocumentation","src":"1853:280:9","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":3795,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:9","nodeType":"FunctionDefinition","parameters":{"id":3771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3770,"mutability":"mutable","name":"value","nameLocation":"2165:5:9","nodeType":"VariableDeclaration","scope":3795,"src":"2157:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3769,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:9"},"returnParameters":{"id":3774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3773,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3795,"src":"2195:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":3772,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:9","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:9"},"scope":5477,"src":"2138:218:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3822,"nodeType":"Block","src":"2713:152:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3803,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3798,"src":"2727:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3806,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":3805,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":3804,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":3808,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:9","memberName":"max","nodeType":"MemberAccess","src":"2735:17:9","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3816,"nodeType":"IfStatement","src":"2723:105:9","trueBody":{"id":3815,"nodeType":"Block","src":"2754:74:9","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":3811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:9","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":3812,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3798,"src":"2811:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3810,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"2775:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3814,"nodeType":"RevertStatement","src":"2768:49:9"}]}},{"expression":{"arguments":[{"id":3819,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3798,"src":"2852:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3818,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":3817,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:9","typeDescriptions":{}}},"id":3820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":3802,"id":3821,"nodeType":"Return","src":"2837:21:9"}]},"documentation":{"id":3796,"nodeType":"StructuredDocumentation","src":"2362:280:9","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":3823,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:9","nodeType":"FunctionDefinition","parameters":{"id":3799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3798,"mutability":"mutable","name":"value","nameLocation":"2674:5:9","nodeType":"VariableDeclaration","scope":3823,"src":"2666:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3797,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:9"},"returnParameters":{"id":3802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3801,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3823,"src":"2704:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":3800,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:9","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:9"},"scope":5477,"src":"2647:218:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3850,"nodeType":"Block","src":"3222:152:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3831,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3826,"src":"3236:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3834,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":3833,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":3832,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":3836,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:9","memberName":"max","nodeType":"MemberAccess","src":"3244:17:9","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3844,"nodeType":"IfStatement","src":"3232:105:9","trueBody":{"id":3843,"nodeType":"Block","src":"3263:74:9","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":3839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:9","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":3840,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3826,"src":"3320:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3838,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"3284:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3842,"nodeType":"RevertStatement","src":"3277:49:9"}]}},{"expression":{"arguments":[{"id":3847,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3826,"src":"3361:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3846,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":3845,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:9","typeDescriptions":{}}},"id":3848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":3830,"id":3849,"nodeType":"Return","src":"3346:21:9"}]},"documentation":{"id":3824,"nodeType":"StructuredDocumentation","src":"2871:280:9","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":3851,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:9","nodeType":"FunctionDefinition","parameters":{"id":3827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3826,"mutability":"mutable","name":"value","nameLocation":"3183:5:9","nodeType":"VariableDeclaration","scope":3851,"src":"3175:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3825,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:9"},"returnParameters":{"id":3830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3829,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3851,"src":"3213:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":3828,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:9","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:9"},"scope":5477,"src":"3156:218:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3878,"nodeType":"Block","src":"3731:152:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3859,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3854,"src":"3745:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":3861,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":3860,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":3864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:9","memberName":"max","nodeType":"MemberAccess","src":"3753:17:9","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3872,"nodeType":"IfStatement","src":"3741:105:9","trueBody":{"id":3871,"nodeType":"Block","src":"3772:74:9","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":3867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:9","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":3868,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3854,"src":"3829:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3866,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"3793:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3870,"nodeType":"RevertStatement","src":"3786:49:9"}]}},{"expression":{"arguments":[{"id":3875,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3854,"src":"3870:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3874,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":3873,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:9","typeDescriptions":{}}},"id":3876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":3858,"id":3877,"nodeType":"Return","src":"3855:21:9"}]},"documentation":{"id":3852,"nodeType":"StructuredDocumentation","src":"3380:280:9","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":3879,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:9","nodeType":"FunctionDefinition","parameters":{"id":3855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3854,"mutability":"mutable","name":"value","nameLocation":"3692:5:9","nodeType":"VariableDeclaration","scope":3879,"src":"3684:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3853,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:9"},"returnParameters":{"id":3858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3857,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3879,"src":"3722:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":3856,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:9","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:9"},"scope":5477,"src":"3665:218:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3906,"nodeType":"Block","src":"4240:152:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3887,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3882,"src":"4254:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3890,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":3889,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":3888,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":3892,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:9","memberName":"max","nodeType":"MemberAccess","src":"4262:17:9","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3900,"nodeType":"IfStatement","src":"4250:105:9","trueBody":{"id":3899,"nodeType":"Block","src":"4281:74:9","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":3895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:9","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":3896,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3882,"src":"4338:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3894,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"4302:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3898,"nodeType":"RevertStatement","src":"4295:49:9"}]}},{"expression":{"arguments":[{"id":3903,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3882,"src":"4379:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3902,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":3901,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:9","typeDescriptions":{}}},"id":3904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":3886,"id":3905,"nodeType":"Return","src":"4364:21:9"}]},"documentation":{"id":3880,"nodeType":"StructuredDocumentation","src":"3889:280:9","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":3907,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:9","nodeType":"FunctionDefinition","parameters":{"id":3883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3882,"mutability":"mutable","name":"value","nameLocation":"4201:5:9","nodeType":"VariableDeclaration","scope":3907,"src":"4193:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3881,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:9"},"returnParameters":{"id":3886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3885,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3907,"src":"4231:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":3884,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:9","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:9"},"scope":5477,"src":"4174:218:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3934,"nodeType":"Block","src":"4749:152:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3915,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3910,"src":"4763:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3918,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":3917,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":3916,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":3920,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:9","memberName":"max","nodeType":"MemberAccess","src":"4771:17:9","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3928,"nodeType":"IfStatement","src":"4759:105:9","trueBody":{"id":3927,"nodeType":"Block","src":"4790:74:9","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":3923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:9","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":3924,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3910,"src":"4847:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3922,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"4811:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3926,"nodeType":"RevertStatement","src":"4804:49:9"}]}},{"expression":{"arguments":[{"id":3931,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3910,"src":"4888:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3930,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":3929,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:9","typeDescriptions":{}}},"id":3932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":3914,"id":3933,"nodeType":"Return","src":"4873:21:9"}]},"documentation":{"id":3908,"nodeType":"StructuredDocumentation","src":"4398:280:9","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":3935,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:9","nodeType":"FunctionDefinition","parameters":{"id":3911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3910,"mutability":"mutable","name":"value","nameLocation":"4710:5:9","nodeType":"VariableDeclaration","scope":3935,"src":"4702:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3909,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:9"},"returnParameters":{"id":3914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3913,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3935,"src":"4740:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":3912,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:9","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:9"},"scope":5477,"src":"4683:218:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3962,"nodeType":"Block","src":"5258:152:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3943,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3938,"src":"5272:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3946,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":3945,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":3944,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":3948,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:9","memberName":"max","nodeType":"MemberAccess","src":"5280:17:9","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3956,"nodeType":"IfStatement","src":"5268:105:9","trueBody":{"id":3955,"nodeType":"Block","src":"5299:74:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":3951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:9","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":3952,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3938,"src":"5356:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3950,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"5320:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3954,"nodeType":"RevertStatement","src":"5313:49:9"}]}},{"expression":{"arguments":[{"id":3959,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3938,"src":"5397:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3958,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":3957,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:9","typeDescriptions":{}}},"id":3960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":3942,"id":3961,"nodeType":"Return","src":"5382:21:9"}]},"documentation":{"id":3936,"nodeType":"StructuredDocumentation","src":"4907:280:9","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":3963,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:9","nodeType":"FunctionDefinition","parameters":{"id":3939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3938,"mutability":"mutable","name":"value","nameLocation":"5219:5:9","nodeType":"VariableDeclaration","scope":3963,"src":"5211:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3937,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:9"},"returnParameters":{"id":3942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3941,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3963,"src":"5249:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":3940,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:9","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:9"},"scope":5477,"src":"5192:218:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3990,"nodeType":"Block","src":"5767:152:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3971,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3966,"src":"5781:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3974,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":3973,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":3972,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":3976,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:9","memberName":"max","nodeType":"MemberAccess","src":"5789:17:9","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3984,"nodeType":"IfStatement","src":"5777:105:9","trueBody":{"id":3983,"nodeType":"Block","src":"5808:74:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":3979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:9","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":3980,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3966,"src":"5865:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3978,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"5829:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3982,"nodeType":"RevertStatement","src":"5822:49:9"}]}},{"expression":{"arguments":[{"id":3987,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3966,"src":"5906:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3986,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":3985,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:9","typeDescriptions":{}}},"id":3988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":3970,"id":3989,"nodeType":"Return","src":"5891:21:9"}]},"documentation":{"id":3964,"nodeType":"StructuredDocumentation","src":"5416:280:9","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":3991,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:9","nodeType":"FunctionDefinition","parameters":{"id":3967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3966,"mutability":"mutable","name":"value","nameLocation":"5728:5:9","nodeType":"VariableDeclaration","scope":3991,"src":"5720:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3965,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:9"},"returnParameters":{"id":3970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3969,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3991,"src":"5758:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":3968,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:9","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:9"},"scope":5477,"src":"5701:218:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4018,"nodeType":"Block","src":"6276:152:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3999,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3994,"src":"6290:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4002,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":4001,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":4000,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":4004,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:9","memberName":"max","nodeType":"MemberAccess","src":"6298:17:9","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4012,"nodeType":"IfStatement","src":"6286:105:9","trueBody":{"id":4011,"nodeType":"Block","src":"6317:74:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":4007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:9","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":4008,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3994,"src":"6374:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4006,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"6338:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4010,"nodeType":"RevertStatement","src":"6331:49:9"}]}},{"expression":{"arguments":[{"id":4015,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3994,"src":"6415:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4014,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":4013,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:9","typeDescriptions":{}}},"id":4016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":3998,"id":4017,"nodeType":"Return","src":"6400:21:9"}]},"documentation":{"id":3992,"nodeType":"StructuredDocumentation","src":"5925:280:9","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":4019,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:9","nodeType":"FunctionDefinition","parameters":{"id":3995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3994,"mutability":"mutable","name":"value","nameLocation":"6237:5:9","nodeType":"VariableDeclaration","scope":4019,"src":"6229:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3993,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:9"},"returnParameters":{"id":3998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3997,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4019,"src":"6267:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":3996,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:9","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:9"},"scope":5477,"src":"6210:218:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4046,"nodeType":"Block","src":"6785:152:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4027,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"6799:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4030,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":4029,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":4028,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":4032,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:9","memberName":"max","nodeType":"MemberAccess","src":"6807:17:9","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4040,"nodeType":"IfStatement","src":"6795:105:9","trueBody":{"id":4039,"nodeType":"Block","src":"6826:74:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":4035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:9","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":4036,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"6883:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4034,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"6847:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4038,"nodeType":"RevertStatement","src":"6840:49:9"}]}},{"expression":{"arguments":[{"id":4043,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"6924:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4042,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":4041,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:9","typeDescriptions":{}}},"id":4044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":4026,"id":4045,"nodeType":"Return","src":"6909:21:9"}]},"documentation":{"id":4020,"nodeType":"StructuredDocumentation","src":"6434:280:9","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":4047,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:9","nodeType":"FunctionDefinition","parameters":{"id":4023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4022,"mutability":"mutable","name":"value","nameLocation":"6746:5:9","nodeType":"VariableDeclaration","scope":4047,"src":"6738:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4021,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:9"},"returnParameters":{"id":4026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4025,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4047,"src":"6776:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":4024,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:9","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:9"},"scope":5477,"src":"6719:218:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4074,"nodeType":"Block","src":"7294:152:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4055,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4050,"src":"7308:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4058,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4057,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":4056,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":4060,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:9","memberName":"max","nodeType":"MemberAccess","src":"7316:17:9","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4068,"nodeType":"IfStatement","src":"7304:105:9","trueBody":{"id":4067,"nodeType":"Block","src":"7335:74:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":4063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:9","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":4064,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4050,"src":"7392:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4062,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"7356:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4066,"nodeType":"RevertStatement","src":"7349:49:9"}]}},{"expression":{"arguments":[{"id":4071,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4050,"src":"7433:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4070,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4069,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:9","typeDescriptions":{}}},"id":4072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":4054,"id":4073,"nodeType":"Return","src":"7418:21:9"}]},"documentation":{"id":4048,"nodeType":"StructuredDocumentation","src":"6943:280:9","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":4075,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:9","nodeType":"FunctionDefinition","parameters":{"id":4051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4050,"mutability":"mutable","name":"value","nameLocation":"7255:5:9","nodeType":"VariableDeclaration","scope":4075,"src":"7247:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4049,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:9"},"returnParameters":{"id":4054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4053,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4075,"src":"7285:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":4052,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:9","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:9"},"scope":5477,"src":"7228:218:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4102,"nodeType":"Block","src":"7803:152:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4083,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4078,"src":"7817:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4086,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":4085,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":4084,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":4088,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:9","memberName":"max","nodeType":"MemberAccess","src":"7825:17:9","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4096,"nodeType":"IfStatement","src":"7813:105:9","trueBody":{"id":4095,"nodeType":"Block","src":"7844:74:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":4091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:9","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":4092,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4078,"src":"7901:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4090,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"7865:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4094,"nodeType":"RevertStatement","src":"7858:49:9"}]}},{"expression":{"arguments":[{"id":4099,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4078,"src":"7942:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4098,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":4097,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:9","typeDescriptions":{}}},"id":4100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":4082,"id":4101,"nodeType":"Return","src":"7927:21:9"}]},"documentation":{"id":4076,"nodeType":"StructuredDocumentation","src":"7452:280:9","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":4103,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:9","nodeType":"FunctionDefinition","parameters":{"id":4079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4078,"mutability":"mutable","name":"value","nameLocation":"7764:5:9","nodeType":"VariableDeclaration","scope":4103,"src":"7756:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4077,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:9"},"returnParameters":{"id":4082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4081,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4103,"src":"7794:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":4080,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:9","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:9"},"scope":5477,"src":"7737:218:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4130,"nodeType":"Block","src":"8312:152:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4111,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4106,"src":"8326:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":4113,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":4112,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":4116,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:9","memberName":"max","nodeType":"MemberAccess","src":"8334:17:9","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4124,"nodeType":"IfStatement","src":"8322:105:9","trueBody":{"id":4123,"nodeType":"Block","src":"8353:74:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":4119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:9","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":4120,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4106,"src":"8410:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4118,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"8374:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4122,"nodeType":"RevertStatement","src":"8367:49:9"}]}},{"expression":{"arguments":[{"id":4127,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4106,"src":"8451:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4126,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":4125,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:9","typeDescriptions":{}}},"id":4128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":4110,"id":4129,"nodeType":"Return","src":"8436:21:9"}]},"documentation":{"id":4104,"nodeType":"StructuredDocumentation","src":"7961:280:9","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":4131,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:9","nodeType":"FunctionDefinition","parameters":{"id":4107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4106,"mutability":"mutable","name":"value","nameLocation":"8273:5:9","nodeType":"VariableDeclaration","scope":4131,"src":"8265:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4105,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:9"},"returnParameters":{"id":4110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4109,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4131,"src":"8303:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":4108,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:9","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:9"},"scope":5477,"src":"8246:218:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4158,"nodeType":"Block","src":"8821:152:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4139,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4134,"src":"8835:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4142,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":4141,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":4140,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":4144,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:9","memberName":"max","nodeType":"MemberAccess","src":"8843:17:9","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4152,"nodeType":"IfStatement","src":"8831:105:9","trueBody":{"id":4151,"nodeType":"Block","src":"8862:74:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":4147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:9","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":4148,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4134,"src":"8919:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4146,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"8883:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4150,"nodeType":"RevertStatement","src":"8876:49:9"}]}},{"expression":{"arguments":[{"id":4155,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4134,"src":"8960:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4154,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":4153,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:9","typeDescriptions":{}}},"id":4156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":4138,"id":4157,"nodeType":"Return","src":"8945:21:9"}]},"documentation":{"id":4132,"nodeType":"StructuredDocumentation","src":"8470:280:9","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":4159,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:9","nodeType":"FunctionDefinition","parameters":{"id":4135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4134,"mutability":"mutable","name":"value","nameLocation":"8782:5:9","nodeType":"VariableDeclaration","scope":4159,"src":"8774:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4133,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:9"},"returnParameters":{"id":4138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4137,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4159,"src":"8812:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":4136,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:9","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:9"},"scope":5477,"src":"8755:218:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4186,"nodeType":"Block","src":"9330:152:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4167,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4162,"src":"9344:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4170,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":4169,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":4168,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":4172,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:9","memberName":"max","nodeType":"MemberAccess","src":"9352:17:9","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4180,"nodeType":"IfStatement","src":"9340:105:9","trueBody":{"id":4179,"nodeType":"Block","src":"9371:74:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":4175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:9","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":4176,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4162,"src":"9428:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4174,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"9392:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4178,"nodeType":"RevertStatement","src":"9385:49:9"}]}},{"expression":{"arguments":[{"id":4183,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4162,"src":"9469:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4182,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":4181,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:9","typeDescriptions":{}}},"id":4184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":4166,"id":4185,"nodeType":"Return","src":"9454:21:9"}]},"documentation":{"id":4160,"nodeType":"StructuredDocumentation","src":"8979:280:9","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":4187,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:9","nodeType":"FunctionDefinition","parameters":{"id":4163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4162,"mutability":"mutable","name":"value","nameLocation":"9291:5:9","nodeType":"VariableDeclaration","scope":4187,"src":"9283:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4161,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:9"},"returnParameters":{"id":4166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4165,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4187,"src":"9321:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":4164,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:9","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:9"},"scope":5477,"src":"9264:218:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4214,"nodeType":"Block","src":"9839:152:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4195,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4190,"src":"9853:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4198,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":4197,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":4196,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":4200,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:9","memberName":"max","nodeType":"MemberAccess","src":"9861:17:9","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4208,"nodeType":"IfStatement","src":"9849:105:9","trueBody":{"id":4207,"nodeType":"Block","src":"9880:74:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":4203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:9","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":4204,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4190,"src":"9937:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4202,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"9901:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4206,"nodeType":"RevertStatement","src":"9894:49:9"}]}},{"expression":{"arguments":[{"id":4211,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4190,"src":"9978:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4210,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":4209,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:9","typeDescriptions":{}}},"id":4212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":4194,"id":4213,"nodeType":"Return","src":"9963:21:9"}]},"documentation":{"id":4188,"nodeType":"StructuredDocumentation","src":"9488:280:9","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":4215,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:9","nodeType":"FunctionDefinition","parameters":{"id":4191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4190,"mutability":"mutable","name":"value","nameLocation":"9800:5:9","nodeType":"VariableDeclaration","scope":4215,"src":"9792:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4189,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:9"},"returnParameters":{"id":4194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4193,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4215,"src":"9830:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":4192,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:9","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:9"},"scope":5477,"src":"9773:218:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4242,"nodeType":"Block","src":"10348:152:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4223,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4218,"src":"10362:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4226,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":4225,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":4224,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":4228,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:9","memberName":"max","nodeType":"MemberAccess","src":"10370:17:9","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4236,"nodeType":"IfStatement","src":"10358:105:9","trueBody":{"id":4235,"nodeType":"Block","src":"10389:74:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":4231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:9","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":4232,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4218,"src":"10446:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4230,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"10410:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4234,"nodeType":"RevertStatement","src":"10403:49:9"}]}},{"expression":{"arguments":[{"id":4239,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4218,"src":"10487:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4238,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":4237,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:9","typeDescriptions":{}}},"id":4240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":4222,"id":4241,"nodeType":"Return","src":"10472:21:9"}]},"documentation":{"id":4216,"nodeType":"StructuredDocumentation","src":"9997:280:9","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":4243,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:9","nodeType":"FunctionDefinition","parameters":{"id":4219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4218,"mutability":"mutable","name":"value","nameLocation":"10309:5:9","nodeType":"VariableDeclaration","scope":4243,"src":"10301:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4217,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:9"},"returnParameters":{"id":4222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4221,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4243,"src":"10339:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":4220,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:9","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:9"},"scope":5477,"src":"10282:218:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4270,"nodeType":"Block","src":"10857:152:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4251,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4246,"src":"10871:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4254,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":4253,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":4252,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":4256,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:9","memberName":"max","nodeType":"MemberAccess","src":"10879:17:9","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4264,"nodeType":"IfStatement","src":"10867:105:9","trueBody":{"id":4263,"nodeType":"Block","src":"10898:74:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":4259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:9","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":4260,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4246,"src":"10955:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4258,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"10919:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4262,"nodeType":"RevertStatement","src":"10912:49:9"}]}},{"expression":{"arguments":[{"id":4267,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4246,"src":"10996:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4266,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":4265,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:9","typeDescriptions":{}}},"id":4268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":4250,"id":4269,"nodeType":"Return","src":"10981:21:9"}]},"documentation":{"id":4244,"nodeType":"StructuredDocumentation","src":"10506:280:9","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":4271,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:9","nodeType":"FunctionDefinition","parameters":{"id":4247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4246,"mutability":"mutable","name":"value","nameLocation":"10818:5:9","nodeType":"VariableDeclaration","scope":4271,"src":"10810:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4245,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:9"},"returnParameters":{"id":4250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4249,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4271,"src":"10848:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":4248,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:9","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:9"},"scope":5477,"src":"10791:218:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4298,"nodeType":"Block","src":"11360:149:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4279,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4274,"src":"11374:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4282,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":4281,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":4280,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":4284,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:9","memberName":"max","nodeType":"MemberAccess","src":"11382:16:9","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4292,"nodeType":"IfStatement","src":"11370:103:9","trueBody":{"id":4291,"nodeType":"Block","src":"11400:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":4287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:9","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":4288,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4274,"src":"11456:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4286,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"11421:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4290,"nodeType":"RevertStatement","src":"11414:48:9"}]}},{"expression":{"arguments":[{"id":4295,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4274,"src":"11496:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4294,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":4293,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:9","typeDescriptions":{}}},"id":4296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":4278,"id":4297,"nodeType":"Return","src":"11482:20:9"}]},"documentation":{"id":4272,"nodeType":"StructuredDocumentation","src":"11015:276:9","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":4299,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:9","nodeType":"FunctionDefinition","parameters":{"id":4275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4274,"mutability":"mutable","name":"value","nameLocation":"11322:5:9","nodeType":"VariableDeclaration","scope":4299,"src":"11314:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4273,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:9"},"returnParameters":{"id":4278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4277,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4299,"src":"11352:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":4276,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:9","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:9"},"scope":5477,"src":"11296:213:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4326,"nodeType":"Block","src":"11860:149:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4307,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4302,"src":"11874:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4310,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":4309,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":4308,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":4312,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:9","memberName":"max","nodeType":"MemberAccess","src":"11882:16:9","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4320,"nodeType":"IfStatement","src":"11870:103:9","trueBody":{"id":4319,"nodeType":"Block","src":"11900:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":4315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:9","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":4316,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4302,"src":"11956:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4314,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"11921:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4318,"nodeType":"RevertStatement","src":"11914:48:9"}]}},{"expression":{"arguments":[{"id":4323,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4302,"src":"11996:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4322,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":4321,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:9","typeDescriptions":{}}},"id":4324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":4306,"id":4325,"nodeType":"Return","src":"11982:20:9"}]},"documentation":{"id":4300,"nodeType":"StructuredDocumentation","src":"11515:276:9","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":4327,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:9","nodeType":"FunctionDefinition","parameters":{"id":4303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4302,"mutability":"mutable","name":"value","nameLocation":"11822:5:9","nodeType":"VariableDeclaration","scope":4327,"src":"11814:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4301,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:9"},"returnParameters":{"id":4306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4305,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4327,"src":"11852:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":4304,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:9","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:9"},"scope":5477,"src":"11796:213:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4354,"nodeType":"Block","src":"12360:149:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4335,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4330,"src":"12374:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4338,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":4337,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":4336,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":4340,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:9","memberName":"max","nodeType":"MemberAccess","src":"12382:16:9","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4348,"nodeType":"IfStatement","src":"12370:103:9","trueBody":{"id":4347,"nodeType":"Block","src":"12400:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":4343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:9","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":4344,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4330,"src":"12456:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4342,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"12421:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4346,"nodeType":"RevertStatement","src":"12414:48:9"}]}},{"expression":{"arguments":[{"id":4351,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4330,"src":"12496:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4350,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":4349,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:9","typeDescriptions":{}}},"id":4352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":4334,"id":4353,"nodeType":"Return","src":"12482:20:9"}]},"documentation":{"id":4328,"nodeType":"StructuredDocumentation","src":"12015:276:9","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":4355,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:9","nodeType":"FunctionDefinition","parameters":{"id":4331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4330,"mutability":"mutable","name":"value","nameLocation":"12322:5:9","nodeType":"VariableDeclaration","scope":4355,"src":"12314:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4329,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:9"},"returnParameters":{"id":4334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4333,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4355,"src":"12352:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":4332,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:9","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:9"},"scope":5477,"src":"12296:213:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4382,"nodeType":"Block","src":"12860:149:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4363,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4358,"src":"12874:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4366,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":4365,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":4364,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":4368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:9","memberName":"max","nodeType":"MemberAccess","src":"12882:16:9","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4376,"nodeType":"IfStatement","src":"12870:103:9","trueBody":{"id":4375,"nodeType":"Block","src":"12900:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":4371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:9","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":4372,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4358,"src":"12956:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4370,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"12921:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4374,"nodeType":"RevertStatement","src":"12914:48:9"}]}},{"expression":{"arguments":[{"id":4379,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4358,"src":"12996:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4378,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":4377,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:9","typeDescriptions":{}}},"id":4380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":4362,"id":4381,"nodeType":"Return","src":"12982:20:9"}]},"documentation":{"id":4356,"nodeType":"StructuredDocumentation","src":"12515:276:9","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":4383,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:9","nodeType":"FunctionDefinition","parameters":{"id":4359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4358,"mutability":"mutable","name":"value","nameLocation":"12822:5:9","nodeType":"VariableDeclaration","scope":4383,"src":"12814:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4357,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:9"},"returnParameters":{"id":4362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4361,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4383,"src":"12852:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":4360,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:9","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:9"},"scope":5477,"src":"12796:213:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4410,"nodeType":"Block","src":"13360:149:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4391,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4386,"src":"13374:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4394,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":4393,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":4392,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":4396,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:9","memberName":"max","nodeType":"MemberAccess","src":"13382:16:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4404,"nodeType":"IfStatement","src":"13370:103:9","trueBody":{"id":4403,"nodeType":"Block","src":"13400:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":4399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:9","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":4400,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4386,"src":"13456:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4398,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"13421:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4402,"nodeType":"RevertStatement","src":"13414:48:9"}]}},{"expression":{"arguments":[{"id":4407,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4386,"src":"13496:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4406,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":4405,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:9","typeDescriptions":{}}},"id":4408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":4390,"id":4409,"nodeType":"Return","src":"13482:20:9"}]},"documentation":{"id":4384,"nodeType":"StructuredDocumentation","src":"13015:276:9","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":4411,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:9","nodeType":"FunctionDefinition","parameters":{"id":4387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4386,"mutability":"mutable","name":"value","nameLocation":"13322:5:9","nodeType":"VariableDeclaration","scope":4411,"src":"13314:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4385,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:9"},"returnParameters":{"id":4390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4389,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4411,"src":"13352:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4388,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:9"},"scope":5477,"src":"13296:213:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4438,"nodeType":"Block","src":"13860:149:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4419,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4414,"src":"13874:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4422,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":4421,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":4420,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":4424,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:9","memberName":"max","nodeType":"MemberAccess","src":"13882:16:9","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4432,"nodeType":"IfStatement","src":"13870:103:9","trueBody":{"id":4431,"nodeType":"Block","src":"13900:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":4427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:9","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":4428,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4414,"src":"13956:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4426,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"13921:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4430,"nodeType":"RevertStatement","src":"13914:48:9"}]}},{"expression":{"arguments":[{"id":4435,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4414,"src":"13996:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4434,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":4433,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:9","typeDescriptions":{}}},"id":4436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":4418,"id":4437,"nodeType":"Return","src":"13982:20:9"}]},"documentation":{"id":4412,"nodeType":"StructuredDocumentation","src":"13515:276:9","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":4439,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:9","nodeType":"FunctionDefinition","parameters":{"id":4415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4414,"mutability":"mutable","name":"value","nameLocation":"13822:5:9","nodeType":"VariableDeclaration","scope":4439,"src":"13814:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4413,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:9"},"returnParameters":{"id":4418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4417,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4439,"src":"13852:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":4416,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:9","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:9"},"scope":5477,"src":"13796:213:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4466,"nodeType":"Block","src":"14360:149:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4447,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4442,"src":"14374:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4450,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":4449,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":4448,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":4452,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:9","memberName":"max","nodeType":"MemberAccess","src":"14382:16:9","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4460,"nodeType":"IfStatement","src":"14370:103:9","trueBody":{"id":4459,"nodeType":"Block","src":"14400:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":4455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:9","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":4456,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4442,"src":"14456:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4454,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"14421:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4458,"nodeType":"RevertStatement","src":"14414:48:9"}]}},{"expression":{"arguments":[{"id":4463,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4442,"src":"14496:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4462,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":4461,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:9","typeDescriptions":{}}},"id":4464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":4446,"id":4465,"nodeType":"Return","src":"14482:20:9"}]},"documentation":{"id":4440,"nodeType":"StructuredDocumentation","src":"14015:276:9","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":4467,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:9","nodeType":"FunctionDefinition","parameters":{"id":4443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4442,"mutability":"mutable","name":"value","nameLocation":"14322:5:9","nodeType":"VariableDeclaration","scope":4467,"src":"14314:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4441,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:9"},"returnParameters":{"id":4446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4445,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4467,"src":"14352:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":4444,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:9","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:9"},"scope":5477,"src":"14296:213:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4494,"nodeType":"Block","src":"14860:149:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4475,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4470,"src":"14874:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4478,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":4477,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":4476,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":4480,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:9","memberName":"max","nodeType":"MemberAccess","src":"14882:16:9","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4488,"nodeType":"IfStatement","src":"14870:103:9","trueBody":{"id":4487,"nodeType":"Block","src":"14900:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":4483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:9","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":4484,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4470,"src":"14956:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4482,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"14921:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4486,"nodeType":"RevertStatement","src":"14914:48:9"}]}},{"expression":{"arguments":[{"id":4491,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4470,"src":"14996:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4490,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":4489,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:9","typeDescriptions":{}}},"id":4492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":4474,"id":4493,"nodeType":"Return","src":"14982:20:9"}]},"documentation":{"id":4468,"nodeType":"StructuredDocumentation","src":"14515:276:9","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":4495,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:9","nodeType":"FunctionDefinition","parameters":{"id":4471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4470,"mutability":"mutable","name":"value","nameLocation":"14822:5:9","nodeType":"VariableDeclaration","scope":4495,"src":"14814:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4469,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:9"},"returnParameters":{"id":4474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4473,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4495,"src":"14852:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":4472,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:9","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:9"},"scope":5477,"src":"14796:213:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4522,"nodeType":"Block","src":"15360:149:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4503,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4498,"src":"15374:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4506,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":4505,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":4504,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":4508,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:9","memberName":"max","nodeType":"MemberAccess","src":"15382:16:9","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4516,"nodeType":"IfStatement","src":"15370:103:9","trueBody":{"id":4515,"nodeType":"Block","src":"15400:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":4511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":4512,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4498,"src":"15456:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4510,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"15421:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4514,"nodeType":"RevertStatement","src":"15414:48:9"}]}},{"expression":{"arguments":[{"id":4519,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4498,"src":"15496:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4518,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":4517,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:9","typeDescriptions":{}}},"id":4520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":4502,"id":4521,"nodeType":"Return","src":"15482:20:9"}]},"documentation":{"id":4496,"nodeType":"StructuredDocumentation","src":"15015:276:9","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":4523,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:9","nodeType":"FunctionDefinition","parameters":{"id":4499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4498,"mutability":"mutable","name":"value","nameLocation":"15322:5:9","nodeType":"VariableDeclaration","scope":4523,"src":"15314:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4497,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:9"},"returnParameters":{"id":4502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4501,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4523,"src":"15352:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4500,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:9","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:9"},"scope":5477,"src":"15296:213:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4550,"nodeType":"Block","src":"15860:149:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4531,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4526,"src":"15874:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4534,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":4533,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":4532,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":4536,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:9","memberName":"max","nodeType":"MemberAccess","src":"15882:16:9","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4544,"nodeType":"IfStatement","src":"15870:103:9","trueBody":{"id":4543,"nodeType":"Block","src":"15900:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":4539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:9","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":4540,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4526,"src":"15956:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4538,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"15921:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4542,"nodeType":"RevertStatement","src":"15914:48:9"}]}},{"expression":{"arguments":[{"id":4547,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4526,"src":"15996:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4546,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":4545,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:9","typeDescriptions":{}}},"id":4548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":4530,"id":4549,"nodeType":"Return","src":"15982:20:9"}]},"documentation":{"id":4524,"nodeType":"StructuredDocumentation","src":"15515:276:9","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":4551,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:9","nodeType":"FunctionDefinition","parameters":{"id":4527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4526,"mutability":"mutable","name":"value","nameLocation":"15822:5:9","nodeType":"VariableDeclaration","scope":4551,"src":"15814:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4525,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:9"},"returnParameters":{"id":4530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4529,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4551,"src":"15852:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":4528,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:9","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:9"},"scope":5477,"src":"15796:213:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4578,"nodeType":"Block","src":"16360:149:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4559,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4554,"src":"16374:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4562,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":4561,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":4560,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":4564,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:9","memberName":"max","nodeType":"MemberAccess","src":"16382:16:9","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4572,"nodeType":"IfStatement","src":"16370:103:9","trueBody":{"id":4571,"nodeType":"Block","src":"16400:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":4567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:9","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":4568,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4554,"src":"16456:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4566,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"16421:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4570,"nodeType":"RevertStatement","src":"16414:48:9"}]}},{"expression":{"arguments":[{"id":4575,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4554,"src":"16496:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4574,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":4573,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:9","typeDescriptions":{}}},"id":4576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":4558,"id":4577,"nodeType":"Return","src":"16482:20:9"}]},"documentation":{"id":4552,"nodeType":"StructuredDocumentation","src":"16015:276:9","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":4579,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:9","nodeType":"FunctionDefinition","parameters":{"id":4555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4554,"mutability":"mutable","name":"value","nameLocation":"16322:5:9","nodeType":"VariableDeclaration","scope":4579,"src":"16314:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4553,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:9"},"returnParameters":{"id":4558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4557,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4579,"src":"16352:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4556,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:9","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:9"},"scope":5477,"src":"16296:213:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4606,"nodeType":"Block","src":"16854:146:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4587,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4582,"src":"16868:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4590,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4589,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":4588,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":4592,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:9","memberName":"max","nodeType":"MemberAccess","src":"16876:15:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4600,"nodeType":"IfStatement","src":"16864:101:9","trueBody":{"id":4599,"nodeType":"Block","src":"16893:72:9","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":4595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:9","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":4596,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4582,"src":"16948:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4594,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"16914:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4598,"nodeType":"RevertStatement","src":"16907:47:9"}]}},{"expression":{"arguments":[{"id":4603,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4582,"src":"16987:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4601,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:9","typeDescriptions":{}}},"id":4604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":4586,"id":4605,"nodeType":"Return","src":"16974:19:9"}]},"documentation":{"id":4580,"nodeType":"StructuredDocumentation","src":"16515:272:9","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":4607,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:9","nodeType":"FunctionDefinition","parameters":{"id":4583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4582,"mutability":"mutable","name":"value","nameLocation":"16817:5:9","nodeType":"VariableDeclaration","scope":4607,"src":"16809:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4581,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:9"},"returnParameters":{"id":4586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4585,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4607,"src":"16847:5:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4584,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:9"},"scope":5477,"src":"16792:208:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4629,"nodeType":"Block","src":"17236:128:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4615,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4610,"src":"17250:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":4616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4623,"nodeType":"IfStatement","src":"17246:81:9","trueBody":{"id":4622,"nodeType":"Block","src":"17261:66:9","statements":[{"errorCall":{"arguments":[{"id":4619,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4610,"src":"17310:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4618,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3727,"src":"17282:27:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":4620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4621,"nodeType":"RevertStatement","src":"17275:41:9"}]}},{"expression":{"arguments":[{"id":4626,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4610,"src":"17351:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4625,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4624,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:9","typeDescriptions":{}}},"id":4627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4614,"id":4628,"nodeType":"Return","src":"17336:21:9"}]},"documentation":{"id":4608,"nodeType":"StructuredDocumentation","src":"17006:160:9","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":4630,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:9","nodeType":"FunctionDefinition","parameters":{"id":4611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4610,"mutability":"mutable","name":"value","nameLocation":"17197:5:9","nodeType":"VariableDeclaration","scope":4630,"src":"17190:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4609,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:9"},"returnParameters":{"id":4614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4613,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4630,"src":"17227:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4612,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:9"},"scope":5477,"src":"17171:193:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4655,"nodeType":"Block","src":"17761:150:9","statements":[{"expression":{"id":4643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4638,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4636,"src":"17771:10:9","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4641,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4633,"src":"17791:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4640,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":4639,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:9","typeDescriptions":{}}},"id":4642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:9","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":4644,"nodeType":"ExpressionStatement","src":"17771:26:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4645,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4636,"src":"17811:10:9","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4646,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4633,"src":"17825:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4654,"nodeType":"IfStatement","src":"17807:98:9","trueBody":{"id":4653,"nodeType":"Block","src":"17832:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":4649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:9","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":4650,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4633,"src":"17888:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4648,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3734,"src":"17853:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4652,"nodeType":"RevertStatement","src":"17846:48:9"}]}}]},"documentation":{"id":4631,"nodeType":"StructuredDocumentation","src":"17370:312:9","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":4656,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:9","nodeType":"FunctionDefinition","parameters":{"id":4634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4633,"mutability":"mutable","name":"value","nameLocation":"17712:5:9","nodeType":"VariableDeclaration","scope":4656,"src":"17705:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4632,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:9"},"returnParameters":{"id":4637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4636,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:9","nodeType":"VariableDeclaration","scope":4656,"src":"17742:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":4635,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:9","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:9"},"scope":5477,"src":"17687:224:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4681,"nodeType":"Block","src":"18308:150:9","statements":[{"expression":{"id":4669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4664,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4662,"src":"18318:10:9","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4667,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4659,"src":"18338:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4666,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":4665,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:9","typeDescriptions":{}}},"id":4668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:9","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":4670,"nodeType":"ExpressionStatement","src":"18318:26:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4671,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4662,"src":"18358:10:9","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4672,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4659,"src":"18372:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4680,"nodeType":"IfStatement","src":"18354:98:9","trueBody":{"id":4679,"nodeType":"Block","src":"18379:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":4675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:9","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":4676,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4659,"src":"18435:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4674,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3734,"src":"18400:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4678,"nodeType":"RevertStatement","src":"18393:48:9"}]}}]},"documentation":{"id":4657,"nodeType":"StructuredDocumentation","src":"17917:312:9","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":4682,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:9","nodeType":"FunctionDefinition","parameters":{"id":4660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4659,"mutability":"mutable","name":"value","nameLocation":"18259:5:9","nodeType":"VariableDeclaration","scope":4682,"src":"18252:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4658,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:9"},"returnParameters":{"id":4663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4662,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:9","nodeType":"VariableDeclaration","scope":4682,"src":"18289:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":4661,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:9","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:9"},"scope":5477,"src":"18234:224:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4707,"nodeType":"Block","src":"18855:150:9","statements":[{"expression":{"id":4695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4690,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4688,"src":"18865:10:9","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4693,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4685,"src":"18885:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4692,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":4691,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:9","typeDescriptions":{}}},"id":4694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:9","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":4696,"nodeType":"ExpressionStatement","src":"18865:26:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4697,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4688,"src":"18905:10:9","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4698,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4685,"src":"18919:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4706,"nodeType":"IfStatement","src":"18901:98:9","trueBody":{"id":4705,"nodeType":"Block","src":"18926:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":4701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:9","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":4702,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4685,"src":"18982:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4700,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3734,"src":"18947:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4704,"nodeType":"RevertStatement","src":"18940:48:9"}]}}]},"documentation":{"id":4683,"nodeType":"StructuredDocumentation","src":"18464:312:9","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":4708,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:9","nodeType":"FunctionDefinition","parameters":{"id":4686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4685,"mutability":"mutable","name":"value","nameLocation":"18806:5:9","nodeType":"VariableDeclaration","scope":4708,"src":"18799:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4684,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:9"},"returnParameters":{"id":4689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4688,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:9","nodeType":"VariableDeclaration","scope":4708,"src":"18836:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":4687,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:9","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:9"},"scope":5477,"src":"18781:224:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4733,"nodeType":"Block","src":"19402:150:9","statements":[{"expression":{"id":4721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4716,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4714,"src":"19412:10:9","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4719,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4711,"src":"19432:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4718,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":4717,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:9","typeDescriptions":{}}},"id":4720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:9","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":4722,"nodeType":"ExpressionStatement","src":"19412:26:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4723,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4714,"src":"19452:10:9","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4724,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4711,"src":"19466:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4732,"nodeType":"IfStatement","src":"19448:98:9","trueBody":{"id":4731,"nodeType":"Block","src":"19473:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":4727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:9","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":4728,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4711,"src":"19529:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4726,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3734,"src":"19494:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4730,"nodeType":"RevertStatement","src":"19487:48:9"}]}}]},"documentation":{"id":4709,"nodeType":"StructuredDocumentation","src":"19011:312:9","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":4734,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:9","nodeType":"FunctionDefinition","parameters":{"id":4712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4711,"mutability":"mutable","name":"value","nameLocation":"19353:5:9","nodeType":"VariableDeclaration","scope":4734,"src":"19346:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4710,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:9"},"returnParameters":{"id":4715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4714,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:9","nodeType":"VariableDeclaration","scope":4734,"src":"19383:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":4713,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:9","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:9"},"scope":5477,"src":"19328:224:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4759,"nodeType":"Block","src":"19949:150:9","statements":[{"expression":{"id":4747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4742,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4740,"src":"19959:10:9","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4745,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4737,"src":"19979:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4744,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":4743,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:9","typeDescriptions":{}}},"id":4746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:9","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":4748,"nodeType":"ExpressionStatement","src":"19959:26:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4749,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4740,"src":"19999:10:9","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4750,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4737,"src":"20013:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4758,"nodeType":"IfStatement","src":"19995:98:9","trueBody":{"id":4757,"nodeType":"Block","src":"20020:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":4753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:9","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":4754,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4737,"src":"20076:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4752,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3734,"src":"20041:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4756,"nodeType":"RevertStatement","src":"20034:48:9"}]}}]},"documentation":{"id":4735,"nodeType":"StructuredDocumentation","src":"19558:312:9","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":4760,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:9","nodeType":"FunctionDefinition","parameters":{"id":4738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4737,"mutability":"mutable","name":"value","nameLocation":"19900:5:9","nodeType":"VariableDeclaration","scope":4760,"src":"19893:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4736,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:9"},"returnParameters":{"id":4741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4740,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:9","nodeType":"VariableDeclaration","scope":4760,"src":"19930:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":4739,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:9","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:9"},"scope":5477,"src":"19875:224:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4785,"nodeType":"Block","src":"20496:150:9","statements":[{"expression":{"id":4773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4768,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4766,"src":"20506:10:9","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4771,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4763,"src":"20526:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4770,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":4769,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:9","typeDescriptions":{}}},"id":4772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:9","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":4774,"nodeType":"ExpressionStatement","src":"20506:26:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4775,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4766,"src":"20546:10:9","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4776,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4763,"src":"20560:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4784,"nodeType":"IfStatement","src":"20542:98:9","trueBody":{"id":4783,"nodeType":"Block","src":"20567:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":4779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:9","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":4780,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4763,"src":"20623:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4778,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3734,"src":"20588:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4782,"nodeType":"RevertStatement","src":"20581:48:9"}]}}]},"documentation":{"id":4761,"nodeType":"StructuredDocumentation","src":"20105:312:9","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":4786,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:9","nodeType":"FunctionDefinition","parameters":{"id":4764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4763,"mutability":"mutable","name":"value","nameLocation":"20447:5:9","nodeType":"VariableDeclaration","scope":4786,"src":"20440:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4762,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:9"},"returnParameters":{"id":4767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4766,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:9","nodeType":"VariableDeclaration","scope":4786,"src":"20477:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":4765,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:9","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:9"},"scope":5477,"src":"20422:224:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4811,"nodeType":"Block","src":"21043:150:9","statements":[{"expression":{"id":4799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4794,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4792,"src":"21053:10:9","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4797,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4789,"src":"21073:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4796,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":4795,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:9","typeDescriptions":{}}},"id":4798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:9","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":4800,"nodeType":"ExpressionStatement","src":"21053:26:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4801,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4792,"src":"21093:10:9","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4802,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4789,"src":"21107:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4810,"nodeType":"IfStatement","src":"21089:98:9","trueBody":{"id":4809,"nodeType":"Block","src":"21114:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":4805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:9","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":4806,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4789,"src":"21170:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4804,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3734,"src":"21135:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4808,"nodeType":"RevertStatement","src":"21128:48:9"}]}}]},"documentation":{"id":4787,"nodeType":"StructuredDocumentation","src":"20652:312:9","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":4812,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:9","nodeType":"FunctionDefinition","parameters":{"id":4790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4789,"mutability":"mutable","name":"value","nameLocation":"20994:5:9","nodeType":"VariableDeclaration","scope":4812,"src":"20987:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4788,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:9"},"returnParameters":{"id":4793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4792,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:9","nodeType":"VariableDeclaration","scope":4812,"src":"21024:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":4791,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:9","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:9"},"scope":5477,"src":"20969:224:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4837,"nodeType":"Block","src":"21590:150:9","statements":[{"expression":{"id":4825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4820,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4818,"src":"21600:10:9","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4823,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4815,"src":"21620:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4822,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":4821,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:9","typeDescriptions":{}}},"id":4824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:9","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":4826,"nodeType":"ExpressionStatement","src":"21600:26:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4827,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4818,"src":"21640:10:9","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4828,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4815,"src":"21654:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4836,"nodeType":"IfStatement","src":"21636:98:9","trueBody":{"id":4835,"nodeType":"Block","src":"21661:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":4831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:9","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":4832,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4815,"src":"21717:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4830,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3734,"src":"21682:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4834,"nodeType":"RevertStatement","src":"21675:48:9"}]}}]},"documentation":{"id":4813,"nodeType":"StructuredDocumentation","src":"21199:312:9","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":4838,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:9","nodeType":"FunctionDefinition","parameters":{"id":4816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4815,"mutability":"mutable","name":"value","nameLocation":"21541:5:9","nodeType":"VariableDeclaration","scope":4838,"src":"21534:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4814,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:9"},"returnParameters":{"id":4819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4818,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:9","nodeType":"VariableDeclaration","scope":4838,"src":"21571:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":4817,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:9","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:9"},"scope":5477,"src":"21516:224:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4863,"nodeType":"Block","src":"22137:150:9","statements":[{"expression":{"id":4851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4846,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4844,"src":"22147:10:9","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4849,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4841,"src":"22167:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4848,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":4847,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:9","typeDescriptions":{}}},"id":4850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:9","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":4852,"nodeType":"ExpressionStatement","src":"22147:26:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4853,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4844,"src":"22187:10:9","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4854,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4841,"src":"22201:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4862,"nodeType":"IfStatement","src":"22183:98:9","trueBody":{"id":4861,"nodeType":"Block","src":"22208:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":4857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:9","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":4858,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4841,"src":"22264:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4856,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3734,"src":"22229:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4860,"nodeType":"RevertStatement","src":"22222:48:9"}]}}]},"documentation":{"id":4839,"nodeType":"StructuredDocumentation","src":"21746:312:9","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":4864,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:9","nodeType":"FunctionDefinition","parameters":{"id":4842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4841,"mutability":"mutable","name":"value","nameLocation":"22088:5:9","nodeType":"VariableDeclaration","scope":4864,"src":"22081:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4840,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:9"},"returnParameters":{"id":4845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4844,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:9","nodeType":"VariableDeclaration","scope":4864,"src":"22118:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":4843,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:9","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:9"},"scope":5477,"src":"22063:224:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4889,"nodeType":"Block","src":"22684:150:9","statements":[{"expression":{"id":4877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4872,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4870,"src":"22694:10:9","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4875,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4867,"src":"22714:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4874,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":4873,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:9","typeDescriptions":{}}},"id":4876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:9","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":4878,"nodeType":"ExpressionStatement","src":"22694:26:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4879,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4870,"src":"22734:10:9","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4880,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4867,"src":"22748:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4888,"nodeType":"IfStatement","src":"22730:98:9","trueBody":{"id":4887,"nodeType":"Block","src":"22755:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":4883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:9","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":4884,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4867,"src":"22811:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4882,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3734,"src":"22776:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4886,"nodeType":"RevertStatement","src":"22769:48:9"}]}}]},"documentation":{"id":4865,"nodeType":"StructuredDocumentation","src":"22293:312:9","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":4890,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:9","nodeType":"FunctionDefinition","parameters":{"id":4868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4867,"mutability":"mutable","name":"value","nameLocation":"22635:5:9","nodeType":"VariableDeclaration","scope":4890,"src":"22628:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4866,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:9"},"returnParameters":{"id":4871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4870,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:9","nodeType":"VariableDeclaration","scope":4890,"src":"22665:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":4869,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:9","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:9"},"scope":5477,"src":"22610:224:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4915,"nodeType":"Block","src":"23231:150:9","statements":[{"expression":{"id":4903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4898,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4896,"src":"23241:10:9","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4901,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4893,"src":"23261:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4900,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":4899,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:9","typeDescriptions":{}}},"id":4902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:9","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":4904,"nodeType":"ExpressionStatement","src":"23241:26:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4905,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4896,"src":"23281:10:9","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4906,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4893,"src":"23295:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4914,"nodeType":"IfStatement","src":"23277:98:9","trueBody":{"id":4913,"nodeType":"Block","src":"23302:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":4909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:9","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":4910,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4893,"src":"23358:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4908,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3734,"src":"23323:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4912,"nodeType":"RevertStatement","src":"23316:48:9"}]}}]},"documentation":{"id":4891,"nodeType":"StructuredDocumentation","src":"22840:312:9","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":4916,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:9","nodeType":"FunctionDefinition","parameters":{"id":4894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4893,"mutability":"mutable","name":"value","nameLocation":"23182:5:9","nodeType":"VariableDeclaration","scope":4916,"src":"23175:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4892,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:9"},"returnParameters":{"id":4897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4896,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:9","nodeType":"VariableDeclaration","scope":4916,"src":"23212:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":4895,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:9","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:9"},"scope":5477,"src":"23157:224:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4941,"nodeType":"Block","src":"23778:150:9","statements":[{"expression":{"id":4929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4924,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4922,"src":"23788:10:9","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4927,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4919,"src":"23808:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4926,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":4925,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:9","typeDescriptions":{}}},"id":4928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:9","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":4930,"nodeType":"ExpressionStatement","src":"23788:26:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4931,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4922,"src":"23828:10:9","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4932,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4919,"src":"23842:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4940,"nodeType":"IfStatement","src":"23824:98:9","trueBody":{"id":4939,"nodeType":"Block","src":"23849:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":4935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:9","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":4936,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4919,"src":"23905:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4934,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3734,"src":"23870:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4938,"nodeType":"RevertStatement","src":"23863:48:9"}]}}]},"documentation":{"id":4917,"nodeType":"StructuredDocumentation","src":"23387:312:9","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":4942,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:9","nodeType":"FunctionDefinition","parameters":{"id":4920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4919,"mutability":"mutable","name":"value","nameLocation":"23729:5:9","nodeType":"VariableDeclaration","scope":4942,"src":"23722:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4918,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:9"},"returnParameters":{"id":4923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4922,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:9","nodeType":"VariableDeclaration","scope":4942,"src":"23759:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":4921,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:9","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:9"},"scope":5477,"src":"23704:224:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4967,"nodeType":"Block","src":"24325:150:9","statements":[{"expression":{"id":4955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4950,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4948,"src":"24335:10:9","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4953,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4945,"src":"24355:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4952,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":4951,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:9","typeDescriptions":{}}},"id":4954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:9","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":4956,"nodeType":"ExpressionStatement","src":"24335:26:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4957,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4948,"src":"24375:10:9","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4958,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4945,"src":"24389:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4966,"nodeType":"IfStatement","src":"24371:98:9","trueBody":{"id":4965,"nodeType":"Block","src":"24396:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":4961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:9","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":4962,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4945,"src":"24452:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4960,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3734,"src":"24417:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4964,"nodeType":"RevertStatement","src":"24410:48:9"}]}}]},"documentation":{"id":4943,"nodeType":"StructuredDocumentation","src":"23934:312:9","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":4968,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:9","nodeType":"FunctionDefinition","parameters":{"id":4946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4945,"mutability":"mutable","name":"value","nameLocation":"24276:5:9","nodeType":"VariableDeclaration","scope":4968,"src":"24269:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4944,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:9"},"returnParameters":{"id":4949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4948,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:9","nodeType":"VariableDeclaration","scope":4968,"src":"24306:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":4947,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:9","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:9"},"scope":5477,"src":"24251:224:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4993,"nodeType":"Block","src":"24872:150:9","statements":[{"expression":{"id":4981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4976,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4974,"src":"24882:10:9","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4979,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4971,"src":"24902:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4978,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":4977,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:9","typeDescriptions":{}}},"id":4980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:9","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":4982,"nodeType":"ExpressionStatement","src":"24882:26:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4983,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4974,"src":"24922:10:9","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4984,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4971,"src":"24936:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4992,"nodeType":"IfStatement","src":"24918:98:9","trueBody":{"id":4991,"nodeType":"Block","src":"24943:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":4987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:9","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":4988,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4971,"src":"24999:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4986,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3734,"src":"24964:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4990,"nodeType":"RevertStatement","src":"24957:48:9"}]}}]},"documentation":{"id":4969,"nodeType":"StructuredDocumentation","src":"24481:312:9","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":4994,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:9","nodeType":"FunctionDefinition","parameters":{"id":4972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4971,"mutability":"mutable","name":"value","nameLocation":"24823:5:9","nodeType":"VariableDeclaration","scope":4994,"src":"24816:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4970,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:9"},"returnParameters":{"id":4975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4974,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:9","nodeType":"VariableDeclaration","scope":4994,"src":"24853:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":4973,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:9","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:9"},"scope":5477,"src":"24798:224:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5019,"nodeType":"Block","src":"25419:150:9","statements":[{"expression":{"id":5007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5002,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5000,"src":"25429:10:9","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5005,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4997,"src":"25449:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5004,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":5003,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:9","typeDescriptions":{}}},"id":5006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:9","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":5008,"nodeType":"ExpressionStatement","src":"25429:26:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5009,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5000,"src":"25469:10:9","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5010,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4997,"src":"25483:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5018,"nodeType":"IfStatement","src":"25465:98:9","trueBody":{"id":5017,"nodeType":"Block","src":"25490:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":5013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:9","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":5014,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4997,"src":"25546:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5012,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3734,"src":"25511:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5016,"nodeType":"RevertStatement","src":"25504:48:9"}]}}]},"documentation":{"id":4995,"nodeType":"StructuredDocumentation","src":"25028:312:9","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":5020,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:9","nodeType":"FunctionDefinition","parameters":{"id":4998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4997,"mutability":"mutable","name":"value","nameLocation":"25370:5:9","nodeType":"VariableDeclaration","scope":5020,"src":"25363:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4996,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:9"},"returnParameters":{"id":5001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5000,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:9","nodeType":"VariableDeclaration","scope":5020,"src":"25400:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":4999,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:9","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:9"},"scope":5477,"src":"25345:224:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5045,"nodeType":"Block","src":"25966:150:9","statements":[{"expression":{"id":5033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5028,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5026,"src":"25976:10:9","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5031,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5023,"src":"25996:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5030,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":5029,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:9","typeDescriptions":{}}},"id":5032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:9","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":5034,"nodeType":"ExpressionStatement","src":"25976:26:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5035,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5026,"src":"26016:10:9","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5036,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5023,"src":"26030:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5044,"nodeType":"IfStatement","src":"26012:98:9","trueBody":{"id":5043,"nodeType":"Block","src":"26037:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":5039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:9","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":5040,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5023,"src":"26093:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5038,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3734,"src":"26058:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5042,"nodeType":"RevertStatement","src":"26051:48:9"}]}}]},"documentation":{"id":5021,"nodeType":"StructuredDocumentation","src":"25575:312:9","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":5046,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:9","nodeType":"FunctionDefinition","parameters":{"id":5024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5023,"mutability":"mutable","name":"value","nameLocation":"25917:5:9","nodeType":"VariableDeclaration","scope":5046,"src":"25910:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5022,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:9"},"returnParameters":{"id":5027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5026,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:9","nodeType":"VariableDeclaration","scope":5046,"src":"25947:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":5025,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:9","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:9"},"scope":5477,"src":"25892:224:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5071,"nodeType":"Block","src":"26513:150:9","statements":[{"expression":{"id":5059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5054,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5052,"src":"26523:10:9","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5057,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5049,"src":"26543:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5056,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":5055,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:9","typeDescriptions":{}}},"id":5058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:9","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":5060,"nodeType":"ExpressionStatement","src":"26523:26:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5061,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5052,"src":"26563:10:9","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5062,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5049,"src":"26577:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5070,"nodeType":"IfStatement","src":"26559:98:9","trueBody":{"id":5069,"nodeType":"Block","src":"26584:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":5065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:9","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":5066,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5049,"src":"26640:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5064,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3734,"src":"26605:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5068,"nodeType":"RevertStatement","src":"26598:48:9"}]}}]},"documentation":{"id":5047,"nodeType":"StructuredDocumentation","src":"26122:312:9","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":5072,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:9","nodeType":"FunctionDefinition","parameters":{"id":5050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5049,"mutability":"mutable","name":"value","nameLocation":"26464:5:9","nodeType":"VariableDeclaration","scope":5072,"src":"26457:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5048,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:9"},"returnParameters":{"id":5053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5052,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:9","nodeType":"VariableDeclaration","scope":5072,"src":"26494:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":5051,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:9","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:9"},"scope":5477,"src":"26439:224:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5097,"nodeType":"Block","src":"27060:150:9","statements":[{"expression":{"id":5085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5080,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5078,"src":"27070:10:9","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5083,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5075,"src":"27090:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5082,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":5081,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:9","typeDescriptions":{}}},"id":5084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:9","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":5086,"nodeType":"ExpressionStatement","src":"27070:26:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5087,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5078,"src":"27110:10:9","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5088,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5075,"src":"27124:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5096,"nodeType":"IfStatement","src":"27106:98:9","trueBody":{"id":5095,"nodeType":"Block","src":"27131:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":5091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:9","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":5092,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5075,"src":"27187:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5090,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3734,"src":"27152:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5094,"nodeType":"RevertStatement","src":"27145:48:9"}]}}]},"documentation":{"id":5073,"nodeType":"StructuredDocumentation","src":"26669:312:9","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":5098,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:9","nodeType":"FunctionDefinition","parameters":{"id":5076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5075,"mutability":"mutable","name":"value","nameLocation":"27011:5:9","nodeType":"VariableDeclaration","scope":5098,"src":"27004:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5074,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:9"},"returnParameters":{"id":5079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5078,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:9","nodeType":"VariableDeclaration","scope":5098,"src":"27041:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":5077,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:9","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:9"},"scope":5477,"src":"26986:224:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5123,"nodeType":"Block","src":"27607:150:9","statements":[{"expression":{"id":5111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5106,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5104,"src":"27617:10:9","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5109,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5101,"src":"27637:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":5107,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:9","typeDescriptions":{}}},"id":5110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:9","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":5112,"nodeType":"ExpressionStatement","src":"27617:26:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5113,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5104,"src":"27657:10:9","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5114,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5101,"src":"27671:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5122,"nodeType":"IfStatement","src":"27653:98:9","trueBody":{"id":5121,"nodeType":"Block","src":"27678:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":5117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:9","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":5118,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5101,"src":"27734:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5116,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3734,"src":"27699:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5120,"nodeType":"RevertStatement","src":"27692:48:9"}]}}]},"documentation":{"id":5099,"nodeType":"StructuredDocumentation","src":"27216:312:9","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":5124,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:9","nodeType":"FunctionDefinition","parameters":{"id":5102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5101,"mutability":"mutable","name":"value","nameLocation":"27558:5:9","nodeType":"VariableDeclaration","scope":5124,"src":"27551:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5100,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:9"},"returnParameters":{"id":5105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5104,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:9","nodeType":"VariableDeclaration","scope":5124,"src":"27588:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":5103,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:9","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:9"},"scope":5477,"src":"27533:224:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5149,"nodeType":"Block","src":"28147:148:9","statements":[{"expression":{"id":5137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5132,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5130,"src":"28157:10:9","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5135,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5127,"src":"28176:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5134,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":5133,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:9","typeDescriptions":{}}},"id":5136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:9","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":5138,"nodeType":"ExpressionStatement","src":"28157:25:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5139,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5130,"src":"28196:10:9","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5140,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5127,"src":"28210:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5148,"nodeType":"IfStatement","src":"28192:97:9","trueBody":{"id":5147,"nodeType":"Block","src":"28217:72:9","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":5143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:9","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":5144,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5127,"src":"28272:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5142,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3734,"src":"28238:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5146,"nodeType":"RevertStatement","src":"28231:47:9"}]}}]},"documentation":{"id":5125,"nodeType":"StructuredDocumentation","src":"27763:307:9","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":5150,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:9","nodeType":"FunctionDefinition","parameters":{"id":5128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5127,"mutability":"mutable","name":"value","nameLocation":"28099:5:9","nodeType":"VariableDeclaration","scope":5150,"src":"28092:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5126,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:9"},"returnParameters":{"id":5131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5130,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:9","nodeType":"VariableDeclaration","scope":5150,"src":"28129:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":5129,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:9","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:9"},"scope":5477,"src":"28075:220:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5175,"nodeType":"Block","src":"28685:148:9","statements":[{"expression":{"id":5163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5158,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5156,"src":"28695:10:9","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5161,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5153,"src":"28714:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5160,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":5159,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:9","typeDescriptions":{}}},"id":5162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:9","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":5164,"nodeType":"ExpressionStatement","src":"28695:25:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5165,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5156,"src":"28734:10:9","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5166,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5153,"src":"28748:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5174,"nodeType":"IfStatement","src":"28730:97:9","trueBody":{"id":5173,"nodeType":"Block","src":"28755:72:9","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":5169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:9","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":5170,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5153,"src":"28810:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5168,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3734,"src":"28776:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5172,"nodeType":"RevertStatement","src":"28769:47:9"}]}}]},"documentation":{"id":5151,"nodeType":"StructuredDocumentation","src":"28301:307:9","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":5176,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:9","nodeType":"FunctionDefinition","parameters":{"id":5154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5153,"mutability":"mutable","name":"value","nameLocation":"28637:5:9","nodeType":"VariableDeclaration","scope":5176,"src":"28630:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5152,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:9"},"returnParameters":{"id":5157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5156,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:9","nodeType":"VariableDeclaration","scope":5176,"src":"28667:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":5155,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:9","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:9"},"scope":5477,"src":"28613:220:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5201,"nodeType":"Block","src":"29223:148:9","statements":[{"expression":{"id":5189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5184,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5182,"src":"29233:10:9","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5187,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5179,"src":"29252:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5186,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":5185,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:9","typeDescriptions":{}}},"id":5188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:9","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":5190,"nodeType":"ExpressionStatement","src":"29233:25:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5191,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5182,"src":"29272:10:9","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5192,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5179,"src":"29286:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5200,"nodeType":"IfStatement","src":"29268:97:9","trueBody":{"id":5199,"nodeType":"Block","src":"29293:72:9","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":5195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:9","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":5196,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5179,"src":"29348:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5194,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3734,"src":"29314:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5198,"nodeType":"RevertStatement","src":"29307:47:9"}]}}]},"documentation":{"id":5177,"nodeType":"StructuredDocumentation","src":"28839:307:9","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":5202,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:9","nodeType":"FunctionDefinition","parameters":{"id":5180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5179,"mutability":"mutable","name":"value","nameLocation":"29175:5:9","nodeType":"VariableDeclaration","scope":5202,"src":"29168:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5178,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:9"},"returnParameters":{"id":5183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5182,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:9","nodeType":"VariableDeclaration","scope":5202,"src":"29205:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":5181,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:9","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:9"},"scope":5477,"src":"29151:220:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5227,"nodeType":"Block","src":"29761:148:9","statements":[{"expression":{"id":5215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5210,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5208,"src":"29771:10:9","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5213,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5205,"src":"29790:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5212,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":5211,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:9","typeDescriptions":{}}},"id":5214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:9","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":5216,"nodeType":"ExpressionStatement","src":"29771:25:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5217,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5208,"src":"29810:10:9","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5218,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5205,"src":"29824:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5226,"nodeType":"IfStatement","src":"29806:97:9","trueBody":{"id":5225,"nodeType":"Block","src":"29831:72:9","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":5221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:9","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":5222,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5205,"src":"29886:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5220,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3734,"src":"29852:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5224,"nodeType":"RevertStatement","src":"29845:47:9"}]}}]},"documentation":{"id":5203,"nodeType":"StructuredDocumentation","src":"29377:307:9","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":5228,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:9","nodeType":"FunctionDefinition","parameters":{"id":5206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5205,"mutability":"mutable","name":"value","nameLocation":"29713:5:9","nodeType":"VariableDeclaration","scope":5228,"src":"29706:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5204,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:9"},"returnParameters":{"id":5209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5208,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:9","nodeType":"VariableDeclaration","scope":5228,"src":"29743:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":5207,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:9","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:9"},"scope":5477,"src":"29689:220:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5253,"nodeType":"Block","src":"30299:148:9","statements":[{"expression":{"id":5241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5236,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5234,"src":"30309:10:9","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5239,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5231,"src":"30328:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5238,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":5237,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:9","typeDescriptions":{}}},"id":5240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:9","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":5242,"nodeType":"ExpressionStatement","src":"30309:25:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5243,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5234,"src":"30348:10:9","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5244,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5231,"src":"30362:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5252,"nodeType":"IfStatement","src":"30344:97:9","trueBody":{"id":5251,"nodeType":"Block","src":"30369:72:9","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":5247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:9","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":5248,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5231,"src":"30424:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5246,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3734,"src":"30390:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5250,"nodeType":"RevertStatement","src":"30383:47:9"}]}}]},"documentation":{"id":5229,"nodeType":"StructuredDocumentation","src":"29915:307:9","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":5254,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:9","nodeType":"FunctionDefinition","parameters":{"id":5232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5231,"mutability":"mutable","name":"value","nameLocation":"30251:5:9","nodeType":"VariableDeclaration","scope":5254,"src":"30244:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5230,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:9"},"returnParameters":{"id":5235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5234,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:9","nodeType":"VariableDeclaration","scope":5254,"src":"30281:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5233,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:9","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:9"},"scope":5477,"src":"30227:220:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5279,"nodeType":"Block","src":"30837:148:9","statements":[{"expression":{"id":5267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5262,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5260,"src":"30847:10:9","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5265,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5257,"src":"30866:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5264,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":5263,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:9","typeDescriptions":{}}},"id":5266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:9","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":5268,"nodeType":"ExpressionStatement","src":"30847:25:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5269,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5260,"src":"30886:10:9","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5270,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5257,"src":"30900:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5278,"nodeType":"IfStatement","src":"30882:97:9","trueBody":{"id":5277,"nodeType":"Block","src":"30907:72:9","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":5273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:9","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":5274,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5257,"src":"30962:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5272,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3734,"src":"30928:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5276,"nodeType":"RevertStatement","src":"30921:47:9"}]}}]},"documentation":{"id":5255,"nodeType":"StructuredDocumentation","src":"30453:307:9","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":5280,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:9","nodeType":"FunctionDefinition","parameters":{"id":5258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5257,"mutability":"mutable","name":"value","nameLocation":"30789:5:9","nodeType":"VariableDeclaration","scope":5280,"src":"30782:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5256,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:9"},"returnParameters":{"id":5261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5260,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:9","nodeType":"VariableDeclaration","scope":5280,"src":"30819:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":5259,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:9","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:9"},"scope":5477,"src":"30765:220:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5305,"nodeType":"Block","src":"31375:148:9","statements":[{"expression":{"id":5293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5288,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5286,"src":"31385:10:9","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5291,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5283,"src":"31404:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5290,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":5289,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:9","typeDescriptions":{}}},"id":5292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:9","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":5294,"nodeType":"ExpressionStatement","src":"31385:25:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5295,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5286,"src":"31424:10:9","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5296,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5283,"src":"31438:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5304,"nodeType":"IfStatement","src":"31420:97:9","trueBody":{"id":5303,"nodeType":"Block","src":"31445:72:9","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":5299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:9","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":5300,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5283,"src":"31500:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5298,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3734,"src":"31466:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5302,"nodeType":"RevertStatement","src":"31459:47:9"}]}}]},"documentation":{"id":5281,"nodeType":"StructuredDocumentation","src":"30991:307:9","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":5306,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:9","nodeType":"FunctionDefinition","parameters":{"id":5284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5283,"mutability":"mutable","name":"value","nameLocation":"31327:5:9","nodeType":"VariableDeclaration","scope":5306,"src":"31320:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5282,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:9"},"returnParameters":{"id":5287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5286,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:9","nodeType":"VariableDeclaration","scope":5306,"src":"31357:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":5285,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:9","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:9"},"scope":5477,"src":"31303:220:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5331,"nodeType":"Block","src":"31913:148:9","statements":[{"expression":{"id":5319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5314,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5312,"src":"31923:10:9","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5317,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5309,"src":"31942:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5316,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":5315,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:9","typeDescriptions":{}}},"id":5318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:9","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":5320,"nodeType":"ExpressionStatement","src":"31923:25:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5321,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5312,"src":"31962:10:9","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5322,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5309,"src":"31976:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5330,"nodeType":"IfStatement","src":"31958:97:9","trueBody":{"id":5329,"nodeType":"Block","src":"31983:72:9","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":5325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:9","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":5326,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5309,"src":"32038:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5324,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3734,"src":"32004:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5328,"nodeType":"RevertStatement","src":"31997:47:9"}]}}]},"documentation":{"id":5307,"nodeType":"StructuredDocumentation","src":"31529:307:9","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":5332,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:9","nodeType":"FunctionDefinition","parameters":{"id":5310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5309,"mutability":"mutable","name":"value","nameLocation":"31865:5:9","nodeType":"VariableDeclaration","scope":5332,"src":"31858:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5308,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:9"},"returnParameters":{"id":5313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5312,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:9","nodeType":"VariableDeclaration","scope":5332,"src":"31895:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":5311,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:9","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:9"},"scope":5477,"src":"31841:220:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5357,"nodeType":"Block","src":"32451:148:9","statements":[{"expression":{"id":5345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5340,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5338,"src":"32461:10:9","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5343,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5335,"src":"32480:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5342,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":5341,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:9","typeDescriptions":{}}},"id":5344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:9","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":5346,"nodeType":"ExpressionStatement","src":"32461:25:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5347,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5338,"src":"32500:10:9","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5348,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5335,"src":"32514:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5356,"nodeType":"IfStatement","src":"32496:97:9","trueBody":{"id":5355,"nodeType":"Block","src":"32521:72:9","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":5351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":5352,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5335,"src":"32576:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5350,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3734,"src":"32542:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5354,"nodeType":"RevertStatement","src":"32535:47:9"}]}}]},"documentation":{"id":5333,"nodeType":"StructuredDocumentation","src":"32067:307:9","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":5358,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:9","nodeType":"FunctionDefinition","parameters":{"id":5336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5335,"mutability":"mutable","name":"value","nameLocation":"32403:5:9","nodeType":"VariableDeclaration","scope":5358,"src":"32396:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5334,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:9"},"returnParameters":{"id":5339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5338,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:9","nodeType":"VariableDeclaration","scope":5358,"src":"32433:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":5337,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:9","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:9"},"scope":5477,"src":"32379:220:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5383,"nodeType":"Block","src":"32989:148:9","statements":[{"expression":{"id":5371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5366,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5364,"src":"32999:10:9","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5369,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5361,"src":"33018:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":5367,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:9","typeDescriptions":{}}},"id":5370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:9","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":5372,"nodeType":"ExpressionStatement","src":"32999:25:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5373,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5364,"src":"33038:10:9","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5374,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5361,"src":"33052:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5382,"nodeType":"IfStatement","src":"33034:97:9","trueBody":{"id":5381,"nodeType":"Block","src":"33059:72:9","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":5377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:9","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":5378,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5361,"src":"33114:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5376,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3734,"src":"33080:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5380,"nodeType":"RevertStatement","src":"33073:47:9"}]}}]},"documentation":{"id":5359,"nodeType":"StructuredDocumentation","src":"32605:307:9","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":5384,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:9","nodeType":"FunctionDefinition","parameters":{"id":5362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5361,"mutability":"mutable","name":"value","nameLocation":"32941:5:9","nodeType":"VariableDeclaration","scope":5384,"src":"32934:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5360,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:9"},"returnParameters":{"id":5365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5364,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:9","nodeType":"VariableDeclaration","scope":5384,"src":"32971:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":5363,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:9","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:9"},"scope":5477,"src":"32917:220:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5409,"nodeType":"Block","src":"33527:148:9","statements":[{"expression":{"id":5397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5392,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5390,"src":"33537:10:9","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5395,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5387,"src":"33556:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5394,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":5393,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:9","typeDescriptions":{}}},"id":5396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:9","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":5398,"nodeType":"ExpressionStatement","src":"33537:25:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5399,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5390,"src":"33576:10:9","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5400,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5387,"src":"33590:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5408,"nodeType":"IfStatement","src":"33572:97:9","trueBody":{"id":5407,"nodeType":"Block","src":"33597:72:9","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":5403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:9","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":5404,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5387,"src":"33652:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5402,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3734,"src":"33618:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5406,"nodeType":"RevertStatement","src":"33611:47:9"}]}}]},"documentation":{"id":5385,"nodeType":"StructuredDocumentation","src":"33143:307:9","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":5410,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:9","nodeType":"FunctionDefinition","parameters":{"id":5388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5387,"mutability":"mutable","name":"value","nameLocation":"33479:5:9","nodeType":"VariableDeclaration","scope":5410,"src":"33472:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5386,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:9"},"returnParameters":{"id":5391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5390,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:9","nodeType":"VariableDeclaration","scope":5410,"src":"33509:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":5389,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:9","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:9"},"scope":5477,"src":"33455:220:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5435,"nodeType":"Block","src":"34058:146:9","statements":[{"expression":{"id":5423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5418,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5416,"src":"34068:10:9","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5421,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5413,"src":"34086:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5420,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":5419,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:9","typeDescriptions":{}}},"id":5422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:9","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":5424,"nodeType":"ExpressionStatement","src":"34068:24:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5425,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5416,"src":"34106:10:9","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5426,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5413,"src":"34120:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5434,"nodeType":"IfStatement","src":"34102:96:9","trueBody":{"id":5433,"nodeType":"Block","src":"34127:71:9","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":5429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:9","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":5430,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5413,"src":"34181:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5428,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3734,"src":"34148:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5432,"nodeType":"RevertStatement","src":"34141:46:9"}]}}]},"documentation":{"id":5411,"nodeType":"StructuredDocumentation","src":"33681:302:9","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":5436,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:9","nodeType":"FunctionDefinition","parameters":{"id":5414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5413,"mutability":"mutable","name":"value","nameLocation":"34011:5:9","nodeType":"VariableDeclaration","scope":5436,"src":"34004:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5412,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:9"},"returnParameters":{"id":5417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5416,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:9","nodeType":"VariableDeclaration","scope":5436,"src":"34041:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":5415,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:9","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:9"},"scope":5477,"src":"33988:216:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5465,"nodeType":"Block","src":"34444:250:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5444,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5439,"src":"34557:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":5449,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5448,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":5447,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":5451,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:9","memberName":"max","nodeType":"MemberAccess","src":"34573:16:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5446,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5445,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:9","typeDescriptions":{}}},"id":5452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5459,"nodeType":"IfStatement","src":"34553:105:9","trueBody":{"id":5458,"nodeType":"Block","src":"34592:66:9","statements":[{"errorCall":{"arguments":[{"id":5455,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5439,"src":"34641:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5454,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3739,"src":"34613:27:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5457,"nodeType":"RevertStatement","src":"34606:41:9"}]}},{"expression":{"arguments":[{"id":5462,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5439,"src":"34681:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5461,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5460,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:9","typeDescriptions":{}}},"id":5463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5443,"id":5464,"nodeType":"Return","src":"34667:20:9"}]},"documentation":{"id":5437,"nodeType":"StructuredDocumentation","src":"34210:165:9","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":5466,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:9","nodeType":"FunctionDefinition","parameters":{"id":5440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5439,"mutability":"mutable","name":"value","nameLocation":"34406:5:9","nodeType":"VariableDeclaration","scope":5466,"src":"34398:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5438,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:9"},"returnParameters":{"id":5443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5442,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5466,"src":"34436:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5441,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:9"},"scope":5477,"src":"34380:314:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5475,"nodeType":"Block","src":"34853:87:9","statements":[{"AST":{"nodeType":"YulBlock","src":"34888:46:9","statements":[{"nodeType":"YulAssignment","src":"34902:22:9","value":{"arguments":[{"arguments":[{"name":"b","nodeType":"YulIdentifier","src":"34921:1:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34914:6:9"},"nodeType":"YulFunctionCall","src":"34914:9:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34907:6:9"},"nodeType":"YulFunctionCall","src":"34907:17:9"},"variableNames":[{"name":"u","nodeType":"YulIdentifier","src":"34902:1:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5469,"isOffset":false,"isSlot":false,"src":"34921:1:9","valueSize":1},{"declaration":5472,"isOffset":false,"isSlot":false,"src":"34902:1:9","valueSize":1}],"flags":["memory-safe"],"id":5474,"nodeType":"InlineAssembly","src":"34863:71:9"}]},"documentation":{"id":5467,"nodeType":"StructuredDocumentation","src":"34700:90:9","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":5476,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:9","nodeType":"FunctionDefinition","parameters":{"id":5470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5469,"mutability":"mutable","name":"b","nameLocation":"34816:1:9","nodeType":"VariableDeclaration","scope":5476,"src":"34811:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5468,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:9"},"returnParameters":{"id":5473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5472,"mutability":"mutable","name":"u","nameLocation":"34850:1:9","nodeType":"VariableDeclaration","scope":5476,"src":"34842:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5471,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:9"},"scope":5477,"src":"34795:145:9","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5478,"src":"769:34173:9","usedErrors":[3722,3727,3734,3739],"usedEvents":[]}],"src":"192:34751:9"},"id":9},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[5477],"SignedMath":[5621]},"id":5622,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5479,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:10"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":5481,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5622,"sourceUnit":5478,"src":"135:40:10","symbolAliases":[{"foreign":{"id":5480,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5477,"src":"143:8:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":5482,"nodeType":"StructuredDocumentation","src":"177:80:10","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":5621,"linearizedBaseContracts":[5621],"name":"SignedMath","nameLocation":"266:10:10","nodeType":"ContractDefinition","nodes":[{"body":{"id":5511,"nodeType":"Block","src":"746:215:10","statements":[{"id":5510,"nodeType":"UncheckedBlock","src":"756:199:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5494,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5489,"src":"894:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5495,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5487,"src":"900:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5496,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5489,"src":"904:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5498,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":5503,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5485,"src":"932:9:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5501,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5477,"src":"916:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5477_$","typeString":"type(library SafeCast)"}},"id":5502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5476,"src":"916:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5500,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5499,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:10","typeDescriptions":{}}},"id":5505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5507,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5493,"id":5509,"nodeType":"Return","src":"887:57:10"}]}]},"documentation":{"id":5483,"nodeType":"StructuredDocumentation","src":"283:374:10","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":5512,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:10","nodeType":"FunctionDefinition","parameters":{"id":5490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5485,"mutability":"mutable","name":"condition","nameLocation":"684:9:10","nodeType":"VariableDeclaration","scope":5512,"src":"679:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5484,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5487,"mutability":"mutable","name":"a","nameLocation":"702:1:10","nodeType":"VariableDeclaration","scope":5512,"src":"695:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5486,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5489,"mutability":"mutable","name":"b","nameLocation":"712:1:10","nodeType":"VariableDeclaration","scope":5512,"src":"705:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5488,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:10"},"returnParameters":{"id":5493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5492,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5512,"src":"738:6:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5491,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:10"},"scope":5621,"src":"662:299:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5530,"nodeType":"Block","src":"1102:44:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5523,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5515,"src":"1127:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5524,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5517,"src":"1131:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":5526,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5515,"src":"1134:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":5527,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5517,"src":"1137:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5522,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5512,"src":"1119:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":5528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5521,"id":5529,"nodeType":"Return","src":"1112:27:10"}]},"documentation":{"id":5513,"nodeType":"StructuredDocumentation","src":"967:66:10","text":" @dev Returns the largest of two signed numbers."},"id":5531,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:10","nodeType":"FunctionDefinition","parameters":{"id":5518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5515,"mutability":"mutable","name":"a","nameLocation":"1058:1:10","nodeType":"VariableDeclaration","scope":5531,"src":"1051:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5514,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5517,"mutability":"mutable","name":"b","nameLocation":"1068:1:10","nodeType":"VariableDeclaration","scope":5531,"src":"1061:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5516,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:10"},"returnParameters":{"id":5521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5520,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5531,"src":"1094:6:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5519,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:10"},"scope":5621,"src":"1038:108:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5549,"nodeType":"Block","src":"1288:44:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5542,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5534,"src":"1313:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5543,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5536,"src":"1317:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":5545,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5534,"src":"1320:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":5546,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5536,"src":"1323:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5541,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5512,"src":"1305:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":5547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5540,"id":5548,"nodeType":"Return","src":"1298:27:10"}]},"documentation":{"id":5532,"nodeType":"StructuredDocumentation","src":"1152:67:10","text":" @dev Returns the smallest of two signed numbers."},"id":5550,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:10","nodeType":"FunctionDefinition","parameters":{"id":5537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5534,"mutability":"mutable","name":"a","nameLocation":"1244:1:10","nodeType":"VariableDeclaration","scope":5550,"src":"1237:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5533,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5536,"mutability":"mutable","name":"b","nameLocation":"1254:1:10","nodeType":"VariableDeclaration","scope":5550,"src":"1247:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5535,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:10"},"returnParameters":{"id":5540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5539,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5550,"src":"1280:6:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5538,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:10"},"scope":5621,"src":"1224:108:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5593,"nodeType":"Block","src":"1537:162:10","statements":[{"assignments":[5561],"declarations":[{"constant":false,"id":5561,"mutability":"mutable","name":"x","nameLocation":"1606:1:10","nodeType":"VariableDeclaration","scope":5593,"src":"1599:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5560,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":5574,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5562,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5553,"src":"1611:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":5563,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5555,"src":"1615:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5565,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5566,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5553,"src":"1622:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5567,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5555,"src":"1626:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5569,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5572,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:10"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5575,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5561,"src":"1651:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5580,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5561,"src":"1671:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5579,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5578,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:10","typeDescriptions":{}}},"id":5581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":5582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:10","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5577,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5576,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:10","typeDescriptions":{}}},"id":5584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5585,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5553,"src":"1685:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5586,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5555,"src":"1689:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5588,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5590,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5559,"id":5592,"nodeType":"Return","src":"1644:48:10"}]},"documentation":{"id":5551,"nodeType":"StructuredDocumentation","src":"1338:126:10","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":5594,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:10","nodeType":"FunctionDefinition","parameters":{"id":5556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5553,"mutability":"mutable","name":"a","nameLocation":"1493:1:10","nodeType":"VariableDeclaration","scope":5594,"src":"1486:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5552,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5555,"mutability":"mutable","name":"b","nameLocation":"1503:1:10","nodeType":"VariableDeclaration","scope":5594,"src":"1496:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5554,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:10"},"returnParameters":{"id":5559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5558,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5594,"src":"1529:6:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5557,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:10"},"scope":5621,"src":"1469:230:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5619,"nodeType":"Block","src":"1843:767:10","statements":[{"id":5618,"nodeType":"UncheckedBlock","src":"1853:751:10","statements":[{"assignments":[5603],"declarations":[{"constant":false,"id":5603,"mutability":"mutable","name":"mask","nameLocation":"2424:4:10","nodeType":"VariableDeclaration","scope":5618,"src":"2417:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5602,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":5607,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5604,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5597,"src":"2431:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":5605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:10","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5610,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5597,"src":"2576:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5611,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5603,"src":"2580:4:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5613,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5614,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5603,"src":"2588:4:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5609,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5608,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:10","typeDescriptions":{}}},"id":5616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5601,"id":5617,"nodeType":"Return","src":"2560:33:10"}]}]},"documentation":{"id":5595,"nodeType":"StructuredDocumentation","src":"1705:78:10","text":" @dev Returns the absolute unsigned value of a signed value."},"id":5620,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:10","nodeType":"FunctionDefinition","parameters":{"id":5598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5597,"mutability":"mutable","name":"n","nameLocation":"1808:1:10","nodeType":"VariableDeclaration","scope":5620,"src":"1801:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5596,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:10"},"returnParameters":{"id":5601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5600,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5620,"src":"1834:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5599,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:10"},"scope":5621,"src":"1788:822:10","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5622,"src":"258:2354:10","usedErrors":[],"usedEvents":[]}],"src":"109:2504:10"},"id":10},"contracts/Factory.sol":{"ast":{"absolutePath":"contracts/Factory.sol","exportedSymbols":{"Context":[785],"ERC20":[651],"Factory":[6050],"IERC20":[729],"IERC20Errors":[41],"IERC20Metadata":[755],"LPToken":[6068],"Math":[3712],"Pool":[6722],"ReentrancyGuard":[906],"SafeCast":[5477],"SignedMath":[5621],"Strings":[2106]},"id":6051,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5623,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:11"},{"absolutePath":"contracts/Pool.sol","file":"./Pool.sol","id":5624,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6051,"sourceUnit":6723,"src":"58:20:11","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Factory","contractDependencies":[6722],"contractKind":"contract","fullyImplemented":true,"id":6050,"linearizedBaseContracts":[6050],"name":"Factory","nameLocation":"89:7:11","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"b5217bb4","id":5628,"mutability":"mutable","name":"pools","nameLocation":"191:5:11","nodeType":"VariableDeclaration","scope":6050,"src":"156:40:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"},"typeName":{"id":5627,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":5625,"name":"bytes32","nodeType":"ElementaryTypeName","src":"164:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"156:27:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":5626,"name":"address","nodeType":"ElementaryTypeName","src":"175:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"public"},{"constant":false,"functionSelector":"c6255626","id":5631,"mutability":"mutable","name":"supportedTokens","nameLocation":"219:15:11","nodeType":"VariableDeclaration","scope":6050,"src":"202:32:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[]"},"typeName":{"baseType":{"id":5629,"name":"address","nodeType":"ElementaryTypeName","src":"202:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5630,"nodeType":"ArrayTypeName","src":"202:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"public"},{"anonymous":false,"eventSelector":"26bf75378c99ddaf6cfa3d759c5ca947d22d1169b02be2cd17d49b102a1ca2fd","id":5636,"name":"PoolCreated","nameLocation":"251:11:11","nodeType":"EventDefinition","parameters":{"id":5635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5634,"indexed":false,"mutability":"mutable","name":"tokens","nameLocation":"282:6:11","nodeType":"VariableDeclaration","scope":5636,"src":"272:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5632,"name":"address","nodeType":"ElementaryTypeName","src":"272:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5633,"nodeType":"ArrayTypeName","src":"272:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"262:32:11"},"src":"245:50:11"},{"body":{"id":5723,"nodeType":"Block","src":"420:709:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5645,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5639,"src":"438:6:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"445:6:11","memberName":"length","nodeType":"MemberAccess","src":"438:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"32","id":5647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"455:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"438:18:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4174206c65617374203220746f6b656e73","id":5649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"458:19:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_121ad12696f26263306b4d7c149d3459b95d65f99a2328e9fc856d8b66c27d24","typeString":"literal_string \"At least 2 tokens\""},"value":"At least 2 tokens"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_121ad12696f26263306b4d7c149d3459b95d65f99a2328e9fc856d8b66c27d24","typeString":"literal_string \"At least 2 tokens\""}],"id":5644,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"430:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"430:48:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5651,"nodeType":"ExpressionStatement","src":"430:48:11"},{"expression":{"arguments":[{"arguments":[{"id":5654,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5639,"src":"507:6:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":5653,"name":"_allUnique","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6049,"src":"496:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_bool_$","typeString":"function (address[] memory) pure returns (bool)"}},"id":5655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"496:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4475706c696361746520746f6b656e73","id":5656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"516:18:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_468e0bfcb3e3ab0378a7d7aca9480e7f3c9394926fb120f85a78a58c132177eb","typeString":"literal_string \"Duplicate tokens\""},"value":"Duplicate tokens"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_468e0bfcb3e3ab0378a7d7aca9480e7f3c9394926fb120f85a78a58c132177eb","typeString":"literal_string \"Duplicate tokens\""}],"id":5652,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"488:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"488:47:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5658,"nodeType":"ExpressionStatement","src":"488:47:11"},{"expression":{"arguments":[{"arguments":[{"id":5661,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5639,"src":"568:6:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":5660,"name":"_noZeroAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5991,"src":"553:14:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_bool_$","typeString":"function (address[] memory) pure returns (bool)"}},"id":5662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"553:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5a65726f2061646472657373","id":5663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"577:14:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_535d7636857fb1ab3a4f159f2a66b9583ce224510b4368fa2453e15bee0bc833","typeString":"literal_string \"Zero address\""},"value":"Zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_535d7636857fb1ab3a4f159f2a66b9583ce224510b4368fa2453e15bee0bc833","typeString":"literal_string \"Zero address\""}],"id":5659,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"545:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"545:47:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5665,"nodeType":"ExpressionStatement","src":"545:47:11"},{"assignments":[5670],"declarations":[{"constant":false,"id":5670,"mutability":"mutable","name":"sortedTokens","nameLocation":"662:12:11","nodeType":"VariableDeclaration","scope":5723,"src":"645:29:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5668,"name":"address","nodeType":"ElementaryTypeName","src":"645:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5669,"nodeType":"ArrayTypeName","src":"645:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":5674,"initialValue":{"arguments":[{"id":5672,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5639,"src":"689:6:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":5671,"name":"_sortTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5843,"src":"677:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (address[] memory) pure returns (address[] memory)"}},"id":5673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"677:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"645:51:11"},{"assignments":[5676],"declarations":[{"constant":false,"id":5676,"mutability":"mutable","name":"poolKey","nameLocation":"756:7:11","nodeType":"VariableDeclaration","scope":5723,"src":"748:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5675,"name":"bytes32","nodeType":"ElementaryTypeName","src":"748:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5683,"initialValue":{"arguments":[{"arguments":[{"id":5680,"name":"sortedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5670,"src":"793:12:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"expression":{"id":5678,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"776:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5679,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"780:12:11","memberName":"encodePacked","nodeType":"MemberAccess","src":"776:16:11","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"776:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5677,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"766:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"766:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"748:59:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":5685,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5628,"src":"825:5:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"}},"id":5687,"indexExpression":{"id":5686,"name":"poolKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5676,"src":"831:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"825:14:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":5690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"851:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5689,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"843:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5688,"name":"address","nodeType":"ElementaryTypeName","src":"843:7:11","typeDescriptions":{}}},"id":5691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"843:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"825:28:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506f6f6c20657869737473","id":5693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"855:13:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_a2f9d2cfeb937d9b3b8558f267a2117f3a09bfb914d45ceb20dc160f7bb83506","typeString":"literal_string \"Pool exists\""},"value":"Pool exists"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a2f9d2cfeb937d9b3b8558f267a2117f3a09bfb914d45ceb20dc160f7bb83506","typeString":"literal_string \"Pool exists\""}],"id":5684,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"817:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"817:52:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5695,"nodeType":"ExpressionStatement","src":"817:52:11"},{"assignments":[5697],"declarations":[{"constant":false,"id":5697,"mutability":"mutable","name":"pool","nameLocation":"911:4:11","nodeType":"VariableDeclaration","scope":5723,"src":"903:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5696,"name":"address","nodeType":"ElementaryTypeName","src":"903:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":5706,"initialValue":{"arguments":[{"arguments":[{"id":5703,"name":"sortedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5670,"src":"935:12:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":5702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"NewExpression","src":"926:8:11","typeDescriptions":{"typeIdentifier":"t_function_creation_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_contract$_Pool_$6722_$","typeString":"function (address[] memory) returns (contract Pool)"},"typeName":{"id":5701,"nodeType":"UserDefinedTypeName","pathNode":{"id":5700,"name":"Pool","nameLocations":["930:4:11"],"nodeType":"IdentifierPath","referencedDeclaration":6722,"src":"930:4:11"},"referencedDeclaration":6722,"src":"930:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_Pool_$6722","typeString":"contract Pool"}}},"id":5704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"926:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_Pool_$6722","typeString":"contract Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Pool_$6722","typeString":"contract Pool"}],"id":5699,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"918:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5698,"name":"address","nodeType":"ElementaryTypeName","src":"918:7:11","typeDescriptions":{}}},"id":5705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"918:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"903:46:11"},{"expression":{"id":5711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5707,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5628,"src":"959:5:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"}},"id":5709,"indexExpression":{"id":5708,"name":"poolKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5676,"src":"965:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"959:14:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5710,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5697,"src":"976:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"959:21:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5712,"nodeType":"ExpressionStatement","src":"959:21:11"},{"expression":{"arguments":[{"id":5714,"name":"sortedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5670,"src":"1053:12:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":5713,"name":"_updateSupportedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5879,"src":"1030:22:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$returns$__$","typeString":"function (address[] memory)"}},"id":5715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1030:36:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5716,"nodeType":"ExpressionStatement","src":"1030:36:11"},{"eventCall":{"arguments":[{"id":5718,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5639,"src":"1094:6:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":5717,"name":"PoolCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5636,"src":"1082:11:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$returns$__$","typeString":"function (address[] memory)"}},"id":5719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1082:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5720,"nodeType":"EmitStatement","src":"1077:24:11"},{"expression":{"id":5721,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5697,"src":"1118:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":5643,"id":5722,"nodeType":"Return","src":"1111:11:11"}]},"functionSelector":"f0a87c9f","id":5724,"implemented":true,"kind":"function","modifiers":[],"name":"createPool","nameLocation":"357:10:11","nodeType":"FunctionDefinition","parameters":{"id":5640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5639,"mutability":"mutable","name":"tokens","nameLocation":"385:6:11","nodeType":"VariableDeclaration","scope":5724,"src":"368:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5637,"name":"address","nodeType":"ElementaryTypeName","src":"368:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5638,"nodeType":"ArrayTypeName","src":"368:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"367:25:11"},"returnParameters":{"id":5643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5642,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5724,"src":"411:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5641,"name":"address","nodeType":"ElementaryTypeName","src":"411:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"410:9:11"},"scope":6050,"src":"348:781:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5742,"nodeType":"Block","src":"1262:76:11","statements":[{"assignments":[5733],"declarations":[{"constant":false,"id":5733,"mutability":"mutable","name":"key","nameLocation":"1280:3:11","nodeType":"VariableDeclaration","scope":5742,"src":"1272:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5732,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1272:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5737,"initialValue":{"arguments":[{"id":5735,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5727,"src":"1297:6:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":5734,"name":"getPoolKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5761,"src":"1286:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_bytes32_$","typeString":"function (address[] memory) view returns (bytes32)"}},"id":5736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1286:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1272:32:11"},{"expression":{"baseExpression":{"id":5738,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5628,"src":"1321:5:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"}},"id":5740,"indexExpression":{"id":5739,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5733,"src":"1327:3:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1321:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":5731,"id":5741,"nodeType":"Return","src":"1314:17:11"}]},"functionSelector":"ec007105","id":5743,"implemented":true,"kind":"function","modifiers":[],"name":"getPool","nameLocation":"1197:7:11","nodeType":"FunctionDefinition","parameters":{"id":5728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5727,"mutability":"mutable","name":"tokens","nameLocation":"1222:6:11","nodeType":"VariableDeclaration","scope":5743,"src":"1205:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5725,"name":"address","nodeType":"ElementaryTypeName","src":"1205:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5726,"nodeType":"ArrayTypeName","src":"1205:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"1204:25:11"},"returnParameters":{"id":5731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5730,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5743,"src":"1253:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5729,"name":"address","nodeType":"ElementaryTypeName","src":"1253:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1252:9:11"},"scope":6050,"src":"1188:150:11","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":5760,"nodeType":"Block","src":"1457:72:11","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":5755,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5746,"src":"1513:6:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":5754,"name":"_sortTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5843,"src":"1501:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (address[] memory) pure returns (address[] memory)"}},"id":5756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1501:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"expression":{"id":5752,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1484:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5753,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1488:12:11","memberName":"encodePacked","nodeType":"MemberAccess","src":"1484:16:11","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1484:37:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5751,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1474:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1474:48:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":5750,"id":5759,"nodeType":"Return","src":"1467:55:11"}]},"functionSelector":"7ee5542a","id":5761,"implemented":true,"kind":"function","modifiers":[],"name":"getPoolKey","nameLocation":"1391:10:11","nodeType":"FunctionDefinition","parameters":{"id":5747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5746,"mutability":"mutable","name":"tokens","nameLocation":"1419:6:11","nodeType":"VariableDeclaration","scope":5761,"src":"1402:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5744,"name":"address","nodeType":"ElementaryTypeName","src":"1402:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5745,"nodeType":"ArrayTypeName","src":"1402:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"1401:25:11"},"returnParameters":{"id":5750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5749,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5761,"src":"1448:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5748,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1448:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1447:9:11"},"scope":6050,"src":"1382:147:11","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":5842,"nodeType":"Block","src":"1681:387:11","statements":[{"assignments":[5774],"declarations":[{"constant":false,"id":5774,"mutability":"mutable","name":"sorted","nameLocation":"1708:6:11","nodeType":"VariableDeclaration","scope":5842,"src":"1691:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5772,"name":"address","nodeType":"ElementaryTypeName","src":"1691:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5773,"nodeType":"ArrayTypeName","src":"1691:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":5778,"initialValue":{"arguments":[{"id":5776,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5764,"src":"1728:6:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":5775,"name":"_copyArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5924,"src":"1717:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (address[] memory) pure returns (address[] memory)"}},"id":5777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"1691:44:11"},{"body":{"id":5838,"nodeType":"Block","src":"1795:244:11","statements":[{"assignments":[5791],"declarations":[{"constant":false,"id":5791,"mutability":"mutable","name":"key","nameLocation":"1817:3:11","nodeType":"VariableDeclaration","scope":5838,"src":"1809:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5790,"name":"address","nodeType":"ElementaryTypeName","src":"1809:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":5795,"initialValue":{"baseExpression":{"id":5792,"name":"sorted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5774,"src":"1823:6:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5794,"indexExpression":{"id":5793,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5780,"src":"1830:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1823:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1809:23:11"},{"assignments":[5797],"declarations":[{"constant":false,"id":5797,"mutability":"mutable","name":"j","nameLocation":"1851:1:11","nodeType":"VariableDeclaration","scope":5838,"src":"1846:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5796,"name":"uint","nodeType":"ElementaryTypeName","src":"1846:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5799,"initialValue":{"id":5798,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5780,"src":"1855:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1846:10:11"},{"body":{"id":5830,"nodeType":"Block","src":"1923:77:11","statements":[{"expression":{"id":5825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5817,"name":"sorted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5774,"src":"1941:6:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5819,"indexExpression":{"id":5818,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5797,"src":"1948:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1941:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":5820,"name":"sorted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5774,"src":"1953:6:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5824,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5821,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5797,"src":"1960:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1962:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1960:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1953:11:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1941:23:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5826,"nodeType":"ExpressionStatement","src":"1941:23:11"},{"expression":{"id":5828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1982:3:11","subExpression":{"id":5827,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5797,"src":"1982:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5829,"nodeType":"ExpressionStatement","src":"1982:3:11"}]},"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5800,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5797,"src":"1877:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1881:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1877:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint160","typeString":"uint160"},"id":5815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":5805,"name":"sorted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5774,"src":"1894:6:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5809,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5806,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5797,"src":"1901:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1903:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1901:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1894:11:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5804,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1886:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5803,"name":"uint160","nodeType":"ElementaryTypeName","src":"1886:7:11","typeDescriptions":{}}},"id":5810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1886:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"id":5813,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5791,"src":"1917:3:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5812,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1909:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5811,"name":"uint160","nodeType":"ElementaryTypeName","src":"1909:7:11","typeDescriptions":{}}},"id":5814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1909:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"1886:35:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1877:44:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5831,"nodeType":"WhileStatement","src":"1870:130:11"},{"expression":{"id":5836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5832,"name":"sorted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5774,"src":"2013:6:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5834,"indexExpression":{"id":5833,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5797,"src":"2020:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2013:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5835,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5791,"src":"2025:3:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2013:15:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5837,"nodeType":"ExpressionStatement","src":"2013:15:11"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5783,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5780,"src":"1771:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5784,"name":"sorted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5774,"src":"1775:6:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1782:6:11","memberName":"length","nodeType":"MemberAccess","src":"1775:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1771:17:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5839,"initializationExpression":{"assignments":[5780],"declarations":[{"constant":false,"id":5780,"mutability":"mutable","name":"i","nameLocation":"1764:1:11","nodeType":"VariableDeclaration","scope":5839,"src":"1759:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5779,"name":"uint","nodeType":"ElementaryTypeName","src":"1759:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5782,"initialValue":{"hexValue":"31","id":5781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1768:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"1759:10:11"},"loopExpression":{"expression":{"id":5788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1790:3:11","subExpression":{"id":5787,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5780,"src":"1790:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5789,"nodeType":"ExpressionStatement","src":"1790:3:11"},"nodeType":"ForStatement","src":"1754:285:11"},{"expression":{"id":5840,"name":"sorted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5774,"src":"2055:6:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":5769,"id":5841,"nodeType":"Return","src":"2048:13:11"}]},"id":5843,"implemented":true,"kind":"function","modifiers":[],"name":"_sortTokens","nameLocation":"1603:11:11","nodeType":"FunctionDefinition","parameters":{"id":5765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5764,"mutability":"mutable","name":"tokens","nameLocation":"1632:6:11","nodeType":"VariableDeclaration","scope":5843,"src":"1615:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5762,"name":"address","nodeType":"ElementaryTypeName","src":"1615:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5763,"nodeType":"ArrayTypeName","src":"1615:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"1614:25:11"},"returnParameters":{"id":5769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5768,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5843,"src":"1663:16:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5766,"name":"address","nodeType":"ElementaryTypeName","src":"1663:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5767,"nodeType":"ArrayTypeName","src":"1663:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"1662:18:11"},"scope":6050,"src":"1594:474:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5878,"nodeType":"Block","src":"2193:189:11","statements":[{"body":{"id":5876,"nodeType":"Block","src":"2247:129:11","statements":[{"condition":{"id":5865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2265:32:11","subExpression":{"arguments":[{"baseExpression":{"id":5861,"name":"newTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5846,"src":"2284:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5863,"indexExpression":{"id":5862,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5850,"src":"2294:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2284:12:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5860,"name":"_isTokenSupported","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5956,"src":"2266:17:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":5864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5875,"nodeType":"IfStatement","src":"2261:105:11","trueBody":{"id":5874,"nodeType":"Block","src":"2299:67:11","statements":[{"expression":{"arguments":[{"baseExpression":{"id":5869,"name":"newTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5846,"src":"2338:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5871,"indexExpression":{"id":5870,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5850,"src":"2348:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2338:12:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":5866,"name":"supportedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5631,"src":"2317:15:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":5868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2333:4:11","memberName":"push","nodeType":"MemberAccess","src":"2317:20:11","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":5872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2317:34:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5873,"nodeType":"ExpressionStatement","src":"2317:34:11"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5853,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5850,"src":"2220:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5854,"name":"newTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5846,"src":"2224:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2234:6:11","memberName":"length","nodeType":"MemberAccess","src":"2224:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2220:20:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5877,"initializationExpression":{"assignments":[5850],"declarations":[{"constant":false,"id":5850,"mutability":"mutable","name":"i","nameLocation":"2213:1:11","nodeType":"VariableDeclaration","scope":5877,"src":"2208:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5849,"name":"uint","nodeType":"ElementaryTypeName","src":"2208:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5852,"initialValue":{"hexValue":"30","id":5851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2217:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2208:10:11"},"loopExpression":{"expression":{"id":5858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2242:3:11","subExpression":{"id":5857,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5850,"src":"2242:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5859,"nodeType":"ExpressionStatement","src":"2242:3:11"},"nodeType":"ForStatement","src":"2203:173:11"}]},"id":5879,"implemented":true,"kind":"function","modifiers":[],"name":"_updateSupportedTokens","nameLocation":"2133:22:11","nodeType":"FunctionDefinition","parameters":{"id":5847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5846,"mutability":"mutable","name":"newTokens","nameLocation":"2173:9:11","nodeType":"VariableDeclaration","scope":5879,"src":"2156:26:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5844,"name":"address","nodeType":"ElementaryTypeName","src":"2156:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5845,"nodeType":"ArrayTypeName","src":"2156:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"2155:28:11"},"returnParameters":{"id":5848,"nodeType":"ParameterList","parameters":[],"src":"2193:0:11"},"scope":6050,"src":"2124:258:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5923,"nodeType":"Block","src":"2506:175:11","statements":[{"assignments":[5892],"declarations":[{"constant":false,"id":5892,"mutability":"mutable","name":"copy","nameLocation":"2533:4:11","nodeType":"VariableDeclaration","scope":5923,"src":"2516:21:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5890,"name":"address","nodeType":"ElementaryTypeName","src":"2516:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5891,"nodeType":"ArrayTypeName","src":"2516:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":5899,"initialValue":{"arguments":[{"expression":{"id":5896,"name":"arr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5882,"src":"2554:3:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2558:6:11","memberName":"length","nodeType":"MemberAccess","src":"2554:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5895,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2540:13:11","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":5893,"name":"address","nodeType":"ElementaryTypeName","src":"2544:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5894,"nodeType":"ArrayTypeName","src":"2544:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":5898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2540:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"2516:49:11"},{"body":{"id":5919,"nodeType":"Block","src":"2613:41:11","statements":[{"expression":{"id":5917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5911,"name":"copy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5892,"src":"2627:4:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5913,"indexExpression":{"id":5912,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5901,"src":"2632:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2627:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":5914,"name":"arr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5882,"src":"2637:3:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5916,"indexExpression":{"id":5915,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5901,"src":"2641:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2637:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:16:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5918,"nodeType":"ExpressionStatement","src":"2627:16:11"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5904,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5901,"src":"2592:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5905,"name":"arr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5882,"src":"2596:3:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2600:6:11","memberName":"length","nodeType":"MemberAccess","src":"2596:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2592:14:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5920,"initializationExpression":{"assignments":[5901],"declarations":[{"constant":false,"id":5901,"mutability":"mutable","name":"i","nameLocation":"2585:1:11","nodeType":"VariableDeclaration","scope":5920,"src":"2580:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5900,"name":"uint","nodeType":"ElementaryTypeName","src":"2580:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5903,"initialValue":{"hexValue":"30","id":5902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2589:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2580:10:11"},"loopExpression":{"expression":{"id":5909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2608:3:11","subExpression":{"id":5908,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5901,"src":"2608:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5910,"nodeType":"ExpressionStatement","src":"2608:3:11"},"nodeType":"ForStatement","src":"2575:79:11"},{"expression":{"id":5921,"name":"copy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5892,"src":"2670:4:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":5887,"id":5922,"nodeType":"Return","src":"2663:11:11"}]},"id":5924,"implemented":true,"kind":"function","modifiers":[],"name":"_copyArray","nameLocation":"2432:10:11","nodeType":"FunctionDefinition","parameters":{"id":5883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5882,"mutability":"mutable","name":"arr","nameLocation":"2460:3:11","nodeType":"VariableDeclaration","scope":5924,"src":"2443:20:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5880,"name":"address","nodeType":"ElementaryTypeName","src":"2443:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5881,"nodeType":"ArrayTypeName","src":"2443:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"2442:22:11"},"returnParameters":{"id":5887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5886,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5924,"src":"2488:16:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5884,"name":"address","nodeType":"ElementaryTypeName","src":"2488:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5885,"nodeType":"ArrayTypeName","src":"2488:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"2487:18:11"},"scope":6050,"src":"2423:258:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5955,"nodeType":"Block","src":"2793:189:11","statements":[{"body":{"id":5951,"nodeType":"Block","src":"2853:101:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":5942,"name":"supportedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5631,"src":"2871:15:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":5944,"indexExpression":{"id":5943,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5932,"src":"2887:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2871:18:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5945,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5926,"src":"2893:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2871:27:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5950,"nodeType":"IfStatement","src":"2867:77:11","trueBody":{"id":5949,"nodeType":"Block","src":"2900:44:11","statements":[{"expression":{"hexValue":"74727565","id":5947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2925:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":5930,"id":5948,"nodeType":"Return","src":"2918:11:11"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5935,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5932,"src":"2820:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5936,"name":"supportedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5631,"src":"2824:15:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":5937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2840:6:11","memberName":"length","nodeType":"MemberAccess","src":"2824:22:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2820:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5952,"initializationExpression":{"assignments":[5932],"declarations":[{"constant":false,"id":5932,"mutability":"mutable","name":"i","nameLocation":"2813:1:11","nodeType":"VariableDeclaration","scope":5952,"src":"2808:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5931,"name":"uint","nodeType":"ElementaryTypeName","src":"2808:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5934,"initialValue":{"hexValue":"30","id":5933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2817:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2808:10:11"},"loopExpression":{"expression":{"id":5940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2848:3:11","subExpression":{"id":5939,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5932,"src":"2848:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5941,"nodeType":"ExpressionStatement","src":"2848:3:11"},"nodeType":"ForStatement","src":"2803:151:11"},{"expression":{"hexValue":"66616c7365","id":5953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2970:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":5930,"id":5954,"nodeType":"Return","src":"2963:12:11"}]},"id":5956,"implemented":true,"kind":"function","modifiers":[],"name":"_isTokenSupported","nameLocation":"2731:17:11","nodeType":"FunctionDefinition","parameters":{"id":5927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5926,"mutability":"mutable","name":"token","nameLocation":"2757:5:11","nodeType":"VariableDeclaration","scope":5956,"src":"2749:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5925,"name":"address","nodeType":"ElementaryTypeName","src":"2749:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2748:15:11"},"returnParameters":{"id":5930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5929,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5956,"src":"2787:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5928,"name":"bool","nodeType":"ElementaryTypeName","src":"2787:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2786:6:11"},"scope":6050,"src":"2722:260:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5990,"nodeType":"Block","src":"3131:144:11","statements":[{"body":{"id":5986,"nodeType":"Block","src":"3182:66:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":5975,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5959,"src":"3200:6:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5977,"indexExpression":{"id":5976,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5965,"src":"3207:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3200:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":5980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3221:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5979,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3213:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5978,"name":"address","nodeType":"ElementaryTypeName","src":"3213:7:11","typeDescriptions":{}}},"id":5981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3213:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3200:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5985,"nodeType":"IfStatement","src":"3196:41:11","trueBody":{"expression":{"hexValue":"66616c7365","id":5983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3232:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":5963,"id":5984,"nodeType":"Return","src":"3225:12:11"}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5968,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5965,"src":"3158:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5969,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5959,"src":"3162:6:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3169:6:11","memberName":"length","nodeType":"MemberAccess","src":"3162:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3158:17:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5987,"initializationExpression":{"assignments":[5965],"declarations":[{"constant":false,"id":5965,"mutability":"mutable","name":"i","nameLocation":"3151:1:11","nodeType":"VariableDeclaration","scope":5987,"src":"3146:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5964,"name":"uint","nodeType":"ElementaryTypeName","src":"3146:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5967,"initialValue":{"hexValue":"30","id":5966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3155:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3146:10:11"},"loopExpression":{"expression":{"id":5973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3177:3:11","subExpression":{"id":5972,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5965,"src":"3177:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5974,"nodeType":"ExpressionStatement","src":"3177:3:11"},"nodeType":"ForStatement","src":"3141:107:11"},{"expression":{"hexValue":"74727565","id":5988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3264:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":5963,"id":5989,"nodeType":"Return","src":"3257:11:11"}]},"id":5991,"implemented":true,"kind":"function","modifiers":[],"name":"_noZeroAddress","nameLocation":"3062:14:11","nodeType":"FunctionDefinition","parameters":{"id":5960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5959,"mutability":"mutable","name":"tokens","nameLocation":"3094:6:11","nodeType":"VariableDeclaration","scope":5991,"src":"3077:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5957,"name":"address","nodeType":"ElementaryTypeName","src":"3077:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5958,"nodeType":"ArrayTypeName","src":"3077:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3076:25:11"},"returnParameters":{"id":5963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5962,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5991,"src":"3125:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5961,"name":"bool","nodeType":"ElementaryTypeName","src":"3125:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3124:6:11"},"scope":6050,"src":"3053:222:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6048,"nodeType":"Block","src":"3411:269:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5999,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5994,"src":"3425:6:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":6000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3432:6:11","memberName":"length","nodeType":"MemberAccess","src":"3425:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":6001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3442:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3425:18:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6005,"nodeType":"IfStatement","src":"3421:35:11","trueBody":{"expression":{"hexValue":"74727565","id":6003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3452:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":5998,"id":6004,"nodeType":"Return","src":"3445:11:11"}},{"body":{"id":6044,"nodeType":"Block","src":"3511:142:11","statements":[{"body":{"id":6042,"nodeType":"Block","src":"3570:73:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":6032,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5994,"src":"3592:6:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":6034,"indexExpression":{"id":6033,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6007,"src":"3599:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3592:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"baseExpression":{"id":6035,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5994,"src":"3605:6:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":6037,"indexExpression":{"id":6036,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6020,"src":"3612:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3605:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3592:22:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6041,"nodeType":"IfStatement","src":"3588:40:11","trueBody":{"expression":{"hexValue":"66616c7365","id":6039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3623:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":5998,"id":6040,"nodeType":"Return","src":"3616:12:11"}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6025,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6020,"src":"3546:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":6026,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5994,"src":"3550:6:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":6027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3557:6:11","memberName":"length","nodeType":"MemberAccess","src":"3550:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3546:17:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6043,"initializationExpression":{"assignments":[6020],"declarations":[{"constant":false,"id":6020,"mutability":"mutable","name":"j","nameLocation":"3535:1:11","nodeType":"VariableDeclaration","scope":6043,"src":"3530:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6019,"name":"uint","nodeType":"ElementaryTypeName","src":"3530:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6024,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6021,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6007,"src":"3539:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":6022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3543:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3539:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3530:14:11"},"loopExpression":{"expression":{"id":6030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3565:3:11","subExpression":{"id":6029,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6020,"src":"3565:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6031,"nodeType":"ExpressionStatement","src":"3565:3:11"},"nodeType":"ForStatement","src":"3525:118:11"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6010,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6007,"src":"3483:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6011,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5994,"src":"3487:6:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":6012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3494:6:11","memberName":"length","nodeType":"MemberAccess","src":"3487:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3503:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3487:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3483:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6045,"initializationExpression":{"assignments":[6007],"declarations":[{"constant":false,"id":6007,"mutability":"mutable","name":"i","nameLocation":"3476:1:11","nodeType":"VariableDeclaration","scope":6045,"src":"3471:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6006,"name":"uint","nodeType":"ElementaryTypeName","src":"3471:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6009,"initialValue":{"hexValue":"30","id":6008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3480:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3471:10:11"},"loopExpression":{"expression":{"id":6017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3506:3:11","subExpression":{"id":6016,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6007,"src":"3506:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6018,"nodeType":"ExpressionStatement","src":"3506:3:11"},"nodeType":"ForStatement","src":"3466:187:11"},{"expression":{"hexValue":"74727565","id":6046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3669:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":5998,"id":6047,"nodeType":"Return","src":"3662:11:11"}]},"id":6049,"implemented":true,"kind":"function","modifiers":[],"name":"_allUnique","nameLocation":"3346:10:11","nodeType":"FunctionDefinition","parameters":{"id":5995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5994,"mutability":"mutable","name":"tokens","nameLocation":"3374:6:11","nodeType":"VariableDeclaration","scope":6049,"src":"3357:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5992,"name":"address","nodeType":"ElementaryTypeName","src":"3357:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5993,"nodeType":"ArrayTypeName","src":"3357:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3356:25:11"},"returnParameters":{"id":5998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5997,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6049,"src":"3405:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5996,"name":"bool","nodeType":"ElementaryTypeName","src":"3405:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3404:6:11"},"scope":6050,"src":"3337:343:11","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6051,"src":"80:3602:11","usedErrors":[],"usedEvents":[5636]}],"src":"32:3650:11"},"id":11},"contracts/LPToken.sol":{"ast":{"absolutePath":"contracts/LPToken.sol","exportedSymbols":{"Context":[785],"ERC20":[651],"IERC20":[729],"IERC20Errors":[41],"IERC20Metadata":[755],"LPToken":[6068]},"id":6069,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6052,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"250:24:12"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":6053,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6069,"sourceUnit":652,"src":"278:55:12","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":6054,"name":"ERC20","nameLocations":["357:5:12"],"nodeType":"IdentifierPath","referencedDeclaration":651,"src":"357:5:12"},"id":6055,"nodeType":"InheritanceSpecifier","src":"357:5:12"}],"canonicalName":"LPToken","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":6068,"linearizedBaseContracts":[6068,651,41,755,729,785],"name":"LPToken","nameLocation":"346:7:12","nodeType":"ContractDefinition","nodes":[{"body":{"id":6066,"nodeType":"Block","src":"444:2:12","statements":[]},"id":6067,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":6062,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6057,"src":"430:4:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":6063,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6059,"src":"436:6:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":6064,"kind":"baseConstructorSpecifier","modifierName":{"id":6061,"name":"ERC20","nameLocations":["424:5:12"],"nodeType":"IdentifierPath","referencedDeclaration":651,"src":"424:5:12"},"nodeType":"ModifierInvocation","src":"424:19:12"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":6060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6057,"mutability":"mutable","name":"name","nameLocation":"396:4:12","nodeType":"VariableDeclaration","scope":6067,"src":"382:18:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6056,"name":"string","nodeType":"ElementaryTypeName","src":"382:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6059,"mutability":"mutable","name":"symbol","nameLocation":"416:6:12","nodeType":"VariableDeclaration","scope":6067,"src":"402:20:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6058,"name":"string","nodeType":"ElementaryTypeName","src":"402:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"381:42:12"},"returnParameters":{"id":6065,"nodeType":"ParameterList","parameters":[],"src":"444:0:12"},"scope":6068,"src":"370:76:12","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":6069,"src":"337:169:12","usedErrors":[11,16,21,30,35,40],"usedEvents":[663,672]}],"src":"250:256:12"},"id":12},"contracts/NewToken.sol":{"ast":{"absolutePath":"contracts/NewToken.sol","exportedSymbols":{"Context":[785],"ERC20":[651],"IERC20":[729],"IERC20Errors":[41],"IERC20Metadata":[755],"NewToken":[6097]},"id":6098,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6070,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"183:24:13"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":6071,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6098,"sourceUnit":652,"src":"211:55:13","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":6072,"name":"ERC20","nameLocations":["291:5:13"],"nodeType":"IdentifierPath","referencedDeclaration":651,"src":"291:5:13"},"id":6073,"nodeType":"InheritanceSpecifier","src":"291:5:13"}],"canonicalName":"NewToken","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":6097,"linearizedBaseContracts":[6097,651,41,755,729,785],"name":"NewToken","nameLocation":"279:8:13","nodeType":"ContractDefinition","nodes":[{"body":{"id":6095,"nodeType":"Block","src":"380:265:13","statements":[{"expression":{"arguments":[{"expression":{"id":6085,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"397:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"401:6:13","memberName":"sender","nodeType":"MemberAccess","src":"397:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31303030303030","id":6087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"409:7:13","typeDescriptions":{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"},"value":"1000000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"419:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":6089,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":215,"src":"423:8:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint8_$","typeString":"function () view returns (uint8)"}},"id":6090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"423:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"419:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"409:24:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6084,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":491,"src":"391:5:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":6093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"391:43:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6094,"nodeType":"ExpressionStatement","src":"391:43:13"}]},"id":6096,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":6080,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6075,"src":"366:4:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":6081,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6077,"src":"372:6:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":6082,"kind":"baseConstructorSpecifier","modifierName":{"id":6079,"name":"ERC20","nameLocations":["360:5:13"],"nodeType":"IdentifierPath","referencedDeclaration":651,"src":"360:5:13"},"nodeType":"ModifierInvocation","src":"360:19:13"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":6078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6075,"mutability":"mutable","name":"name","nameLocation":"332:4:13","nodeType":"VariableDeclaration","scope":6096,"src":"318:18:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6074,"name":"string","nodeType":"ElementaryTypeName","src":"318:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6077,"mutability":"mutable","name":"symbol","nameLocation":"352:6:13","nodeType":"VariableDeclaration","scope":6096,"src":"338:20:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6076,"name":"string","nodeType":"ElementaryTypeName","src":"338:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"317:42:13"},"returnParameters":{"id":6083,"nodeType":"ParameterList","parameters":[],"src":"380:0:13"},"scope":6097,"src":"306:339:13","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":6098,"src":"270:384:13","usedErrors":[11,16,21,30,35,40],"usedEvents":[663,672]}],"src":"183:471:13"},"id":13},"contracts/Pool.sol":{"ast":{"absolutePath":"contracts/Pool.sol","exportedSymbols":{"Context":[785],"ERC20":[651],"IERC20":[729],"IERC20Errors":[41],"IERC20Metadata":[755],"LPToken":[6068],"Math":[3712],"Pool":[6722],"ReentrancyGuard":[906],"SafeCast":[5477],"SignedMath":[5621],"Strings":[2106]},"id":6723,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6099,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"236:24:14"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":6100,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6723,"sourceUnit":730,"src":"264:56:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":6101,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6723,"sourceUnit":907,"src":"322:59:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/LPToken.sol","file":"./LPToken.sol","id":6102,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6723,"sourceUnit":6069,"src":"383:23:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"@openzeppelin/contracts/utils/Strings.sol","id":6103,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6723,"sourceUnit":2107,"src":"408:51:14","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":6104,"name":"LPToken","nameLocations":["480:7:14"],"nodeType":"IdentifierPath","referencedDeclaration":6068,"src":"480:7:14"},"id":6105,"nodeType":"InheritanceSpecifier","src":"480:7:14"},{"baseName":{"id":6106,"name":"ReentrancyGuard","nameLocations":["489:15:14"],"nodeType":"IdentifierPath","referencedDeclaration":906,"src":"489:15:14"},"id":6107,"nodeType":"InheritanceSpecifier","src":"489:15:14"}],"canonicalName":"Pool","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":6722,"linearizedBaseContracts":[6722,906,6068,651,41,755,729,785],"name":"Pool","nameLocation":"472:4:14","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"345f5557","id":6111,"mutability":"mutable","name":"i_tokens","nameLocation":"552:8:14","nodeType":"VariableDeclaration","scope":6722,"src":"535:25:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$729_$dyn_storage","typeString":"contract IERC20[]"},"typeName":{"baseType":{"id":6109,"nodeType":"UserDefinedTypeName","pathNode":{"id":6108,"name":"IERC20","nameLocations":["535:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":729,"src":"535:6:14"},"referencedDeclaration":729,"src":"535:6:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}},"id":6110,"nodeType":"ArrayTypeName","src":"535:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$729_$dyn_storage_ptr","typeString":"contract IERC20[]"}},"visibility":"public"},{"constant":false,"functionSelector":"eaa91a3d","id":6114,"mutability":"mutable","name":"i_tokens_addresses","nameLocation":"606:18:14","nodeType":"VariableDeclaration","scope":6722,"src":"588:36:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[]"},"typeName":{"baseType":{"id":6112,"name":"address","nodeType":"ElementaryTypeName","src":"588:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6113,"nodeType":"ArrayTypeName","src":"588:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"public"},{"constant":false,"functionSelector":"d5b271f5","id":6118,"mutability":"mutable","name":"i_tokens_map","nameLocation":"724:12:14","nodeType":"VariableDeclaration","scope":6722,"src":"689:47:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":6117,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6115,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"689:27:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6116,"name":"uint256","nodeType":"ElementaryTypeName","src":"708:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"c45a0155","id":6120,"mutability":"mutable","name":"factory","nameLocation":"806:7:14","nodeType":"VariableDeclaration","scope":6722,"src":"790:23:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6119,"name":"address","nodeType":"ElementaryTypeName","src":"790:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"cbd01fa4","id":6127,"mutability":"mutable","name":"INITIAL_RATIO","nameLocation":"1140:13:14","nodeType":"VariableDeclaration","scope":6722,"src":"1122:42:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[]"},"typeName":{"baseType":{"id":6121,"name":"uint256","nodeType":"ElementaryTypeName","src":"1122:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6122,"nodeType":"ArrayTypeName","src":"1122:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":{"components":[{"hexValue":"31","id":6123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1157:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},{"hexValue":"32","id":6124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1160:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},{"hexValue":"33","id":6125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1162:1:14","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"}],"id":6126,"isConstant":false,"isInlineArray":true,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1156:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$3_memory_ptr","typeString":"uint8[3] memory"}},"visibility":"public"},{"constant":false,"functionSelector":"523fba7f","id":6131,"mutability":"mutable","name":"tokenBalances","nameLocation":"1333:13:14","nodeType":"VariableDeclaration","scope":6722,"src":"1298:48:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":6130,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6128,"name":"address","nodeType":"ElementaryTypeName","src":"1306:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1298:27:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6129,"name":"uint256","nodeType":"ElementaryTypeName","src":"1317:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"anonymous":false,"eventSelector":"b1b40d6e24db4f4144d860844c12ef0cee735402334d5e8682124a4c03bce4c7","id":6139,"name":"AddedLiquidity","nameLocation":"1438:14:14","nodeType":"EventDefinition","parameters":{"id":6138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6134,"indexed":false,"mutability":"mutable","name":"token_add","nameLocation":"1473:9:14","nodeType":"VariableDeclaration","scope":6139,"src":"1463:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":6132,"name":"address","nodeType":"ElementaryTypeName","src":"1463:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6133,"nodeType":"ArrayTypeName","src":"1463:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":6137,"indexed":false,"mutability":"mutable","name":"amounts","nameLocation":"1503:7:14","nodeType":"VariableDeclaration","scope":6139,"src":"1493:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6135,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6136,"nodeType":"ArrayTypeName","src":"1493:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1452:65:14"},"src":"1432:86:14"},{"anonymous":false,"eventSelector":"7f63fc1ab7d4b22633cca91cd87319f6e7b3229ace7baa90f114b15f33e847ae","id":6147,"name":"WithdrawLiquidity","nameLocation":"1532:17:14","nodeType":"EventDefinition","parameters":{"id":6146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6142,"indexed":false,"mutability":"mutable","name":"token_add","nameLocation":"1570:9:14","nodeType":"VariableDeclaration","scope":6147,"src":"1560:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":6140,"name":"address","nodeType":"ElementaryTypeName","src":"1560:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6141,"nodeType":"ArrayTypeName","src":"1560:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":6145,"indexed":false,"mutability":"mutable","name":"amounts","nameLocation":"1600:7:14","nodeType":"VariableDeclaration","scope":6147,"src":"1590:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6143,"name":"uint256","nodeType":"ElementaryTypeName","src":"1590:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6144,"nodeType":"ArrayTypeName","src":"1590:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1549:65:14"},"src":"1526:89:14"},{"anonymous":false,"eventSelector":"db587d878116df0bdd4fe154699aa2c5f439da001cc811dfd05d9f589fc5a8ee","id":6157,"name":"Swapped","nameLocation":"1629:7:14","nodeType":"EventDefinition","parameters":{"id":6156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6149,"indexed":false,"mutability":"mutable","name":"tokenIn","nameLocation":"1655:7:14","nodeType":"VariableDeclaration","scope":6157,"src":"1647:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6148,"name":"address","nodeType":"ElementaryTypeName","src":"1647:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6151,"indexed":true,"mutability":"mutable","name":"amountIn","nameLocation":"1689:8:14","nodeType":"VariableDeclaration","scope":6157,"src":"1673:24:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6150,"name":"uint256","nodeType":"ElementaryTypeName","src":"1673:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6153,"indexed":false,"mutability":"mutable","name":"tokenOut","nameLocation":"1716:8:14","nodeType":"VariableDeclaration","scope":6157,"src":"1708:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6152,"name":"address","nodeType":"ElementaryTypeName","src":"1708:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6155,"indexed":true,"mutability":"mutable","name":"amountOut","nameLocation":"1751:9:14","nodeType":"VariableDeclaration","scope":6157,"src":"1735:25:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6154,"name":"uint256","nodeType":"ElementaryTypeName","src":"1735:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1636:131:14"},"src":"1623:145:14"},{"body":{"id":6240,"nodeType":"Block","src":"2023:583:14","statements":[{"expression":{"id":6170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6167,"name":"factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6120,"src":"2034:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":6168,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2044:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2048:6:14","memberName":"sender","nodeType":"MemberAccess","src":"2044:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2034:20:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6171,"nodeType":"ExpressionStatement","src":"2034:20:14"},{"assignments":[6173],"declarations":[{"constant":false,"id":6173,"mutability":"mutable","name":"length","nameLocation":"2116:6:14","nodeType":"VariableDeclaration","scope":6240,"src":"2108:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6172,"name":"uint256","nodeType":"ElementaryTypeName","src":"2108:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6176,"initialValue":{"expression":{"id":6174,"name":"tokens_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6160,"src":"2125:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":6175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2136:6:14","memberName":"length","nodeType":"MemberAccess","src":"2125:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2108:34:14"},{"expression":{"id":6184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6177,"name":"i_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6111,"src":"2153:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$729_$dyn_storage","typeString":"contract IERC20[] storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6182,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6173,"src":"2177:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6181,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2164:12:14","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_contract$_IERC20_$729_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (contract IERC20[] memory)"},"typeName":{"baseType":{"id":6179,"nodeType":"UserDefinedTypeName","pathNode":{"id":6178,"name":"IERC20","nameLocations":["2168:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":729,"src":"2168:6:14"},"referencedDeclaration":729,"src":"2168:6:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}},"id":6180,"nodeType":"ArrayTypeName","src":"2168:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$729_$dyn_storage_ptr","typeString":"contract IERC20[]"}}},"id":6183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2164:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$729_$dyn_memory_ptr","typeString":"contract IERC20[] memory"}},"src":"2153:31:14","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$729_$dyn_storage","typeString":"contract IERC20[] storage ref"}},"id":6185,"nodeType":"ExpressionStatement","src":"2153:31:14"},{"expression":{"id":6192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6186,"name":"i_tokens_addresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6114,"src":"2195:18:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6190,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6173,"src":"2230:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6189,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2216:13:14","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":6187,"name":"address","nodeType":"ElementaryTypeName","src":"2220:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6188,"nodeType":"ArrayTypeName","src":"2220:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":6191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2216:21:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"src":"2195:42:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":6193,"nodeType":"ExpressionStatement","src":"2195:42:14"},{"body":{"id":6238,"nodeType":"Block","src":"2287:312:14","statements":[{"assignments":[6205],"declarations":[{"constant":false,"id":6205,"mutability":"mutable","name":"token_add","nameLocation":"2324:9:14","nodeType":"VariableDeclaration","scope":6238,"src":"2316:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6204,"name":"address","nodeType":"ElementaryTypeName","src":"2316:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":6209,"initialValue":{"baseExpression":{"id":6206,"name":"tokens_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6160,"src":"2336:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":6208,"indexExpression":{"id":6207,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6195,"src":"2347:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2336:13:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2316:33:14"},{"expression":{"id":6217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6210,"name":"i_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6111,"src":"2419:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$729_$dyn_storage","typeString":"contract IERC20[] storage ref"}},"id":6212,"indexExpression":{"id":6211,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6195,"src":"2428:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2419:11:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"arguments":[{"id":6214,"name":"token_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6205,"src":"2441:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6213,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"2434:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$729_$","typeString":"type(contract IERC20)"}},"id":6215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2434:17:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}}],"id":6216,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2433:19:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}},"src":"2419:33:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}},"id":6218,"nodeType":"ExpressionStatement","src":"2419:33:14"},{"expression":{"id":6224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6219,"name":"i_tokens_addresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6114,"src":"2467:18:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":6221,"indexExpression":{"id":6220,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6195,"src":"2486:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2467:21:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":6222,"name":"token_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6205,"src":"2492:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":6223,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2491:11:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2467:35:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6225,"nodeType":"ExpressionStatement","src":"2467:35:14"},{"expression":{"id":6230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6226,"name":"i_tokens_map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6118,"src":"2517:12:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6228,"indexExpression":{"id":6227,"name":"token_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6205,"src":"2530:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2517:23:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6229,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6195,"src":"2543:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2517:27:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6231,"nodeType":"ExpressionStatement","src":"2517:27:14"},{"expression":{"id":6236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6232,"name":"tokenBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6131,"src":"2559:13:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6234,"indexExpression":{"id":6233,"name":"token_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6205,"src":"2573:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2559:24:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":6235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2586:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2559:28:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6237,"nodeType":"ExpressionStatement","src":"2559:28:14"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6198,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6195,"src":"2270:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6199,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6173,"src":"2274:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2270:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6239,"initializationExpression":{"assignments":[6195],"declarations":[{"constant":false,"id":6195,"mutability":"mutable","name":"i","nameLocation":"2263:1:14","nodeType":"VariableDeclaration","scope":6239,"src":"2255:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6194,"name":"uint256","nodeType":"ElementaryTypeName","src":"2255:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6197,"initialValue":{"hexValue":"30","id":6196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2267:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2255:13:14"},"loopExpression":{"expression":{"id":6202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2282:3:14","subExpression":{"id":6201,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6195,"src":"2282:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6203,"nodeType":"ExpressionStatement","src":"2282:3:14"},"nodeType":"ForStatement","src":"2250:349:14"}]},"id":6241,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"4c50546f6b656e","id":6163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2005:9:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_91896885eb10c3c73de18aef4dd028882060740275c7a0f7d08a98d2ad73965d","typeString":"literal_string \"LPToken\""},"value":"LPToken"},{"hexValue":"4c5054","id":6164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2016:5:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_32e82afd8218e1d9053bf5b198b85ca1af3dff4739f28e3618abcbfacb818cfa","typeString":"literal_string \"LPT\""},"value":"LPT"}],"id":6165,"kind":"baseConstructorSpecifier","modifierName":{"id":6162,"name":"LPToken","nameLocations":["1997:7:14"],"nodeType":"IdentifierPath","referencedDeclaration":6068,"src":"1997:7:14"},"nodeType":"ModifierInvocation","src":"1997:25:14"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":6161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6160,"mutability":"mutable","name":"tokens_add","nameLocation":"1985:10:14","nodeType":"VariableDeclaration","scope":6241,"src":"1968:27:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":6158,"name":"address","nodeType":"ElementaryTypeName","src":"1968:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6159,"nodeType":"ArrayTypeName","src":"1968:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"1967:29:14"},"returnParameters":{"id":6166,"nodeType":"ParameterList","parameters":[],"src":"2023:0:14"},"scope":6722,"src":"1956:650:14","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6278,"nodeType":"Block","src":"2904:477:14","statements":[{"assignments":[6253],"declarations":[{"constant":false,"id":6253,"mutability":"mutable","name":"balanceOut","nameLocation":"2923:10:14","nodeType":"VariableDeclaration","scope":6278,"src":"2915:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6252,"name":"uint256","nodeType":"ElementaryTypeName","src":"2915:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6257,"initialValue":{"baseExpression":{"id":6254,"name":"tokenBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6131,"src":"2936:13:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6256,"indexExpression":{"id":6255,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6247,"src":"2950:8:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2936:23:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2915:44:14"},{"assignments":[6259],"declarations":[{"constant":false,"id":6259,"mutability":"mutable","name":"balanceIn","nameLocation":"3010:9:14","nodeType":"VariableDeclaration","scope":6278,"src":"3002:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6258,"name":"uint256","nodeType":"ElementaryTypeName","src":"3002:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6263,"initialValue":{"baseExpression":{"id":6260,"name":"tokenBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6131,"src":"3022:13:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6262,"indexExpression":{"id":6261,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6243,"src":"3036:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3022:22:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3002:42:14"},{"assignments":[6265],"declarations":[{"constant":false,"id":6265,"mutability":"mutable","name":"amountOut","nameLocation":"3284:9:14","nodeType":"VariableDeclaration","scope":6278,"src":"3276:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6264,"name":"uint256","nodeType":"ElementaryTypeName","src":"3276:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6275,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6266,"name":"balanceOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6253,"src":"3297:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6267,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6245,"src":"3310:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3297:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6269,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3296:23:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6270,"name":"balanceIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6259,"src":"3323:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":6271,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6245,"src":"3335:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3323:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6273,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3322:22:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3296:48:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3276:68:14"},{"expression":{"id":6276,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6265,"src":"3364:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6251,"id":6277,"nodeType":"Return","src":"3357:16:14"}]},"functionSelector":"ff9c8ac6","id":6279,"implemented":true,"kind":"function","modifiers":[],"name":"getAmountOut","nameLocation":"2774:12:14","nodeType":"FunctionDefinition","parameters":{"id":6248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6243,"mutability":"mutable","name":"tokenIn","nameLocation":"2805:7:14","nodeType":"VariableDeclaration","scope":6279,"src":"2797:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6242,"name":"address","nodeType":"ElementaryTypeName","src":"2797:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6245,"mutability":"mutable","name":"amountIn","nameLocation":"2831:8:14","nodeType":"VariableDeclaration","scope":6279,"src":"2823:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6244,"name":"uint256","nodeType":"ElementaryTypeName","src":"2823:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6247,"mutability":"mutable","name":"tokenOut","nameLocation":"2858:8:14","nodeType":"VariableDeclaration","scope":6279,"src":"2850:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6246,"name":"address","nodeType":"ElementaryTypeName","src":"2850:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2786:87:14"},"returnParameters":{"id":6251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6250,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6279,"src":"2895:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6249,"name":"uint256","nodeType":"ElementaryTypeName","src":"2895:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2894:9:14"},"scope":6722,"src":"2765:616:14","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":6377,"nodeType":"Block","src":"3510:1087:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6291,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6281,"src":"3563:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6292,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6285,"src":"3574:8:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3563:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616d6520746f6b656e73","id":6294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3584:13:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_027a4645d52999467d532b08294cf4ab88552e8e8054f1574513efbdd121a3e3","typeString":"literal_string \"Same tokens\""},"value":"Same tokens"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_027a4645d52999467d532b08294cf4ab88552e8e8054f1574513efbdd121a3e3","typeString":"literal_string \"Same tokens\""}],"id":6290,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3555:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3555:43:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6296,"nodeType":"ExpressionStatement","src":"3555:43:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":6298,"name":"i_tokens_map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6118,"src":"3617:12:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6300,"indexExpression":{"id":6299,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6281,"src":"3630:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3617:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":6301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3642:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3617:26:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f6b656e496e206e6f7420696e20695f746f6b656e735f6d6170","id":6303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3645:29:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_56a242703b1539558b0d109cfcb28b8a34a30bc5a66436384a025ef1b35eb3dd","typeString":"literal_string \"tokenIn not in i_tokens_map\""},"value":"tokenIn not in i_tokens_map"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_56a242703b1539558b0d109cfcb28b8a34a30bc5a66436384a025ef1b35eb3dd","typeString":"literal_string \"tokenIn not in i_tokens_map\""}],"id":6297,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3609:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3609:66:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6305,"nodeType":"ExpressionStatement","src":"3609:66:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":6307,"name":"i_tokens_map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6118,"src":"3694:12:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6309,"indexExpression":{"id":6308,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6285,"src":"3707:8:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3694:22:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":6310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3720:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3694:27:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f6b656e4f7574206e6f7420696e20695f746f6b656e735f6d6170","id":6312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3723:30:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_80501303dea0e00b4f0fdd2002f8e97e93d67534e40aed39444d7f3d32212699","typeString":"literal_string \"tokenOut not in i_tokens_map\""},"value":"tokenOut not in i_tokens_map"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_80501303dea0e00b4f0fdd2002f8e97e93d67534e40aed39444d7f3d32212699","typeString":"literal_string \"tokenOut not in i_tokens_map\""}],"id":6306,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3686:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3686:68:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6314,"nodeType":"ExpressionStatement","src":"3686:68:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6316,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6283,"src":"3773:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3784:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3773:12:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5a65726f20616d6f756e74","id":6319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3787:13:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_499f3f4b0ad3588aa1eb6e198be77bff643a4218ffbf2bef1370e58aadea5df4","typeString":"literal_string \"Zero amount\""},"value":"Zero amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_499f3f4b0ad3588aa1eb6e198be77bff643a4218ffbf2bef1370e58aadea5df4","typeString":"literal_string \"Zero amount\""}],"id":6315,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3765:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3765:36:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6321,"nodeType":"ExpressionStatement","src":"3765:36:14"},{"assignments":[6323],"declarations":[{"constant":false,"id":6323,"mutability":"mutable","name":"amountOut","nameLocation":"3885:9:14","nodeType":"VariableDeclaration","scope":6377,"src":"3877:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6322,"name":"uint256","nodeType":"ElementaryTypeName","src":"3877:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6329,"initialValue":{"arguments":[{"id":6325,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6281,"src":"3910:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6326,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6283,"src":"3919:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6327,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6285,"src":"3929:8:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":6324,"name":"getAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6279,"src":"3897:12:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$_t_address_$returns$_t_uint256_$","typeString":"function (address,uint256,address) view returns (uint256)"}},"id":6328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3897:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3877:61:14"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":6335,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4149:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4153:6:14","memberName":"sender","nodeType":"MemberAccess","src":"4149:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":6339,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4169:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_Pool_$6722","typeString":"contract Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Pool_$6722","typeString":"contract Pool"}],"id":6338,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4161:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6337,"name":"address","nodeType":"ElementaryTypeName","src":"4161:7:14","typeDescriptions":{}}},"id":6340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4161:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6341,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6283,"src":"4176:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":6332,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6281,"src":"4127:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6331,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"4120:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$729_$","typeString":"type(contract IERC20)"}},"id":6333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4120:15:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}},"id":6334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4136:12:14","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":728,"src":"4120:28:14","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":6342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4120:65:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53776170204661696c6564","id":6343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4200:13:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_c26370c748e399efe4c5a302d20f1fe22da5300fc60bdab39924790733506945","typeString":"literal_string \"Swap Failed\""},"value":"Swap Failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c26370c748e399efe4c5a302d20f1fe22da5300fc60bdab39924790733506945","typeString":"literal_string \"Swap Failed\""}],"id":6330,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4098:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4098:126:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6345,"nodeType":"ExpressionStatement","src":"4098:126:14"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":6351,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4283:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4287:6:14","memberName":"sender","nodeType":"MemberAccess","src":"4283:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6353,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6323,"src":"4295:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":6348,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6285,"src":"4264:8:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6347,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"4257:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$729_$","typeString":"type(contract IERC20)"}},"id":6349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4257:16:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}},"id":6350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4274:8:14","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":696,"src":"4257:25:14","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":6354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4257:48:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53776170204661696c6564","id":6355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4320:13:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_c26370c748e399efe4c5a302d20f1fe22da5300fc60bdab39924790733506945","typeString":"literal_string \"Swap Failed\""},"value":"Swap Failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c26370c748e399efe4c5a302d20f1fe22da5300fc60bdab39924790733506945","typeString":"literal_string \"Swap Failed\""}],"id":6346,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4235:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4235:109:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6357,"nodeType":"ExpressionStatement","src":"4235:109:14"},{"expression":{"id":6362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6358,"name":"tokenBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6131,"src":"4390:13:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6360,"indexExpression":{"id":6359,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6281,"src":"4404:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4390:22:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":6361,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6283,"src":"4416:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4390:34:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6363,"nodeType":"ExpressionStatement","src":"4390:34:14"},{"expression":{"id":6368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6364,"name":"tokenBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6131,"src":"4435:13:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6366,"indexExpression":{"id":6365,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6285,"src":"4449:8:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4435:23:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":6367,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6323,"src":"4462:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4435:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6369,"nodeType":"ExpressionStatement","src":"4435:36:14"},{"eventCall":{"arguments":[{"id":6371,"name":"tokenIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6281,"src":"4550:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6372,"name":"amountIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6283,"src":"4559:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6373,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6285,"src":"4569:8:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6374,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6323,"src":"4579:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6370,"name":"Swapped","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6157,"src":"4542:7:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256,address,uint256)"}},"id":6375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4542:47:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6376,"nodeType":"EmitStatement","src":"4537:52:14"}]},"functionSelector":"6d069a67","id":6378,"implemented":true,"kind":"function","modifiers":[{"id":6288,"kind":"modifierInvocation","modifierName":{"id":6287,"name":"nonReentrant","nameLocations":["3497:12:14"],"nodeType":"IdentifierPath","referencedDeclaration":870,"src":"3497:12:14"},"nodeType":"ModifierInvocation","src":"3497:12:14"}],"name":"swap","nameLocation":"3398:4:14","nodeType":"FunctionDefinition","parameters":{"id":6286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6281,"mutability":"mutable","name":"tokenIn","nameLocation":"3421:7:14","nodeType":"VariableDeclaration","scope":6378,"src":"3413:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6280,"name":"address","nodeType":"ElementaryTypeName","src":"3413:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6283,"mutability":"mutable","name":"amountIn","nameLocation":"3447:8:14","nodeType":"VariableDeclaration","scope":6378,"src":"3439:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6282,"name":"uint256","nodeType":"ElementaryTypeName","src":"3439:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6285,"mutability":"mutable","name":"tokenOut","nameLocation":"3474:8:14","nodeType":"VariableDeclaration","scope":6378,"src":"3466:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6284,"name":"address","nodeType":"ElementaryTypeName","src":"3466:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3402:87:14"},"returnParameters":{"id":6289,"nodeType":"ParameterList","parameters":[],"src":"3510:0:14"},"scope":6722,"src":"3389:1208:14","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6474,"nodeType":"Block","src":"4787:779:14","statements":[{"assignments":[6387],"declarations":[{"constant":false,"id":6387,"mutability":"mutable","name":"length","nameLocation":"4877:6:14","nodeType":"VariableDeclaration","scope":6474,"src":"4869:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6386,"name":"uint256","nodeType":"ElementaryTypeName","src":"4869:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6390,"initialValue":{"expression":{"id":6388,"name":"i_tokens_addresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6114,"src":"4886:18:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":6389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4905:6:14","memberName":"length","nodeType":"MemberAccess","src":"4886:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4869:42:14"},{"assignments":[6395],"declarations":[{"constant":false,"id":6395,"mutability":"mutable","name":"return_amount","nameLocation":"4939:13:14","nodeType":"VariableDeclaration","scope":6474,"src":"4922:30:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6393,"name":"uint256","nodeType":"ElementaryTypeName","src":"4922:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6394,"nodeType":"ArrayTypeName","src":"4922:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":6401,"initialValue":{"arguments":[{"id":6399,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6387,"src":"4969:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6398,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"4955:13:14","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":6396,"name":"uint256","nodeType":"ElementaryTypeName","src":"4959:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6397,"nodeType":"ArrayTypeName","src":"4959:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":6400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4955:21:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"4922:54:14"},{"assignments":[6403],"declarations":[{"constant":false,"id":6403,"mutability":"mutable","name":"balance0","nameLocation":"4995:8:14","nodeType":"VariableDeclaration","scope":6474,"src":"4987:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6402,"name":"uint256","nodeType":"ElementaryTypeName","src":"4987:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6409,"initialValue":{"baseExpression":{"id":6404,"name":"tokenBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6131,"src":"5006:13:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6408,"indexExpression":{"baseExpression":{"id":6405,"name":"i_tokens_addresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6114,"src":"5020:18:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":6407,"indexExpression":{"hexValue":"30","id":6406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5039:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5020:21:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5006:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4987:55:14"},{"body":{"id":6464,"nodeType":"Block","src":"5092:397:14","statements":[{"assignments":[6421],"declarations":[{"constant":false,"id":6421,"mutability":"mutable","name":"token_add","nameLocation":"5129:9:14","nodeType":"VariableDeclaration","scope":6464,"src":"5121:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6420,"name":"address","nodeType":"ElementaryTypeName","src":"5121:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":6425,"initialValue":{"baseExpression":{"id":6422,"name":"i_tokens_addresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6114,"src":"5141:18:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":6424,"indexExpression":{"id":6423,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6411,"src":"5160:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5141:21:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5121:41:14"},{"assignments":[6427],"declarations":[{"constant":false,"id":6427,"mutability":"mutable","name":"balan","nameLocation":"5185:5:14","nodeType":"VariableDeclaration","scope":6464,"src":"5177:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6426,"name":"uint256","nodeType":"ElementaryTypeName","src":"5177:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6431,"initialValue":{"baseExpression":{"id":6428,"name":"tokenBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6131,"src":"5193:13:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6430,"indexExpression":{"id":6429,"name":"token_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6421,"src":"5207:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5193:24:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5177:40:14"},{"assignments":[6433],"declarations":[{"constant":false,"id":6433,"mutability":"mutable","name":"amount","nameLocation":"5240:6:14","nodeType":"VariableDeclaration","scope":6464,"src":"5232:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6432,"name":"uint256","nodeType":"ElementaryTypeName","src":"5232:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6434,"nodeType":"VariableDeclarationStatement","src":"5232:14:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6435,"name":"balan","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6427,"src":"5265:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5274:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5265:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6456,"nodeType":"Block","src":"5365:73:14","statements":[{"expression":{"id":6454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6447,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6433,"src":"5384:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6448,"name":"amount0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6380,"src":"5394:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6449,"name":"balance0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6403,"src":"5403:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5394:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6451,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5393:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6452,"name":"balan","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6427,"src":"5417:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5393:29:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5384:38:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6455,"nodeType":"ExpressionStatement","src":"5384:38:14"}]},"id":6457,"nodeType":"IfStatement","src":"5261:177:14","trueBody":{"id":6446,"nodeType":"Block","src":"5277:70:14","statements":[{"expression":{"id":6444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6438,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6433,"src":"5296:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6439,"name":"amount0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6380,"src":"5305:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"baseExpression":{"id":6440,"name":"INITIAL_RATIO","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6127,"src":"5315:13:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":6442,"indexExpression":{"id":6441,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6411,"src":"5329:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5315:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5305:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5296:35:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6445,"nodeType":"ExpressionStatement","src":"5296:35:14"}]}},{"expression":{"id":6462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6458,"name":"return_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6395,"src":"5452:13:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":6460,"indexExpression":{"id":6459,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6411,"src":"5466:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5452:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6461,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6433,"src":"5471:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5452:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6463,"nodeType":"ExpressionStatement","src":"5452:25:14"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6414,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6411,"src":"5075:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6415,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6387,"src":"5079:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5075:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6465,"initializationExpression":{"assignments":[6411],"declarations":[{"constant":false,"id":6411,"mutability":"mutable","name":"i","nameLocation":"5068:1:14","nodeType":"VariableDeclaration","scope":6465,"src":"5060:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6410,"name":"uint256","nodeType":"ElementaryTypeName","src":"5060:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6413,"initialValue":{"hexValue":"31","id":6412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5072:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"5060:13:14"},"loopExpression":{"expression":{"id":6418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5087:3:14","subExpression":{"id":6417,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6411,"src":"5087:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6419,"nodeType":"ExpressionStatement","src":"5087:3:14"},"nodeType":"ForStatement","src":"5055:434:14"},{"expression":{"id":6470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6466,"name":"return_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6395,"src":"5499:13:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":6468,"indexExpression":{"hexValue":"30","id":6467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5513:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5499:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6469,"name":"amount0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6380,"src":"5518:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5499:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6471,"nodeType":"ExpressionStatement","src":"5499:26:14"},{"expression":{"id":6472,"name":"return_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6395,"src":"5543:13:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":6385,"id":6473,"nodeType":"Return","src":"5536:20:14"}]},"functionSelector":"1371a957","id":6475,"implemented":true,"kind":"function","modifiers":[],"name":"getRequiredAmounts","nameLocation":"4712:18:14","nodeType":"FunctionDefinition","parameters":{"id":6381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6380,"mutability":"mutable","name":"amount0","nameLocation":"4739:7:14","nodeType":"VariableDeclaration","scope":6475,"src":"4731:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6379,"name":"uint256","nodeType":"ElementaryTypeName","src":"4731:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4730:17:14"},"returnParameters":{"id":6385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6384,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6475,"src":"4769:16:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6382,"name":"uint256","nodeType":"ElementaryTypeName","src":"4769:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6383,"nodeType":"ArrayTypeName","src":"4769:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"4768:18:14"},"scope":6722,"src":"4703:863:14","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":6598,"nodeType":"Block","src":"5670:1201:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6487,"name":"token_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6478,"src":"5690:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":6488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5700:6:14","memberName":"length","nodeType":"MemberAccess","src":"5690:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":6489,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6481,"src":"5710:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":6490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5718:6:14","memberName":"length","nodeType":"MemberAccess","src":"5710:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5690:34:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746865206c656e73206f6620616d6f756e7420616e6420746f6b656e5f6164642073686f756c6420626520657175616c","id":6492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5726:50:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_a33b7e37ceeda7c914335f861b2f9f6b02bcf2d319b05a9ff35d5b6ba6af4bfb","typeString":"literal_string \"the lens of amount and token_add should be equal\""},"value":"the lens of amount and token_add should be equal"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a33b7e37ceeda7c914335f861b2f9f6b02bcf2d319b05a9ff35d5b6ba6af4bfb","typeString":"literal_string \"the lens of amount and token_add should be equal\""}],"id":6486,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5681:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5681:96:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6494,"nodeType":"ExpressionStatement","src":"5681:96:14"},{"assignments":[6496],"declarations":[{"constant":false,"id":6496,"mutability":"mutable","name":"amountLP","nameLocation":"5798:8:14","nodeType":"VariableDeclaration","scope":6598,"src":"5790:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6495,"name":"uint256","nodeType":"ElementaryTypeName","src":"5790:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6497,"nodeType":"VariableDeclarationStatement","src":"5790:16:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":6498,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"5966:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":6499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5966:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5982:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5966:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6525,"nodeType":"Block","src":"6131:109:14","statements":[{"expression":{"id":6523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6519,"name":"amountLP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6496,"src":"6207:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":6520,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6481,"src":"6218:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":6522,"indexExpression":{"hexValue":"30","id":6521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6226:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6218:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6207:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6524,"nodeType":"ExpressionStatement","src":"6207:21:14"}]},"id":6526,"nodeType":"IfStatement","src":"5962:278:14","trueBody":{"id":6518,"nodeType":"Block","src":"5985:140:14","statements":[{"expression":{"id":6516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6502,"name":"amountLP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6496,"src":"6000:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":6503,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6481,"src":"6029:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":6505,"indexExpression":{"hexValue":"30","id":6504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6037:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6029:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":6506,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"6042:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":6507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6042:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6029:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6509,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6028:28:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"baseExpression":{"id":6510,"name":"tokenBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6131,"src":"6076:13:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6514,"indexExpression":{"baseExpression":{"id":6511,"name":"i_tokens_addresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6114,"src":"6090:18:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":6513,"indexExpression":{"hexValue":"30","id":6512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6109:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6090:21:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6076:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6028:84:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6000:112:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6517,"nodeType":"ExpressionStatement","src":"6000:112:14"}]}},{"expression":{"arguments":[{"expression":{"id":6528,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6256:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6260:6:14","memberName":"sender","nodeType":"MemberAccess","src":"6256:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6530,"name":"amountLP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6496,"src":"6268:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6527,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":491,"src":"6250:5:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":6531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6250:27:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6532,"nodeType":"ExpressionStatement","src":"6250:27:14"},{"assignments":[6534],"declarations":[{"constant":false,"id":6534,"mutability":"mutable","name":"length","nameLocation":"6322:6:14","nodeType":"VariableDeclaration","scope":6598,"src":"6314:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6533,"name":"uint256","nodeType":"ElementaryTypeName","src":"6314:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6537,"initialValue":{"expression":{"id":6535,"name":"token_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6478,"src":"6331:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":6536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6341:6:14","memberName":"length","nodeType":"MemberAccess","src":"6331:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6314:33:14"},{"body":{"id":6591,"nodeType":"Block","src":"6395:393:14","statements":[{"assignments":[6549],"declarations":[{"constant":false,"id":6549,"mutability":"mutable","name":"i_token_addr","nameLocation":"6432:12:14","nodeType":"VariableDeclaration","scope":6591,"src":"6424:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6548,"name":"address","nodeType":"ElementaryTypeName","src":"6424:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":6553,"initialValue":{"baseExpression":{"id":6550,"name":"token_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6478,"src":"6447:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":6552,"indexExpression":{"id":6551,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6539,"src":"6457:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6447:12:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6424:35:14"},{"assignments":[6555],"declarations":[{"constant":false,"id":6555,"mutability":"mutable","name":"index","nameLocation":"6479:5:14","nodeType":"VariableDeclaration","scope":6591,"src":"6474:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6554,"name":"uint","nodeType":"ElementaryTypeName","src":"6474:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6559,"initialValue":{"baseExpression":{"id":6556,"name":"i_tokens_map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6118,"src":"6487:12:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6558,"indexExpression":{"id":6557,"name":"i_token_addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6549,"src":"6500:12:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6487:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6474:39:14"},{"assignments":[6562],"declarations":[{"constant":false,"id":6562,"mutability":"mutable","name":"i_token","nameLocation":"6535:7:14","nodeType":"VariableDeclaration","scope":6591,"src":"6528:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"},"typeName":{"id":6561,"nodeType":"UserDefinedTypeName","pathNode":{"id":6560,"name":"IERC20","nameLocations":["6528:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":729,"src":"6528:6:14"},"referencedDeclaration":729,"src":"6528:6:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}},"visibility":"internal"}],"id":6566,"initialValue":{"baseExpression":{"id":6563,"name":"i_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6111,"src":"6545:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$729_$dyn_storage","typeString":"contract IERC20[] storage ref"}},"id":6565,"indexExpression":{"id":6564,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6555,"src":"6554:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6545:15:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}},"nodeType":"VariableDeclarationStatement","src":"6528:32:14"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":6570,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6624:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6628:6:14","memberName":"sender","nodeType":"MemberAccess","src":"6624:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":6574,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6644:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_Pool_$6722","typeString":"contract Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Pool_$6722","typeString":"contract Pool"}],"id":6573,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6636:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6572,"name":"address","nodeType":"ElementaryTypeName","src":"6636:7:14","typeDescriptions":{}}},"id":6575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6636:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":6576,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6481,"src":"6651:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":6578,"indexExpression":{"id":6577,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6539,"src":"6659:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6651:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6568,"name":"i_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6562,"src":"6603:7:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}},"id":6569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6611:12:14","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":728,"src":"6603:20:14","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":6579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6603:59:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e7366657220746f6b656e30206661696c6564","id":6580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6681:24:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_3dcfaa7b26cd9b2e7d0bcb018b106caeaeb81724fcb90f6955e6b49805c7b7c1","typeString":"literal_string \"Transfer token0 failed\""},"value":"Transfer token0 failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3dcfaa7b26cd9b2e7d0bcb018b106caeaeb81724fcb90f6955e6b49805c7b7c1","typeString":"literal_string \"Transfer token0 failed\""}],"id":6567,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6577:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6577:143:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6582,"nodeType":"ExpressionStatement","src":"6577:143:14"},{"expression":{"id":6589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6583,"name":"tokenBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6131,"src":"6735:13:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6585,"indexExpression":{"id":6584,"name":"i_token_addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6549,"src":"6749:12:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6735:27:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"baseExpression":{"id":6586,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6481,"src":"6766:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":6588,"indexExpression":{"id":6587,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6539,"src":"6774:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6766:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6735:41:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6590,"nodeType":"ExpressionStatement","src":"6735:41:14"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6542,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6539,"src":"6378:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6543,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6534,"src":"6382:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6378:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6592,"initializationExpression":{"assignments":[6539],"declarations":[{"constant":false,"id":6539,"mutability":"mutable","name":"i","nameLocation":"6371:1:14","nodeType":"VariableDeclaration","scope":6592,"src":"6363:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6538,"name":"uint256","nodeType":"ElementaryTypeName","src":"6363:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6541,"initialValue":{"hexValue":"30","id":6540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6375:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6363:13:14"},"loopExpression":{"expression":{"id":6546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6390:3:14","subExpression":{"id":6545,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6539,"src":"6390:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6547,"nodeType":"ExpressionStatement","src":"6390:3:14"},"nodeType":"ForStatement","src":"6358:430:14"},{"eventCall":{"arguments":[{"id":6594,"name":"token_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6478,"src":"6834:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":6595,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6481,"src":"6845:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":6593,"name":"AddedLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6139,"src":"6805:14:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address[] memory,uint256[] memory)"}},"id":6596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6805:58:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6597,"nodeType":"EmitStatement","src":"6800:63:14"}]},"functionSelector":"e5a86833","id":6599,"implemented":true,"kind":"function","modifiers":[{"id":6484,"kind":"modifierInvocation","modifierName":{"id":6483,"name":"nonReentrant","nameLocations":["5657:12:14"],"nodeType":"IdentifierPath","referencedDeclaration":870,"src":"5657:12:14"},"nodeType":"ModifierInvocation","src":"5657:12:14"}],"name":"addLiquidity","nameLocation":"5583:12:14","nodeType":"FunctionDefinition","parameters":{"id":6482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6478,"mutability":"mutable","name":"token_add","nameLocation":"5613:9:14","nodeType":"VariableDeclaration","scope":6599,"src":"5596:26:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":6476,"name":"address","nodeType":"ElementaryTypeName","src":"5596:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6477,"nodeType":"ArrayTypeName","src":"5596:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":6481,"mutability":"mutable","name":"amounts","nameLocation":"5641:7:14","nodeType":"VariableDeclaration","scope":6599,"src":"5624:24:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6479,"name":"uint256","nodeType":"ElementaryTypeName","src":"5624:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6480,"nodeType":"ArrayTypeName","src":"5624:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5595:54:14"},"returnParameters":{"id":6485,"nodeType":"ParameterList","parameters":[],"src":"5670:0:14"},"scope":6722,"src":"5574:1297:14","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6720,"nodeType":"Block","src":"7049:1217:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6609,"name":"token_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6602,"src":"7069:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":6610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7079:6:14","memberName":"length","nodeType":"MemberAccess","src":"7069:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":6611,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6605,"src":"7089:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":6612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7097:6:14","memberName":"length","nodeType":"MemberAccess","src":"7089:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7069:34:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746865206c656e73206f6620616d6f756e7420616e6420746f6b656e5f6164642073686f756c6420626520657175616c","id":6614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7105:50:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_a33b7e37ceeda7c914335f861b2f9f6b02bcf2d319b05a9ff35d5b6ba6af4bfb","typeString":"literal_string \"the lens of amount and token_add should be equal\""},"value":"the lens of amount and token_add should be equal"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a33b7e37ceeda7c914335f861b2f9f6b02bcf2d319b05a9ff35d5b6ba6af4bfb","typeString":"literal_string \"the lens of amount and token_add should be equal\""}],"id":6608,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7060:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7060:96:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6616,"nodeType":"ExpressionStatement","src":"7060:96:14"},{"assignments":[6618],"declarations":[{"constant":false,"id":6618,"mutability":"mutable","name":"amountLP","nameLocation":"7177:8:14","nodeType":"VariableDeclaration","scope":6720,"src":"7169:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6617,"name":"uint256","nodeType":"ElementaryTypeName","src":"7169:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6619,"nodeType":"VariableDeclarationStatement","src":"7169:16:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":6620,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"7345:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":6621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7345:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7361:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7345:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6647,"nodeType":"Block","src":"7510:109:14","statements":[{"expression":{"id":6645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6641,"name":"amountLP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6618,"src":"7586:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":6642,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6605,"src":"7597:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":6644,"indexExpression":{"hexValue":"30","id":6643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7605:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7597:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7586:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6646,"nodeType":"ExpressionStatement","src":"7586:21:14"}]},"id":6648,"nodeType":"IfStatement","src":"7341:278:14","trueBody":{"id":6640,"nodeType":"Block","src":"7364:140:14","statements":[{"expression":{"id":6638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6624,"name":"amountLP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6618,"src":"7379:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":6625,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6605,"src":"7408:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":6627,"indexExpression":{"hexValue":"30","id":6626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7416:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7408:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":6628,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"7421:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":6629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7421:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7408:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6631,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7407:28:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"baseExpression":{"id":6632,"name":"tokenBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6131,"src":"7455:13:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6636,"indexExpression":{"baseExpression":{"id":6633,"name":"i_tokens_addresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6114,"src":"7469:18:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":6635,"indexExpression":{"hexValue":"30","id":6634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7488:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7469:21:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7455:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7407:84:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7379:112:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6639,"nodeType":"ExpressionStatement","src":"7379:112:14"}]}},{"expression":{"arguments":[{"expression":{"id":6650,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7635:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7639:6:14","memberName":"sender","nodeType":"MemberAccess","src":"7635:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6652,"name":"amountLP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6618,"src":"7647:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6649,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":524,"src":"7629:5:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":6653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7629:27:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6654,"nodeType":"ExpressionStatement","src":"7629:27:14"},{"assignments":[6656],"declarations":[{"constant":false,"id":6656,"mutability":"mutable","name":"length","nameLocation":"7701:6:14","nodeType":"VariableDeclaration","scope":6720,"src":"7693:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6655,"name":"uint256","nodeType":"ElementaryTypeName","src":"7693:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6659,"initialValue":{"expression":{"id":6657,"name":"token_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6602,"src":"7710:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":6658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7720:6:14","memberName":"length","nodeType":"MemberAccess","src":"7710:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7693:33:14"},{"body":{"id":6713,"nodeType":"Block","src":"7774:393:14","statements":[{"assignments":[6671],"declarations":[{"constant":false,"id":6671,"mutability":"mutable","name":"i_token_addr","nameLocation":"7811:12:14","nodeType":"VariableDeclaration","scope":6713,"src":"7803:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6670,"name":"address","nodeType":"ElementaryTypeName","src":"7803:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":6675,"initialValue":{"baseExpression":{"id":6672,"name":"token_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6602,"src":"7826:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":6674,"indexExpression":{"id":6673,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6661,"src":"7836:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7826:12:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7803:35:14"},{"assignments":[6677],"declarations":[{"constant":false,"id":6677,"mutability":"mutable","name":"index","nameLocation":"7858:5:14","nodeType":"VariableDeclaration","scope":6713,"src":"7853:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6676,"name":"uint","nodeType":"ElementaryTypeName","src":"7853:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6681,"initialValue":{"baseExpression":{"id":6678,"name":"i_tokens_map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6118,"src":"7866:12:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6680,"indexExpression":{"id":6679,"name":"i_token_addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6671,"src":"7879:12:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7866:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7853:39:14"},{"assignments":[6684],"declarations":[{"constant":false,"id":6684,"mutability":"mutable","name":"i_token","nameLocation":"7914:7:14","nodeType":"VariableDeclaration","scope":6713,"src":"7907:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"},"typeName":{"id":6683,"nodeType":"UserDefinedTypeName","pathNode":{"id":6682,"name":"IERC20","nameLocations":["7907:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":729,"src":"7907:6:14"},"referencedDeclaration":729,"src":"7907:6:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}},"visibility":"internal"}],"id":6688,"initialValue":{"baseExpression":{"id":6685,"name":"i_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6111,"src":"7924:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_contract$_IERC20_$729_$dyn_storage","typeString":"contract IERC20[] storage ref"}},"id":6687,"indexExpression":{"id":6686,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6677,"src":"7933:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7924:15:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}},"nodeType":"VariableDeclarationStatement","src":"7907:32:14"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":6692,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8003:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8007:6:14","memberName":"sender","nodeType":"MemberAccess","src":"8003:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":6696,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"8023:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_Pool_$6722","typeString":"contract Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Pool_$6722","typeString":"contract Pool"}],"id":6695,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8015:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6694,"name":"address","nodeType":"ElementaryTypeName","src":"8015:7:14","typeDescriptions":{}}},"id":6697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8015:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":6698,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6605,"src":"8030:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":6700,"indexExpression":{"id":6699,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6661,"src":"8038:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8030:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6690,"name":"i_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6684,"src":"7982:7:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$729","typeString":"contract IERC20"}},"id":6691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7990:12:14","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":728,"src":"7982:20:14","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":6701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7982:59:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e7366657220746f6b656e30206661696c6564","id":6702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8060:24:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_3dcfaa7b26cd9b2e7d0bcb018b106caeaeb81724fcb90f6955e6b49805c7b7c1","typeString":"literal_string \"Transfer token0 failed\""},"value":"Transfer token0 failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3dcfaa7b26cd9b2e7d0bcb018b106caeaeb81724fcb90f6955e6b49805c7b7c1","typeString":"literal_string \"Transfer token0 failed\""}],"id":6689,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7956:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7956:143:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6704,"nodeType":"ExpressionStatement","src":"7956:143:14"},{"expression":{"id":6711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6705,"name":"tokenBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6131,"src":"8114:13:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6707,"indexExpression":{"id":6706,"name":"i_token_addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6671,"src":"8128:12:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8114:27:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"baseExpression":{"id":6708,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6605,"src":"8145:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":6710,"indexExpression":{"id":6709,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6661,"src":"8153:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8145:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8114:41:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6712,"nodeType":"ExpressionStatement","src":"8114:41:14"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6664,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6661,"src":"7757:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6665,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6656,"src":"7761:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7757:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6714,"initializationExpression":{"assignments":[6661],"declarations":[{"constant":false,"id":6661,"mutability":"mutable","name":"i","nameLocation":"7750:1:14","nodeType":"VariableDeclaration","scope":6714,"src":"7742:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6660,"name":"uint256","nodeType":"ElementaryTypeName","src":"7742:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6663,"initialValue":{"hexValue":"30","id":6662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7754:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7742:13:14"},"loopExpression":{"expression":{"id":6668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7769:3:14","subExpression":{"id":6667,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6661,"src":"7769:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6669,"nodeType":"ExpressionStatement","src":"7769:3:14"},"nodeType":"ForStatement","src":"7737:430:14"},{"eventCall":{"arguments":[{"id":6716,"name":"token_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6602,"src":"8216:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":6717,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6605,"src":"8240:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":6715,"name":"WithdrawLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6147,"src":"8184:17:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address[] memory,uint256[] memory)"}},"id":6718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8184:74:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6719,"nodeType":"EmitStatement","src":"8179:79:14"}]},"functionSelector":"1d978bd2","id":6721,"implemented":true,"kind":"function","modifiers":[],"name":"withdrawingliquidity","nameLocation":"6967:20:14","nodeType":"FunctionDefinition","parameters":{"id":6606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6602,"mutability":"mutable","name":"token_add","nameLocation":"7005:9:14","nodeType":"VariableDeclaration","scope":6721,"src":"6988:26:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":6600,"name":"address","nodeType":"ElementaryTypeName","src":"6988:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6601,"nodeType":"ArrayTypeName","src":"6988:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":6605,"mutability":"mutable","name":"amounts","nameLocation":"7033:7:14","nodeType":"VariableDeclaration","scope":6721,"src":"7016:24:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6603,"name":"uint256","nodeType":"ElementaryTypeName","src":"7016:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6604,"nodeType":"ArrayTypeName","src":"7016:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6987:54:14"},"returnParameters":{"id":6607,"nodeType":"ParameterList","parameters":[],"src":"7049:0:14"},"scope":6722,"src":"6958:1308:14","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":6723,"src":"463:8248:14","usedErrors":[11,16,21,30,35,40,851],"usedEvents":[663,672,6139,6147,6157]}],"src":"236:8477:14"},"id":14},"contracts/TestToken.sol":{"ast":{"absolutePath":"contracts/TestToken.sol","exportedSymbols":{"Context":[785],"ERC20":[651],"IERC20":[729],"IERC20Errors":[41],"IERC20Metadata":[755],"TestToken":[6753]},"id":6754,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6724,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:15"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":6725,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6754,"sourceUnit":652,"src":"58:55:15","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":6726,"name":"ERC20","nameLocations":["137:5:15"],"nodeType":"IdentifierPath","referencedDeclaration":651,"src":"137:5:15"},"id":6727,"nodeType":"InheritanceSpecifier","src":"137:5:15"}],"canonicalName":"TestToken","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":6753,"linearizedBaseContracts":[6753,651,41,755,729,785],"name":"TestToken","nameLocation":"124:9:15","nodeType":"ContractDefinition","nodes":[{"body":{"id":6738,"nodeType":"Block","src":"223:2:15","statements":[]},"id":6739,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":6734,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6729,"src":"209:4:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":6735,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6731,"src":"215:6:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":6736,"kind":"baseConstructorSpecifier","modifierName":{"id":6733,"name":"ERC20","nameLocations":["203:5:15"],"nodeType":"IdentifierPath","referencedDeclaration":651,"src":"203:5:15"},"nodeType":"ModifierInvocation","src":"203:19:15"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":6732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6729,"mutability":"mutable","name":"name","nameLocation":"175:4:15","nodeType":"VariableDeclaration","scope":6739,"src":"161:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6728,"name":"string","nodeType":"ElementaryTypeName","src":"161:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6731,"mutability":"mutable","name":"symbol","nameLocation":"195:6:15","nodeType":"VariableDeclaration","scope":6739,"src":"181:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6730,"name":"string","nodeType":"ElementaryTypeName","src":"181:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"160:42:15"},"returnParameters":{"id":6737,"nodeType":"ParameterList","parameters":[],"src":"223:0:15"},"scope":6753,"src":"149:76:15","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6751,"nodeType":"Block","src":"280:34:15","statements":[{"expression":{"arguments":[{"id":6747,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6741,"src":"296:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6748,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6743,"src":"300:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6746,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":491,"src":"290:5:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":6749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"290:17:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6750,"nodeType":"ExpressionStatement","src":"290:17:15"}]},"functionSelector":"40c10f19","id":6752,"implemented":true,"kind":"function","modifiers":[],"name":"mint","nameLocation":"240:4:15","nodeType":"FunctionDefinition","parameters":{"id":6744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6741,"mutability":"mutable","name":"to","nameLocation":"253:2:15","nodeType":"VariableDeclaration","scope":6752,"src":"245:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6740,"name":"address","nodeType":"ElementaryTypeName","src":"245:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6743,"mutability":"mutable","name":"amount","nameLocation":"265:6:15","nodeType":"VariableDeclaration","scope":6752,"src":"257:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6742,"name":"uint256","nodeType":"ElementaryTypeName","src":"257:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"244:28:15"},"returnParameters":{"id":6745,"nodeType":"ParameterList","parameters":[],"src":"280:0:15"},"scope":6753,"src":"231:83:15","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":6754,"src":"115:201:15","usedErrors":[11,16,21,30,35,40],"usedEvents":[663,672]}],"src":"32:284:15"},"id":15}},"contracts":{"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201ae1761b6a3c5d2458c4708d3276257bae9b475b3c412a0ebb4584fd955181ef64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE 0xE1 PUSH23 0x1B6A3C5D2458C4708D3276257BAE9B475B3C412A0EBB45 DUP5 REVERT SWAP6 MLOAD DUP2 0xEF PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"657:1315:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;657:1315:5;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201ae1761b6a3c5d2458c4708d3276257bae9b475b3c412a0ebb4584fd955181ef64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE 0xE1 PUSH23 0x1B6A3C5D2458C4708D3276257BAE9B475B3C412A0EBB45 DUP5 REVERT SWAP6 MLOAD DUP2 0xEF PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"657:1315:5:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"},{"inputs":[],"name":"StringsInvalidAddressFormat","type":"error"},{"inputs":[],"name":"StringsInvalidChar","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e418efcf027178c24969ef9cce14fe62f83bae952917381bb412a374c5fe008f64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 XOR 0xEF 0xCF MUL PUSH18 0x78C24969EF9CCE14FE62F83BAE952917381B 0xB4 SLT LOG3 PUSH21 0xC5FE008F64736F6C63430008140033000000000000 ","sourceMap":"297:16541:7:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;297:16541:7;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e418efcf027178c24969ef9cce14fe62f83bae952917381bb412a374c5fe008f64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 XOR 0xEF 0xCF MUL PUSH18 0x78C24969EF9CCE14FE62F83BAE952917381B 0xB4 SLT LOG3 PUSH21 0xC5FE008F64736F6C63430008140033000000000000 ","sourceMap":"297:16541:7:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidAddressFormat\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidChar\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}],\"StringsInvalidAddressFormat()\":[{\"details\":\"The string being parsed is not a properly formatted address.\"}],\"StringsInvalidChar()\":[{\"details\":\"The string being parsed contains characters that are not in scope of the given base.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209544771c102b4030bce79c3ee7998a21bfbdfbef060da8efbbf2e9592019a69764736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 PREVRANDAO PUSH24 0x1C102B4030BCE79C3EE7998A21BFBDFBEF060DA8EFBBF2E9 MSIZE KECCAK256 NOT 0xA6 SWAP8 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"281:28026:8:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;281:28026:8;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209544771c102b4030bce79c3ee7998a21bfbdfbef060da8efbbf2e9592019a69764736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 PREVRANDAO PUSH24 0x1C102B4030BCE79C3EE7998A21BFBDFBEF060DA8EFBBF2E9 MSIZE KECCAK256 NOT 0xA6 SWAP8 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"281:28026:8:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e57f6f97354ac8290db535b2e3f293653f51ec40206fa8b2bf9396c18f98af2564736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 PUSH32 0x6F97354AC8290DB535B2E3F293653F51EC40206FA8B2BF9396C18F98AF256473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"769:34173:9:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;769:34173:9;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e57f6f97354ac8290db535b2e3f293653f51ec40206fa8b2bf9396c18f98af2564736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 PUSH32 0x6F97354AC8290DB535B2E3F293653F51EC40206FA8B2BF9396C18F98AF256473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"769:34173:9:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209e65a3f6bb9e28d8169ea079d4b688370f4365b9ed0ac7dd77283f5739bebf8d64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 PUSH6 0xA3F6BB9E28D8 AND SWAP15 LOG0 PUSH26 0xD4B688370F4365B9ED0AC7DD77283F5739BEBF8D64736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"258:2354:10:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;258:2354:10;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209e65a3f6bb9e28d8169ea079d4b688370f4365b9ed0ac7dd77283f5739bebf8d64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 PUSH6 0xA3F6BB9E28D8 AND SWAP15 LOG0 PUSH26 0xD4B688370F4365B9ED0AC7DD77283F5739BEBF8D64736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"258:2354:10:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"contracts/Factory.sol":{"Factory":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address[]","name":"tokens","type":"address[]"}],"name":"PoolCreated","type":"event"},{"inputs":[{"internalType":"address[]","name":"tokens","type":"address[]"}],"name":"createPool","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"tokens","type":"address[]"}],"name":"getPool","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"tokens","type":"address[]"}],"name":"getPoolKey","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"pools","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"supportedTokens","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b5061293d806100206000396000f3fe60806040523480156200001157600080fd5b50600436106200005e5760003560e01c80637ee5542a1462000063578063b5217bb4146200008d578063c625562614620000d2578063ec00710514620000e9578063f0a87c9f1462000100575b600080fd5b6200007a6200007436600462000872565b62000117565b6040519081526020015b60405180910390f35b620000b96200009e36600462000945565b6000602081905290815260409020546001600160a01b031681565b6040516001600160a01b03909116815260200162000084565b620000b9620000e336600462000945565b62000153565b620000b9620000fa36600462000872565b6200017e565b620000b96200011136600462000872565b620001ab565b60006200012482620003ce565b6040516020016200013691906200095f565b604051602081830303815290604052805190602001209050919050565b600181815481106200016457600080fd5b6000918252602090912001546001600160a01b0316905081565b6000806200018c8362000117565b6000908152602081905260409020546001600160a01b03169392505050565b6000600282511015620001f95760405162461bcd60e51b81526020600482015260116024820152704174206c65617374203220746f6b656e7360781b60448201526064015b60405180910390fd5b620002048262000523565b620002455760405162461bcd60e51b815260206004820152601060248201526f4475706c696361746520746f6b656e7360801b6044820152606401620001f0565b6200025082620005fe565b6200028d5760405162461bcd60e51b815260206004820152600c60248201526b5a65726f206164647265737360a01b6044820152606401620001f0565b60006200029a83620003ce565b9050600081604051602001620002b191906200095f565b60408051601f1981840301815291815281516020928301206000818152928390529120549091506001600160a01b0316156200031e5760405162461bcd60e51b815260206004820152600b60248201526a506f6f6c2065786973747360a81b6044820152606401620001f0565b6000826040516200032f9062000831565b6200033b9190620009a0565b604051809103906000f08015801562000358573d6000803e3d6000fd5b50600083815260208190526040902080546001600160a01b0319166001600160a01b03831617905590506200038d8362000661565b7f26bf75378c99ddaf6cfa3d759c5ca947d22d1169b02be2cd17d49b102a1ca2fd85604051620003be9190620009a0565b60405180910390a1949350505050565b60606000620003dd8362000706565b905060015b81518110156200051c576000828281518110620004035762000403620009ef565b6020026020010151905060008290505b6000811180156200045d57506001600160a01b038216846200043760018462000a1b565b815181106200044a576200044a620009ef565b60200260200101516001600160a01b0316115b15620004ce57836200047160018362000a1b565b81518110620004845762000484620009ef565b6020026020010151848281518110620004a157620004a1620009ef565b6001600160a01b039092166020928302919091019091015280620004c58162000a37565b91505062000413565b81848281518110620004e457620004e4620009ef565b60200260200101906001600160a01b031690816001600160a01b03168152505050508080620005139062000a51565b915050620003e2565b5092915050565b600060018251116200053757506001919050565b60005b600183516200054a919062000a1b565b811015620005f55760006200056182600162000a6d565b90505b8351811015620005df57838181518110620005835762000583620009ef565b60200260200101516001600160a01b0316848381518110620005a957620005a9620009ef565b60200260200101516001600160a01b031603620005ca575060009392505050565b80620005d68162000a51565b91505062000564565b5080620005ec8162000a51565b9150506200053a565b50600192915050565b6000805b8251811015620005f55760006001600160a01b03168382815181106200062c576200062c620009ef565b60200260200101516001600160a01b0316036200064c5750600092915050565b80620006588162000a51565b91505062000602565b60005b8151811015620007025762000695828281518110620006875762000687620009ef565b6020026020010151620007c0565b620006ed576001828281518110620006b157620006b1620009ef565b60209081029190910181015182546001810184556000938452919092200180546001600160a01b0319166001600160a01b039092169190911790555b80620006f98162000a51565b91505062000664565b5050565b60606000825167ffffffffffffffff8111156200072757620007276200083f565b60405190808252806020026020018201604052801562000751578160200160208202803683370190505b50905060005b83518110156200051c57838181518110620007765762000776620009ef565b6020026020010151828281518110620007935762000793620009ef565b6001600160a01b039092166020928302919091019091015280620007b78162000a51565b91505062000757565b6000805b6001548110156200082857826001600160a01b031660018281548110620007ef57620007ef620009ef565b6000918252602090912001546001600160a01b031603620008135750600192915050565b806200081f8162000a51565b915050620007c4565b50600092915050565b611e848062000a8483390190565b634e487b7160e01b600052604160045260246000fd5b80356001600160a01b03811681146200086d57600080fd5b919050565b600060208083850312156200088657600080fd5b823567ffffffffffffffff808211156200089f57600080fd5b818501915085601f830112620008b457600080fd5b813581811115620008c957620008c96200083f565b8060051b604051601f19603f83011681018181108582111715620008f157620008f16200083f565b6040529182528482019250838101850191888311156200091057600080fd5b938501935b828510156200093957620009298562000855565b8452938501939285019262000915565b98975050505050505050565b6000602082840312156200095857600080fd5b5035919050565b815160009082906020808601845b83811015620009945781516001600160a01b0316855293820193908201906001016200096d565b50929695505050505050565b6020808252825182820181905260009190848201906040850190845b81811015620009e35783516001600160a01b031683529284019291840191600101620009bc565b50909695505050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8181038181111562000a315762000a3162000a05565b92915050565b60008162000a495762000a4962000a05565b506000190190565b60006001820162000a665762000a6662000a05565b5060010190565b8082018082111562000a315762000a3162000a0556fe60e060405260016080908152600260a052600360c08190526200002591600a9162000276565b503480156200003357600080fd5b5060405162001e8438038062001e8483398101604081905262000056916200036d565b6040518060400160405280600781526020016626282a37b5b2b760c91b8152506040518060400160405280600381526020016213141560ea1b81525081818160039081620000a59190620004ce565b506004620000b48282620004ce565b505060016005555050600980546001600160a01b03191633179055508051806001600160401b03811115620000ed57620000ed6200033a565b60405190808252806020026020018201604052801562000117578160200160208202803683370190505b5080516200012e91600691602090910190620002cb565b50806001600160401b038111156200014a576200014a6200033a565b60405190808252806020026020018201604052801562000174578160200160208202803683370190505b5080516200018b91600791602090910190620002cb565b5060005b818110156200026d576000838281518110620001af57620001af6200059a565b602002602001015190508060068381548110620001d057620001d06200059a565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555080600783815481106200021557620002156200059a565b600091825260208083209190910180546001600160a01b0319166001600160a01b03948516179055929091168152600882526040808220849055600b90925290812055806200026481620005b0565b9150506200018f565b505050620005d8565b828054828255906000526020600020908101928215620002b9579160200282015b82811115620002b9578251829060ff1690559160200191906001019062000297565b50620002c792915062000323565b5090565b828054828255906000526020600020908101928215620002b9579160200282015b82811115620002b957825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190620002ec565b5b80821115620002c7576000815560010162000324565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b03811681146200036857600080fd5b919050565b600060208083850312156200038157600080fd5b82516001600160401b03808211156200039957600080fd5b818501915085601f830112620003ae57600080fd5b815181811115620003c357620003c36200033a565b8060051b604051601f19603f83011681018181108582111715620003eb57620003eb6200033a565b6040529182528482019250838101850191888311156200040a57600080fd5b938501935b828510156200043357620004238562000350565b845293850193928501926200040f565b98975050505050505050565b600181811c908216806200045457607f821691505b6020821081036200047557634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620004c957600081815260208120601f850160051c81016020861015620004a45750805b601f850160051c820191505b81811015620004c557828155600101620004b0565b5050505b505050565b81516001600160401b03811115620004ea57620004ea6200033a565b6200050281620004fb84546200043f565b846200047b565b602080601f8311600181146200053a5760008415620005215750858301515b600019600386901b1c1916600185901b178555620004c5565b600085815260208120601f198616915b828110156200056b578886015182559484019460019091019084016200054a565b50858210156200058a5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052603260045260246000fd5b600060018201620005d157634e487b7160e01b600052601160045260246000fd5b5060010190565b61189c80620005e86000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c806370a08231116100ad578063d5b271f511610071578063d5b271f5146102a3578063dd62ed3e146102c3578063e5a86833146102fc578063eaa91a3d1461030f578063ff9c8ac61461032257600080fd5b806370a082311461023957806395d89b4114610262578063a9059cbb1461026a578063c45a01551461027d578063cbd01fa41461029057600080fd5b806323b872dd116100f457806323b872dd146101b9578063313ce567146101cc578063345f5557146101db578063523fba7f146102065780636d069a671461022657600080fd5b806306fdde0314610131578063095ea7b31461014f5780631371a9571461017257806318160ddd146101925780631d978bd2146101a4575b600080fd5b610139610335565b6040516101469190611358565b60405180910390f35b61016261015d3660046113c2565b6103c7565b6040519015158152602001610146565b6101856101803660046113ec565b6103e1565b6040516101469190611440565b6002545b604051908152602001610146565b6101b76101b2366004611530565b610563565b005b6101626101c73660046115f0565b610863565b60405160128152602001610146565b6101ee6101e93660046113ec565b610887565b6040516001600160a01b039091168152602001610146565b61019661021436600461162c565b600b6020526000908152604090205481565b6101b7610234366004611647565b6108b1565b61019661024736600461162c565b6001600160a01b031660009081526020819052604090205490565b610139610c31565b6101626102783660046113c2565b610c40565b6009546101ee906001600160a01b031681565b61019661029e3660046113ec565b610c4e565b6101966102b136600461162c565b60086020526000908152604090205481565b6101966102d1366004611683565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6101b761030a366004611530565b610c6f565b6101ee61031d3660046113ec565b610f78565b610196610330366004611647565b610f88565b606060038054610344906116b6565b80601f0160208091040260200160405190810160405280929190818152602001828054610370906116b6565b80156103bd5780601f10610392576101008083540402835291602001916103bd565b820191906000526020600020905b8154815290600101906020018083116103a057829003601f168201915b5050505050905090565b6000336103d5818585610fd8565b60019150505b92915050565b60075460609060008167ffffffffffffffff8111156104025761040261145a565b60405190808252806020026020018201604052801561042b578160200160208202803683370190505b5090506000600b60006007600081548110610448576104486116f0565b60009182526020808320909101546001600160a01b03168352820192909252604001902054905060015b8381101561053b5760006007828154811061048f5761048f6116f0565b60009182526020808320909101546001600160a01b0316808352600b9091526040822054909250908181036104ee57600a84815481106104d1576104d16116f0565b9060005260206000200154896104e7919061171c565b9050610506565b816104f9868b61171c565b6105039190611733565b90505b80868581518110610519576105196116f0565b602002602001018181525050505050808061053390611755565b915050610472565b508482600081518110610550576105506116f0565b6020908102919091010152509392505050565b805182511461058d5760405162461bcd60e51b81526004016105849061176e565b60405180910390fd5b60008061059960025490565b111561061b57600b600060076000815481106105b7576105b76116f0565b60009182526020808320909101546001600160a01b031683528201929092526040019020546105e560025490565b836000815181106105f8576105f86116f0565b602002602001015161060a919061171c565b6106149190611733565b9050610639565b8160008151811061062e5761062e6116f0565b602002602001015190505b6106433382610fe5565b825160005b81811015610823576000858281518110610664576106646116f0565b60200260200101519050600060086000836001600160a01b03166001600160a01b031681526020019081526020016000205490506000600682815481106106ad576106ad6116f0565b9060005260206000200160009054906101000a90046001600160a01b03169050806001600160a01b03166323b872dd33308a88815181106106f0576106f06116f0565b60209081029190910101516040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015260448201526064016020604051808303816000875af115801561074f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077391906117be565b6107b85760405162461bcd60e51b8152602060048201526016602482015275151c985b9cd9995c881d1bdad95b8c0819985a5b195960521b6044820152606401610584565b8684815181106107ca576107ca6116f0565b6020026020010151600b6000856001600160a01b03166001600160a01b03168152602001908152602001600020600082825461080691906117e0565b92505081905550505050808061081b90611755565b915050610648565b507f7f63fc1ab7d4b22633cca91cd87319f6e7b3229ace7baa90f114b15f33e847ae84846040516108559291906117f3565b60405180910390a150505050565b60003361087185828561101b565b61087c85858561109a565b506001949350505050565b6006818154811061089757600080fd5b6000918252602090912001546001600160a01b0316905081565b6108b96110f9565b806001600160a01b0316836001600160a01b0316036109085760405162461bcd60e51b815260206004820152600b60248201526a53616d6520746f6b656e7360a81b6044820152606401610584565b6001600160a01b038316600090815260086020526040812054900361096f5760405162461bcd60e51b815260206004820152601b60248201527f746f6b656e496e206e6f7420696e20695f746f6b656e735f6d617000000000006044820152606401610584565b6001600160a01b03811660009081526008602052604081205490036109d65760405162461bcd60e51b815260206004820152601c60248201527f746f6b656e4f7574206e6f7420696e20695f746f6b656e735f6d6170000000006044820152606401610584565b60008211610a145760405162461bcd60e51b815260206004820152600b60248201526a16995c9bc8185b5bdd5b9d60aa1b6044820152606401610584565b6000610a21848484610f88565b6040516323b872dd60e01b8152336004820152306024820152604481018590529091506001600160a01b038516906323b872dd906064016020604051808303816000875af1158015610a77573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9b91906117be565b610ad55760405162461bcd60e51b815260206004820152600b60248201526a14ddd85c0811985a5b195960aa1b6044820152606401610584565b60405163a9059cbb60e01b8152336004820152602481018290526001600160a01b0383169063a9059cbb906044016020604051808303816000875af1158015610b22573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b4691906117be565b610b805760405162461bcd60e51b815260206004820152600b60248201526a14ddd85c0811985a5b195960aa1b6044820152606401610584565b6001600160a01b0384166000908152600b602052604081208054859290610ba8908490611853565b90915550506001600160a01b0382166000908152600b602052604081208054839290610bd59084906117e0565b9091555050604080516001600160a01b03808716825284166020820152829185917fdb587d878116df0bdd4fe154699aa2c5f439da001cc811dfd05d9f589fc5a8ee910160405180910390a350610c2c6001600555565b505050565b606060048054610344906116b6565b6000336103d581858561109a565b600a8181548110610c5e57600080fd5b600091825260209091200154905081565b610c776110f9565b8051825114610c985760405162461bcd60e51b81526004016105849061176e565b600080610ca460025490565b1115610d2657600b60006007600081548110610cc257610cc26116f0565b60009182526020808320909101546001600160a01b03168352820192909252604001902054610cf060025490565b83600081518110610d0357610d036116f0565b6020026020010151610d15919061171c565b610d1f9190611733565b9050610d44565b81600081518110610d3957610d396116f0565b602002602001015190505b610d4e3382611123565b825160005b81811015610f2e576000858281518110610d6f57610d6f6116f0565b60200260200101519050600060086000836001600160a01b03166001600160a01b03168152602001908152602001600020549050600060068281548110610db857610db86116f0565b9060005260206000200160009054906101000a90046001600160a01b03169050806001600160a01b03166323b872dd33308a8881518110610dfb57610dfb6116f0565b60209081029190910101516040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015260448201526064016020604051808303816000875af1158015610e5a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e7e91906117be565b610ec35760405162461bcd60e51b8152602060048201526016602482015275151c985b9cd9995c881d1bdad95b8c0819985a5b195960521b6044820152606401610584565b868481518110610ed557610ed56116f0565b6020026020010151600b6000856001600160a01b03166001600160a01b031681526020019081526020016000206000828254610f119190611853565b925050819055505050508080610f2690611755565b915050610d53565b507fb1b40d6e24db4f4144d860844c12ef0cee735402334d5e8682124a4c03bce4c78484604051610f609291906117f3565b60405180910390a15050610f746001600555565b5050565b6007818154811061089757600080fd5b6001600160a01b038082166000908152600b602052604080822054928616825281205490919082610fb98683611853565b610fc3878561171c565b610fcd9190611733565b979650505050505050565b610c2c8383836001611159565b6001600160a01b03821661100f57604051634b637e8f60e11b815260006004820152602401610584565b610f748260008361122e565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811015611094578181101561108557604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610584565b61109484848484036000611159565b50505050565b6001600160a01b0383166110c457604051634b637e8f60e11b815260006004820152602401610584565b6001600160a01b0382166110ee5760405163ec442f0560e01b815260006004820152602401610584565b610c2c83838361122e565b60026005540361111c57604051633ee5aeb560e01b815260040160405180910390fd5b6002600555565b6001600160a01b03821661114d5760405163ec442f0560e01b815260006004820152602401610584565b610f746000838361122e565b6001600160a01b0384166111835760405163e602df0560e01b815260006004820152602401610584565b6001600160a01b0383166111ad57604051634a1406b160e11b815260006004820152602401610584565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561109457826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161122091815260200190565b60405180910390a350505050565b6001600160a01b03831661125957806002600082825461124e9190611853565b909155506112cb9050565b6001600160a01b038316600090815260208190526040902054818110156112ac5760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610584565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166112e757600280548290039055611306565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161134b91815260200190565b60405180910390a3505050565b600060208083528351808285015260005b8181101561138557858101830151858201604001528201611369565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146113bd57600080fd5b919050565b600080604083850312156113d557600080fd5b6113de836113a6565b946020939093013593505050565b6000602082840312156113fe57600080fd5b5035919050565b600081518084526020808501945080840160005b8381101561143557815187529582019590820190600101611419565b509495945050505050565b6020815260006114536020830184611405565b9392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156114995761149961145a565b604052919050565b600067ffffffffffffffff8211156114bb576114bb61145a565b5060051b60200190565b600082601f8301126114d657600080fd5b813560206114eb6114e6836114a1565b611470565b82815260059290921b8401810191818101908684111561150a57600080fd5b8286015b84811015611525578035835291830191830161150e565b509695505050505050565b6000806040838503121561154357600080fd5b823567ffffffffffffffff8082111561155b57600080fd5b818501915085601f83011261156f57600080fd5b8135602061157f6114e6836114a1565b82815260059290921b8401810191818101908984111561159e57600080fd5b948201945b838610156115c3576115b4866113a6565b825294820194908201906115a3565b965050860135925050808211156115d957600080fd5b506115e6858286016114c5565b9150509250929050565b60008060006060848603121561160557600080fd5b61160e846113a6565b925061161c602085016113a6565b9150604084013590509250925092565b60006020828403121561163e57600080fd5b611453826113a6565b60008060006060848603121561165c57600080fd5b611665846113a6565b92506020840135915061167a604085016113a6565b90509250925092565b6000806040838503121561169657600080fd5b61169f836113a6565b91506116ad602084016113a6565b90509250929050565b600181811c908216806116ca57607f821691505b6020821081036116ea57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176103db576103db611706565b60008261175057634e487b7160e01b600052601260045260246000fd5b500490565b60006001820161176757611767611706565b5060010190565b60208082526030908201527f746865206c656e73206f6620616d6f756e7420616e6420746f6b656e5f61646460408201526f081cda1bdd5b1908189948195c5d585b60821b606082015260800190565b6000602082840312156117d057600080fd5b8151801515811461145357600080fd5b818103818111156103db576103db611706565b604080825283519082018190526000906020906060840190828701845b828110156118355781516001600160a01b031684529284019290840190600101611810565b505050838103828501526118498186611405565b9695505050505050565b808201808211156103db576103db61170656fea2646970667358221220c7ed7a53e7a7fcfdc1042d914bbababd5040a014f69d4fb7894bce403d5c904c64736f6c63430008140033a264697066735822122001798487fb0a51dbb80d0ada7ff104d89d3b7af5e24e9e6f0f7909dc8562fb2564736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x293D DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH3 0x5E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7EE5542A EQ PUSH3 0x63 JUMPI DUP1 PUSH4 0xB5217BB4 EQ PUSH3 0x8D JUMPI DUP1 PUSH4 0xC6255626 EQ PUSH3 0xD2 JUMPI DUP1 PUSH4 0xEC007105 EQ PUSH3 0xE9 JUMPI DUP1 PUSH4 0xF0A87C9F EQ PUSH3 0x100 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x7A PUSH3 0x74 CALLDATASIZE PUSH1 0x4 PUSH3 0x872 JUMP JUMPDEST PUSH3 0x117 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0xB9 PUSH3 0x9E CALLDATASIZE PUSH1 0x4 PUSH3 0x945 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x84 JUMP JUMPDEST PUSH3 0xB9 PUSH3 0xE3 CALLDATASIZE PUSH1 0x4 PUSH3 0x945 JUMP JUMPDEST PUSH3 0x153 JUMP JUMPDEST PUSH3 0xB9 PUSH3 0xFA CALLDATASIZE PUSH1 0x4 PUSH3 0x872 JUMP JUMPDEST PUSH3 0x17E JUMP JUMPDEST PUSH3 0xB9 PUSH3 0x111 CALLDATASIZE PUSH1 0x4 PUSH3 0x872 JUMP JUMPDEST PUSH3 0x1AB JUMP JUMPDEST PUSH1 0x0 PUSH3 0x124 DUP3 PUSH3 0x3CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x136 SWAP2 SWAP1 PUSH3 0x95F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH3 0x164 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH3 0x18C DUP4 PUSH3 0x117 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 MLOAD LT ISZERO PUSH3 0x1F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x4174206C65617374203220746F6B656E73 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x204 DUP3 PUSH3 0x523 JUMP JUMPDEST PUSH3 0x245 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x4475706C696361746520746F6B656E73 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x1F0 JUMP JUMPDEST PUSH3 0x250 DUP3 PUSH3 0x5FE JUMP JUMPDEST PUSH3 0x28D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x5A65726F2061646472657373 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x1F0 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x29A DUP4 PUSH3 0x3CE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x2B1 SWAP2 SWAP1 PUSH3 0x95F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 PUSH1 0x0 DUP2 DUP2 MSTORE SWAP3 DUP4 SWAP1 MSTORE SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH3 0x31E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x506F6F6C20657869737473 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x1F0 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x40 MLOAD PUSH3 0x32F SWAP1 PUSH3 0x831 JUMP JUMPDEST PUSH3 0x33B SWAP2 SWAP1 PUSH3 0x9A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH3 0x358 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE SWAP1 POP PUSH3 0x38D DUP4 PUSH3 0x661 JUMP JUMPDEST PUSH32 0x26BF75378C99DDAF6CFA3D759C5CA947D22D1169B02BE2CD17D49B102A1CA2FD DUP6 PUSH1 0x40 MLOAD PUSH3 0x3BE SWAP2 SWAP1 PUSH3 0x9A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH3 0x3DD DUP4 PUSH3 0x706 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH3 0x51C JUMPI PUSH1 0x0 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH3 0x403 JUMPI PUSH3 0x403 PUSH3 0x9EF JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP3 SWAP1 POP JUMPDEST PUSH1 0x0 DUP2 GT DUP1 ISZERO PUSH3 0x45D JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP5 PUSH3 0x437 PUSH1 0x1 DUP5 PUSH3 0xA1B JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH3 0x44A JUMPI PUSH3 0x44A PUSH3 0x9EF JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT JUMPDEST ISZERO PUSH3 0x4CE JUMPI DUP4 PUSH3 0x471 PUSH1 0x1 DUP4 PUSH3 0xA1B JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH3 0x484 JUMPI PUSH3 0x484 PUSH3 0x9EF JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH3 0x4A1 JUMPI PUSH3 0x4A1 PUSH3 0x9EF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 PUSH3 0x4C5 DUP2 PUSH3 0xA37 JUMP JUMPDEST SWAP2 POP POP PUSH3 0x413 JUMP JUMPDEST DUP2 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH3 0x4E4 JUMPI PUSH3 0x4E4 PUSH3 0x9EF JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP POP POP DUP1 DUP1 PUSH3 0x513 SWAP1 PUSH3 0xA51 JUMP JUMPDEST SWAP2 POP POP PUSH3 0x3E2 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 MLOAD GT PUSH3 0x537 JUMPI POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x1 DUP4 MLOAD PUSH3 0x54A SWAP2 SWAP1 PUSH3 0xA1B JUMP JUMPDEST DUP2 LT ISZERO PUSH3 0x5F5 JUMPI PUSH1 0x0 PUSH3 0x561 DUP3 PUSH1 0x1 PUSH3 0xA6D JUMP JUMPDEST SWAP1 POP JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH3 0x5DF JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH3 0x583 JUMPI PUSH3 0x583 PUSH3 0x9EF JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH3 0x5A9 JUMPI PUSH3 0x5A9 PUSH3 0x9EF JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH3 0x5CA JUMPI POP PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 PUSH3 0x5D6 DUP2 PUSH3 0xA51 JUMP JUMPDEST SWAP2 POP POP PUSH3 0x564 JUMP JUMPDEST POP DUP1 PUSH3 0x5EC DUP2 PUSH3 0xA51 JUMP JUMPDEST SWAP2 POP POP PUSH3 0x53A JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH3 0x5F5 JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH3 0x62C JUMPI PUSH3 0x62C PUSH3 0x9EF JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH3 0x64C JUMPI POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH3 0x658 DUP2 PUSH3 0xA51 JUMP JUMPDEST SWAP2 POP POP PUSH3 0x602 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH3 0x702 JUMPI PUSH3 0x695 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH3 0x687 JUMPI PUSH3 0x687 PUSH3 0x9EF JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH3 0x7C0 JUMP JUMPDEST PUSH3 0x6ED JUMPI PUSH1 0x1 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH3 0x6B1 JUMPI PUSH3 0x6B1 PUSH3 0x9EF JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 SLOAD PUSH1 0x1 DUP2 ADD DUP5 SSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE SWAP2 SWAP1 SWAP3 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST DUP1 PUSH3 0x6F9 DUP2 PUSH3 0xA51 JUMP JUMPDEST SWAP2 POP POP PUSH3 0x664 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x727 JUMPI PUSH3 0x727 PUSH3 0x83F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH3 0x751 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH3 0x51C JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH3 0x776 JUMPI PUSH3 0x776 PUSH3 0x9EF JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH3 0x793 JUMPI PUSH3 0x793 PUSH3 0x9EF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 PUSH3 0x7B7 DUP2 PUSH3 0xA51 JUMP JUMPDEST SWAP2 POP POP PUSH3 0x757 JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH3 0x828 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 DUP3 DUP2 SLOAD DUP2 LT PUSH3 0x7EF JUMPI PUSH3 0x7EF PUSH3 0x9EF JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH3 0x813 JUMPI POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH3 0x81F DUP2 PUSH3 0xA51 JUMP JUMPDEST SWAP2 POP POP PUSH3 0x7C4 JUMP JUMPDEST POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1E84 DUP1 PUSH3 0xA84 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x86D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x886 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH3 0x89F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x8B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH3 0x8C9 JUMPI PUSH3 0x8C9 PUSH3 0x83F JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH3 0x8F1 JUMPI PUSH3 0x8F1 PUSH3 0x83F JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE DUP5 DUP3 ADD SWAP3 POP DUP4 DUP2 ADD DUP6 ADD SWAP2 DUP9 DUP4 GT ISZERO PUSH3 0x910 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP3 DUP6 LT ISZERO PUSH3 0x939 JUMPI PUSH3 0x929 DUP6 PUSH3 0x855 JUMP JUMPDEST DUP5 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP3 DUP6 ADD SWAP3 PUSH3 0x915 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x958 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x0 SWAP1 DUP3 SWAP1 PUSH1 0x20 DUP1 DUP7 ADD DUP5 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x994 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE SWAP4 DUP3 ADD SWAP4 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH3 0x96D JUMP JUMPDEST POP SWAP3 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x9E3 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH3 0x9BC JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH3 0xA31 JUMPI PUSH3 0xA31 PUSH3 0xA05 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH3 0xA49 JUMPI PUSH3 0xA49 PUSH3 0xA05 JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH3 0xA66 JUMPI PUSH3 0xA66 PUSH3 0xA05 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH3 0xA31 JUMPI PUSH3 0xA31 PUSH3 0xA05 JUMP INVALID PUSH1 0xE0 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x80 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0xA0 MSTORE PUSH1 0x3 PUSH1 0xC0 DUP2 SWAP1 MSTORE PUSH3 0x25 SWAP2 PUSH1 0xA SWAP2 PUSH3 0x276 JUMP JUMPDEST POP CALLVALUE DUP1 ISZERO PUSH3 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1E84 CODESIZE SUB DUP1 PUSH3 0x1E84 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x56 SWAP2 PUSH3 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH7 0x26282A37B5B2B7 PUSH1 0xC9 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x131415 PUSH1 0xEA SHL DUP2 MSTORE POP DUP2 DUP2 DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0xA5 SWAP2 SWAP1 PUSH3 0x4CE JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0xB4 DUP3 DUP3 PUSH3 0x4CE JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x5 SSTORE POP POP PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE POP DUP1 MLOAD DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0xED JUMPI PUSH3 0xED PUSH3 0x33A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH3 0x117 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP1 MLOAD PUSH3 0x12E SWAP2 PUSH1 0x6 SWAP2 PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH3 0x2CB JUMP JUMPDEST POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x14A JUMPI PUSH3 0x14A PUSH3 0x33A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH3 0x174 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP1 MLOAD PUSH3 0x18B SWAP2 PUSH1 0x7 SWAP2 PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH3 0x2CB JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x26D JUMPI PUSH1 0x0 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH3 0x1AF JUMPI PUSH3 0x1AF PUSH3 0x59A JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP1 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH3 0x1D0 JUMPI PUSH3 0x1D0 PUSH3 0x59A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x7 DUP4 DUP2 SLOAD DUP2 LT PUSH3 0x215 JUMPI PUSH3 0x215 PUSH3 0x59A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND OR SWAP1 SSTORE SWAP3 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x8 DUP3 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP5 SWAP1 SSTORE PUSH1 0xB SWAP1 SWAP3 MSTORE SWAP1 DUP2 KECCAK256 SSTORE DUP1 PUSH3 0x264 DUP2 PUSH3 0x5B0 JUMP JUMPDEST SWAP2 POP POP PUSH3 0x18F JUMP JUMPDEST POP POP POP PUSH3 0x5D8 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH3 0x2B9 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x2B9 JUMPI DUP3 MLOAD DUP3 SWAP1 PUSH1 0xFF AND SWAP1 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x297 JUMP JUMPDEST POP PUSH3 0x2C7 SWAP3 SWAP2 POP PUSH3 0x323 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH3 0x2B9 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x2B9 JUMPI DUP3 MLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH3 0x2EC JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x2C7 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x324 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x368 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x381 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x399 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x3AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH3 0x3C3 JUMPI PUSH3 0x3C3 PUSH3 0x33A JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH3 0x3EB JUMPI PUSH3 0x3EB PUSH3 0x33A JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE DUP5 DUP3 ADD SWAP3 POP DUP4 DUP2 ADD DUP6 ADD SWAP2 DUP9 DUP4 GT ISZERO PUSH3 0x40A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP3 DUP6 LT ISZERO PUSH3 0x433 JUMPI PUSH3 0x423 DUP6 PUSH3 0x350 JUMP JUMPDEST DUP5 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP3 DUP6 ADD SWAP3 PUSH3 0x40F JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x454 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x475 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x4C9 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x4A4 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x4C5 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x4B0 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x4EA JUMPI PUSH3 0x4EA PUSH3 0x33A JUMP JUMPDEST PUSH3 0x502 DUP2 PUSH3 0x4FB DUP5 SLOAD PUSH3 0x43F JUMP JUMPDEST DUP5 PUSH3 0x47B JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x53A JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x521 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x4C5 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x56B JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x54A JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x58A JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH3 0x5D1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0x189C DUP1 PUSH3 0x5E8 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xD5B271F5 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD5B271F5 EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2C3 JUMPI DUP1 PUSH4 0xE5A86833 EQ PUSH2 0x2FC JUMPI DUP1 PUSH4 0xEAA91A3D EQ PUSH2 0x30F JUMPI DUP1 PUSH4 0xFF9C8AC6 EQ PUSH2 0x322 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x262 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x27D JUMPI DUP1 PUSH4 0xCBD01FA4 EQ PUSH2 0x290 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B9 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1CC JUMPI DUP1 PUSH4 0x345F5557 EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x523FBA7F EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x6D069A67 EQ PUSH2 0x226 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x1371A957 EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0x1D978BD2 EQ PUSH2 0x1A4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x139 PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x1358 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x162 PUSH2 0x15D CALLDATASIZE PUSH1 0x4 PUSH2 0x13C2 JUMP JUMPDEST PUSH2 0x3C7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x146 JUMP JUMPDEST PUSH2 0x185 PUSH2 0x180 CALLDATASIZE PUSH1 0x4 PUSH2 0x13EC JUMP JUMPDEST PUSH2 0x3E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x1440 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x146 JUMP JUMPDEST PUSH2 0x1B7 PUSH2 0x1B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1530 JUMP JUMPDEST PUSH2 0x563 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x162 PUSH2 0x1C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x15F0 JUMP JUMPDEST PUSH2 0x863 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x146 JUMP JUMPDEST PUSH2 0x1EE PUSH2 0x1E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x13EC JUMP JUMPDEST PUSH2 0x887 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x146 JUMP JUMPDEST PUSH2 0x196 PUSH2 0x214 CALLDATASIZE PUSH1 0x4 PUSH2 0x162C JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1B7 PUSH2 0x234 CALLDATASIZE PUSH1 0x4 PUSH2 0x1647 JUMP JUMPDEST PUSH2 0x8B1 JUMP JUMPDEST PUSH2 0x196 PUSH2 0x247 CALLDATASIZE PUSH1 0x4 PUSH2 0x162C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x139 PUSH2 0xC31 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x278 CALLDATASIZE PUSH1 0x4 PUSH2 0x13C2 JUMP JUMPDEST PUSH2 0xC40 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x1EE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x196 PUSH2 0x29E CALLDATASIZE PUSH1 0x4 PUSH2 0x13EC JUMP JUMPDEST PUSH2 0xC4E JUMP JUMPDEST PUSH2 0x196 PUSH2 0x2B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x162C JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x196 PUSH2 0x2D1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1683 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1B7 PUSH2 0x30A CALLDATASIZE PUSH1 0x4 PUSH2 0x1530 JUMP JUMPDEST PUSH2 0xC6F JUMP JUMPDEST PUSH2 0x1EE PUSH2 0x31D CALLDATASIZE PUSH1 0x4 PUSH2 0x13EC JUMP JUMPDEST PUSH2 0xF78 JUMP JUMPDEST PUSH2 0x196 PUSH2 0x330 CALLDATASIZE PUSH1 0x4 PUSH2 0x1647 JUMP JUMPDEST PUSH2 0xF88 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x344 SWAP1 PUSH2 0x16B6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x370 SWAP1 PUSH2 0x16B6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3BD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x392 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3BD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3A0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x3D5 DUP2 DUP6 DUP6 PUSH2 0xFD8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x402 JUMPI PUSH2 0x402 PUSH2 0x145A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x42B JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 PUSH1 0xB PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0x448 JUMPI PUSH2 0x448 PUSH2 0x16F0 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD SWAP1 POP PUSH1 0x1 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x53B JUMPI PUSH1 0x0 PUSH1 0x7 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x48F JUMPI PUSH2 0x48F PUSH2 0x16F0 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 DUP4 MSTORE PUSH1 0xB SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD SWAP1 SWAP3 POP SWAP1 DUP2 DUP2 SUB PUSH2 0x4EE JUMPI PUSH1 0xA DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x4D1 JUMPI PUSH2 0x4D1 PUSH2 0x16F0 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP10 PUSH2 0x4E7 SWAP2 SWAP1 PUSH2 0x171C JUMP JUMPDEST SWAP1 POP PUSH2 0x506 JUMP JUMPDEST DUP2 PUSH2 0x4F9 DUP7 DUP12 PUSH2 0x171C JUMP JUMPDEST PUSH2 0x503 SWAP2 SWAP1 PUSH2 0x1733 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP1 DUP7 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x519 JUMPI PUSH2 0x519 PUSH2 0x16F0 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP POP POP POP DUP1 DUP1 PUSH2 0x533 SWAP1 PUSH2 0x1755 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x472 JUMP JUMPDEST POP DUP5 DUP3 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x550 JUMPI PUSH2 0x550 PUSH2 0x16F0 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x58D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x584 SWAP1 PUSH2 0x176E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x599 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST GT ISZERO PUSH2 0x61B JUMPI PUSH1 0xB PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0x5B7 JUMPI PUSH2 0x5B7 PUSH2 0x16F0 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD PUSH2 0x5E5 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST DUP4 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x5F8 JUMPI PUSH2 0x5F8 PUSH2 0x16F0 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x60A SWAP2 SWAP1 PUSH2 0x171C JUMP JUMPDEST PUSH2 0x614 SWAP2 SWAP1 PUSH2 0x1733 JUMP JUMPDEST SWAP1 POP PUSH2 0x639 JUMP JUMPDEST DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x62E JUMPI PUSH2 0x62E PUSH2 0x16F0 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x643 CALLER DUP3 PUSH2 0xFE5 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x823 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x664 JUMPI PUSH2 0x664 PUSH2 0x16F0 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x6AD JUMPI PUSH2 0x6AD PUSH2 0x16F0 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD CALLER ADDRESS DUP11 DUP9 DUP2 MLOAD DUP2 LT PUSH2 0x6F0 JUMPI PUSH2 0x6F0 PUSH2 0x16F0 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP7 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x74F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x773 SWAP2 SWAP1 PUSH2 0x17BE JUMP JUMPDEST PUSH2 0x7B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x151C985B9CD9995C881D1BDAD95B8C0819985A5B1959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x584 JUMP JUMPDEST DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x7CA JUMPI PUSH2 0x7CA PUSH2 0x16F0 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xB PUSH1 0x0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x806 SWAP2 SWAP1 PUSH2 0x17E0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 DUP1 PUSH2 0x81B SWAP1 PUSH2 0x1755 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x648 JUMP JUMPDEST POP PUSH32 0x7F63FC1AB7D4B22633CCA91CD87319F6E7B3229ACE7BAA90F114B15F33E847AE DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x855 SWAP3 SWAP2 SWAP1 PUSH2 0x17F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x871 DUP6 DUP3 DUP6 PUSH2 0x101B JUMP JUMPDEST PUSH2 0x87C DUP6 DUP6 DUP6 PUSH2 0x109A JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x897 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH2 0x8B9 PUSH2 0x10F9 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x908 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x53616D6520746F6B656E73 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x584 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x96F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x746F6B656E496E206E6F7420696E20695F746F6B656E735F6D61700000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x584 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x9D6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x746F6B656E4F7574206E6F7420696E20695F746F6B656E735F6D617000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x584 JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0xA14 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x16995C9BC8185B5BDD5B9D PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x584 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA21 DUP5 DUP5 DUP5 PUSH2 0xF88 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA77 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA9B SWAP2 SWAP1 PUSH2 0x17BE JUMP JUMPDEST PUSH2 0xAD5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x14DDD85C0811985A5B1959 PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x584 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB22 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB46 SWAP2 SWAP1 PUSH2 0x17BE JUMP JUMPDEST PUSH2 0xB80 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x14DDD85C0811985A5B1959 PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x584 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0xBA8 SWAP1 DUP5 SWAP1 PUSH2 0x1853 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xBD5 SWAP1 DUP5 SWAP1 PUSH2 0x17E0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE DUP3 SWAP2 DUP6 SWAP2 PUSH32 0xDB587D878116DF0BDD4FE154699AA2C5F439DA001CC811DFD05D9F589FC5A8EE SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH2 0xC2C PUSH1 0x1 PUSH1 0x5 SSTORE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x344 SWAP1 PUSH2 0x16B6 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x3D5 DUP2 DUP6 DUP6 PUSH2 0x109A JUMP JUMPDEST PUSH1 0xA DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xC5E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH2 0xC77 PUSH2 0x10F9 JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0xC98 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x584 SWAP1 PUSH2 0x176E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xCA4 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST GT ISZERO PUSH2 0xD26 JUMPI PUSH1 0xB PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0xCC2 JUMPI PUSH2 0xCC2 PUSH2 0x16F0 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD PUSH2 0xCF0 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST DUP4 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xD03 JUMPI PUSH2 0xD03 PUSH2 0x16F0 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0xD15 SWAP2 SWAP1 PUSH2 0x171C JUMP JUMPDEST PUSH2 0xD1F SWAP2 SWAP1 PUSH2 0x1733 JUMP JUMPDEST SWAP1 POP PUSH2 0xD44 JUMP JUMPDEST DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xD39 JUMPI PUSH2 0xD39 PUSH2 0x16F0 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0xD4E CALLER DUP3 PUSH2 0x1123 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xF2E JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xD6F JUMPI PUSH2 0xD6F PUSH2 0x16F0 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xDB8 JUMPI PUSH2 0xDB8 PUSH2 0x16F0 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD CALLER ADDRESS DUP11 DUP9 DUP2 MLOAD DUP2 LT PUSH2 0xDFB JUMPI PUSH2 0xDFB PUSH2 0x16F0 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP7 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE5A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE7E SWAP2 SWAP1 PUSH2 0x17BE JUMP JUMPDEST PUSH2 0xEC3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x151C985B9CD9995C881D1BDAD95B8C0819985A5B1959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x584 JUMP JUMPDEST DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xED5 JUMPI PUSH2 0xED5 PUSH2 0x16F0 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xB PUSH1 0x0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xF11 SWAP2 SWAP1 PUSH2 0x1853 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 DUP1 PUSH2 0xF26 SWAP1 PUSH2 0x1755 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xD53 JUMP JUMPDEST POP PUSH32 0xB1B40D6E24DB4F4144D860844C12EF0CEE735402334D5E8682124A4C03BCE4C7 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0xF60 SWAP3 SWAP2 SWAP1 PUSH2 0x17F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP PUSH2 0xF74 PUSH1 0x1 PUSH1 0x5 SSTORE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x7 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x897 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD SWAP3 DUP7 AND DUP3 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP3 PUSH2 0xFB9 DUP7 DUP4 PUSH2 0x1853 JUMP JUMPDEST PUSH2 0xFC3 DUP8 DUP6 PUSH2 0x171C JUMP JUMPDEST PUSH2 0xFCD SWAP2 SWAP1 PUSH2 0x1733 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xC2C DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1159 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x100F JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x584 JUMP JUMPDEST PUSH2 0xF74 DUP3 PUSH1 0x0 DUP4 PUSH2 0x122E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 LT ISZERO PUSH2 0x1094 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1085 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x584 JUMP JUMPDEST PUSH2 0x1094 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x1159 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x10C4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x584 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x10EE JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x584 JUMP JUMPDEST PUSH2 0xC2C DUP4 DUP4 DUP4 PUSH2 0x122E JUMP JUMPDEST PUSH1 0x2 PUSH1 0x5 SLOAD SUB PUSH2 0x111C JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x114D JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x584 JUMP JUMPDEST PUSH2 0xF74 PUSH1 0x0 DUP4 DUP4 PUSH2 0x122E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1183 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x584 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x11AD JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x584 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x1094 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1220 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1259 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x124E SWAP2 SWAP1 PUSH2 0x1853 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x12CB SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x12AC JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x584 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x12E7 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x1306 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x134B SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1385 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x1369 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x13BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13DE DUP4 PUSH2 0x13A6 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1435 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1419 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1453 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1405 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1499 JUMPI PUSH2 0x1499 PUSH2 0x145A JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x14BB JUMPI PUSH2 0x14BB PUSH2 0x145A JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x14D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x14EB PUSH2 0x14E6 DUP4 PUSH2 0x14A1 JUMP JUMPDEST PUSH2 0x1470 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x150A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x1525 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x150E JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1543 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x155B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x156F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x157F PUSH2 0x14E6 DUP4 PUSH2 0x14A1 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP10 DUP5 GT ISZERO PUSH2 0x159E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x15C3 JUMPI PUSH2 0x15B4 DUP7 PUSH2 0x13A6 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0x15A3 JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x15D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15E6 DUP6 DUP3 DUP7 ADD PUSH2 0x14C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1605 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x160E DUP5 PUSH2 0x13A6 JUMP JUMPDEST SWAP3 POP PUSH2 0x161C PUSH1 0x20 DUP6 ADD PUSH2 0x13A6 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x163E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1453 DUP3 PUSH2 0x13A6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x165C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1665 DUP5 PUSH2 0x13A6 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH2 0x167A PUSH1 0x40 DUP6 ADD PUSH2 0x13A6 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1696 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x169F DUP4 PUSH2 0x13A6 JUMP JUMPDEST SWAP2 POP PUSH2 0x16AD PUSH1 0x20 DUP5 ADD PUSH2 0x13A6 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x16CA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x16EA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x3DB JUMPI PUSH2 0x3DB PUSH2 0x1706 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1750 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1767 JUMPI PUSH2 0x1767 PUSH2 0x1706 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x30 SWAP1 DUP3 ADD MSTORE PUSH32 0x746865206C656E73206F6620616D6F756E7420616E6420746F6B656E5F616464 PUSH1 0x40 DUP3 ADD MSTORE PUSH16 0x81CDA1BDD5B1908189948195C5D585B PUSH1 0x82 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1453 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x3DB JUMPI PUSH2 0x3DB PUSH2 0x1706 JUMP JUMPDEST PUSH1 0x40 DUP1 DUP3 MSTORE DUP4 MLOAD SWAP1 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x20 SWAP1 PUSH1 0x60 DUP5 ADD SWAP1 DUP3 DUP8 ADD DUP5 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1835 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1810 JUMP JUMPDEST POP POP POP DUP4 DUP2 SUB DUP3 DUP6 ADD MSTORE PUSH2 0x1849 DUP2 DUP7 PUSH2 0x1405 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x3DB JUMPI PUSH2 0x3DB PUSH2 0x1706 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 0xED PUSH27 0x53E7A7FCFDC1042D914BBABABD5040A014F69D4FB7894BCE403D5C SWAP1 0x4C PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD PUSH26 0x8487FB0A51DBB80D0ADA7FF104D89D3B7AF5E24E9E6F0F7909DC DUP6 PUSH3 0xFB2564 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"80:3602:11:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_allUnique_6049":{"entryPoint":1315,"id":6049,"parameterSlots":1,"returnSlots":1},"@_copyArray_5924":{"entryPoint":1798,"id":5924,"parameterSlots":1,"returnSlots":1},"@_isTokenSupported_5956":{"entryPoint":1984,"id":5956,"parameterSlots":1,"returnSlots":1},"@_noZeroAddress_5991":{"entryPoint":1534,"id":5991,"parameterSlots":1,"returnSlots":1},"@_sortTokens_5843":{"entryPoint":974,"id":5843,"parameterSlots":1,"returnSlots":1},"@_updateSupportedTokens_5879":{"entryPoint":1633,"id":5879,"parameterSlots":1,"returnSlots":0},"@createPool_5724":{"entryPoint":427,"id":5724,"parameterSlots":1,"returnSlots":1},"@getPoolKey_5761":{"entryPoint":279,"id":5761,"parameterSlots":1,"returnSlots":1},"@getPool_5743":{"entryPoint":382,"id":5743,"parameterSlots":1,"returnSlots":1},"@pools_5628":{"entryPoint":null,"id":5628,"parameterSlots":0,"returnSlots":0},"@supportedTokens_5631":{"entryPoint":339,"id":5631,"parameterSlots":0,"returnSlots":0},"abi_decode_address":{"entryPoint":2133,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":2162,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32":{"entryPoint":2373,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":2399,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":2464,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_121ad12696f26263306b4d7c149d3459b95d65f99a2328e9fc856d8b66c27d24__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_468e0bfcb3e3ab0378a7d7aca9480e7f3c9394926fb120f85a78a58c132177eb__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_535d7636857fb1ab3a4f159f2a66b9583ce224510b4368fa2453e15bee0bc833__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a2f9d2cfeb937d9b3b8558f267a2117f3a09bfb914d45ceb20dc160f7bb83506__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":2669,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":2587,"id":null,"parameterSlots":2,"returnSlots":1},"decrement_t_uint256":{"entryPoint":2615,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":2641,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":2565,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":2543,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":2111,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:5624:16","statements":[{"nodeType":"YulBlock","src":"6:3:16","statements":[]},{"body":{"nodeType":"YulBlock","src":"46:95:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"63:1:16","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"70:3:16","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"75:10:16","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"66:3:16"},"nodeType":"YulFunctionCall","src":"66:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56:6:16"},"nodeType":"YulFunctionCall","src":"56:31:16"},"nodeType":"YulExpressionStatement","src":"56:31:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"106:4:16","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"96:6:16"},"nodeType":"YulFunctionCall","src":"96:15:16"},"nodeType":"YulExpressionStatement","src":"96:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"127:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"130:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"120:6:16"},"nodeType":"YulFunctionCall","src":"120:15:16"},"nodeType":"YulExpressionStatement","src":"120:15:16"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"14:127:16"},{"body":{"nodeType":"YulBlock","src":"195:124:16","statements":[{"nodeType":"YulAssignment","src":"205:29:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"227:6:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"214:12:16"},"nodeType":"YulFunctionCall","src":"214:20:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"205:5:16"}]},{"body":{"nodeType":"YulBlock","src":"297:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"306:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"309:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"299:6:16"},"nodeType":"YulFunctionCall","src":"299:12:16"},"nodeType":"YulExpressionStatement","src":"299:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"256:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"267:5:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"282:3:16","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"287:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"278:3:16"},"nodeType":"YulFunctionCall","src":"278:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"291:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"274:3:16"},"nodeType":"YulFunctionCall","src":"274:19:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"263:3:16"},"nodeType":"YulFunctionCall","src":"263:31:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"253:2:16"},"nodeType":"YulFunctionCall","src":"253:42:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"246:6:16"},"nodeType":"YulFunctionCall","src":"246:50:16"},"nodeType":"YulIf","src":"243:70:16"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"174:6:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"185:5:16","type":""}],"src":"146:173:16"},{"body":{"nodeType":"YulBlock","src":"419:1026:16","statements":[{"nodeType":"YulVariableDeclaration","src":"429:12:16","value":{"kind":"number","nodeType":"YulLiteral","src":"439:2:16","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"433:2:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"486:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"495:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"498:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"488:6:16"},"nodeType":"YulFunctionCall","src":"488:12:16"},"nodeType":"YulExpressionStatement","src":"488:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"461:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"470:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"457:3:16"},"nodeType":"YulFunctionCall","src":"457:23:16"},{"name":"_1","nodeType":"YulIdentifier","src":"482:2:16"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"453:3:16"},"nodeType":"YulFunctionCall","src":"453:32:16"},"nodeType":"YulIf","src":"450:52:16"},{"nodeType":"YulVariableDeclaration","src":"511:37:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"538:9:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"525:12:16"},"nodeType":"YulFunctionCall","src":"525:23:16"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"515:6:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"557:28:16","value":{"kind":"number","nodeType":"YulLiteral","src":"567:18:16","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"561:2:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"612:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"621:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"624:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"614:6:16"},"nodeType":"YulFunctionCall","src":"614:12:16"},"nodeType":"YulExpressionStatement","src":"614:12:16"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"600:6:16"},{"name":"_2","nodeType":"YulIdentifier","src":"608:2:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"597:2:16"},"nodeType":"YulFunctionCall","src":"597:14:16"},"nodeType":"YulIf","src":"594:34:16"},{"nodeType":"YulVariableDeclaration","src":"637:32:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"651:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"662:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"647:3:16"},"nodeType":"YulFunctionCall","src":"647:22:16"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"641:2:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"717:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"726:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"729:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"719:6:16"},"nodeType":"YulFunctionCall","src":"719:12:16"},"nodeType":"YulExpressionStatement","src":"719:12:16"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"696:2:16"},{"kind":"number","nodeType":"YulLiteral","src":"700:4:16","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"692:3:16"},"nodeType":"YulFunctionCall","src":"692:13:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"707:7:16"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"688:3:16"},"nodeType":"YulFunctionCall","src":"688:27:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"681:6:16"},"nodeType":"YulFunctionCall","src":"681:35:16"},"nodeType":"YulIf","src":"678:55:16"},{"nodeType":"YulVariableDeclaration","src":"742:26:16","value":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"765:2:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"752:12:16"},"nodeType":"YulFunctionCall","src":"752:16:16"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"746:2:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"791:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"793:16:16"},"nodeType":"YulFunctionCall","src":"793:18:16"},"nodeType":"YulExpressionStatement","src":"793:18:16"}]},"condition":{"arguments":[{"name":"_4","nodeType":"YulIdentifier","src":"783:2:16"},{"name":"_2","nodeType":"YulIdentifier","src":"787:2:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"780:2:16"},"nodeType":"YulFunctionCall","src":"780:10:16"},"nodeType":"YulIf","src":"777:36:16"},{"nodeType":"YulVariableDeclaration","src":"822:20:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"836:1:16","type":"","value":"5"},{"name":"_4","nodeType":"YulIdentifier","src":"839:2:16"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"832:3:16"},"nodeType":"YulFunctionCall","src":"832:10:16"},"variables":[{"name":"_5","nodeType":"YulTypedName","src":"826:2:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"851:23:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"871:2:16","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"865:5:16"},"nodeType":"YulFunctionCall","src":"865:9:16"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"855:6:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"883:56:16","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"905:6:16"},{"arguments":[{"arguments":[{"name":"_5","nodeType":"YulIdentifier","src":"921:2:16"},{"kind":"number","nodeType":"YulLiteral","src":"925:2:16","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"917:3:16"},"nodeType":"YulFunctionCall","src":"917:11:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"934:2:16","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"930:3:16"},"nodeType":"YulFunctionCall","src":"930:7:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"913:3:16"},"nodeType":"YulFunctionCall","src":"913:25:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"901:3:16"},"nodeType":"YulFunctionCall","src":"901:38:16"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"887:10:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"998:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1000:16:16"},"nodeType":"YulFunctionCall","src":"1000:18:16"},"nodeType":"YulExpressionStatement","src":"1000:18:16"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"957:10:16"},{"name":"_2","nodeType":"YulIdentifier","src":"969:2:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"954:2:16"},"nodeType":"YulFunctionCall","src":"954:18:16"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"977:10:16"},{"name":"memPtr","nodeType":"YulIdentifier","src":"989:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"974:2:16"},"nodeType":"YulFunctionCall","src":"974:22:16"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"951:2:16"},"nodeType":"YulFunctionCall","src":"951:46:16"},"nodeType":"YulIf","src":"948:72:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1036:2:16","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1040:10:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1029:6:16"},"nodeType":"YulFunctionCall","src":"1029:22:16"},"nodeType":"YulExpressionStatement","src":"1029:22:16"},{"nodeType":"YulVariableDeclaration","src":"1060:17:16","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"1071:6:16"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"1064:3:16","type":""}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1093:6:16"},{"name":"_4","nodeType":"YulIdentifier","src":"1101:2:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1086:6:16"},"nodeType":"YulFunctionCall","src":"1086:18:16"},"nodeType":"YulExpressionStatement","src":"1086:18:16"},{"nodeType":"YulAssignment","src":"1113:22:16","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1124:6:16"},{"name":"_1","nodeType":"YulIdentifier","src":"1132:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1120:3:16"},"nodeType":"YulFunctionCall","src":"1120:15:16"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"1113:3:16"}]},{"nodeType":"YulVariableDeclaration","src":"1144:34:16","value":{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"1166:2:16"},{"name":"_5","nodeType":"YulIdentifier","src":"1170:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1162:3:16"},"nodeType":"YulFunctionCall","src":"1162:11:16"},{"name":"_1","nodeType":"YulIdentifier","src":"1175:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1158:3:16"},"nodeType":"YulFunctionCall","src":"1158:20:16"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"1148:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"1210:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1219:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1222:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1212:6:16"},"nodeType":"YulFunctionCall","src":"1212:12:16"},"nodeType":"YulExpressionStatement","src":"1212:12:16"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"1193:6:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1201:7:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1190:2:16"},"nodeType":"YulFunctionCall","src":"1190:19:16"},"nodeType":"YulIf","src":"1187:39:16"},{"nodeType":"YulVariableDeclaration","src":"1235:22:16","value":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"1250:2:16"},{"name":"_1","nodeType":"YulIdentifier","src":"1254:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1246:3:16"},"nodeType":"YulFunctionCall","src":"1246:11:16"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"1239:3:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"1322:92:16","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1343:3:16"},{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1367:3:16"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1348:18:16"},"nodeType":"YulFunctionCall","src":"1348:23:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1336:6:16"},"nodeType":"YulFunctionCall","src":"1336:36:16"},"nodeType":"YulExpressionStatement","src":"1336:36:16"},{"nodeType":"YulAssignment","src":"1385:19:16","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1396:3:16"},{"name":"_1","nodeType":"YulIdentifier","src":"1401:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1392:3:16"},"nodeType":"YulFunctionCall","src":"1392:12:16"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"1385:3:16"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1277:3:16"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"1282:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1274:2:16"},"nodeType":"YulFunctionCall","src":"1274:15:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1290:23:16","statements":[{"nodeType":"YulAssignment","src":"1292:19:16","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1303:3:16"},{"name":"_1","nodeType":"YulIdentifier","src":"1308:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1299:3:16"},"nodeType":"YulFunctionCall","src":"1299:12:16"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"1292:3:16"}]}]},"pre":{"nodeType":"YulBlock","src":"1270:3:16","statements":[]},"src":"1266:148:16"},{"nodeType":"YulAssignment","src":"1423:16:16","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"1433:6:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1423:6:16"}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"385:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"396:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"408:6:16","type":""}],"src":"324:1121:16"},{"body":{"nodeType":"YulBlock","src":"1551:76:16","statements":[{"nodeType":"YulAssignment","src":"1561:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1573:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1584:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1569:3:16"},"nodeType":"YulFunctionCall","src":"1569:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1561:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1603:9:16"},{"name":"value0","nodeType":"YulIdentifier","src":"1614:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1596:6:16"},"nodeType":"YulFunctionCall","src":"1596:25:16"},"nodeType":"YulExpressionStatement","src":"1596:25:16"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1520:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1531:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1542:4:16","type":""}],"src":"1450:177:16"},{"body":{"nodeType":"YulBlock","src":"1702:110:16","statements":[{"body":{"nodeType":"YulBlock","src":"1748:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1757:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1760:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1750:6:16"},"nodeType":"YulFunctionCall","src":"1750:12:16"},"nodeType":"YulExpressionStatement","src":"1750:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1723:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"1732:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1719:3:16"},"nodeType":"YulFunctionCall","src":"1719:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"1744:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1715:3:16"},"nodeType":"YulFunctionCall","src":"1715:32:16"},"nodeType":"YulIf","src":"1712:52:16"},{"nodeType":"YulAssignment","src":"1773:33:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1796:9:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1783:12:16"},"nodeType":"YulFunctionCall","src":"1783:23:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1773:6:16"}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1668:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1679:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1691:6:16","type":""}],"src":"1632:180:16"},{"body":{"nodeType":"YulBlock","src":"1918:102:16","statements":[{"nodeType":"YulAssignment","src":"1928:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1940:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1951:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1936:3:16"},"nodeType":"YulFunctionCall","src":"1936:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1928:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1970:9:16"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1985:6:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2001:3:16","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2006:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1997:3:16"},"nodeType":"YulFunctionCall","src":"1997:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"2010:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1993:3:16"},"nodeType":"YulFunctionCall","src":"1993:19:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1981:3:16"},"nodeType":"YulFunctionCall","src":"1981:32:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1963:6:16"},"nodeType":"YulFunctionCall","src":"1963:51:16"},"nodeType":"YulExpressionStatement","src":"1963:51:16"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1887:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1898:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1909:4:16","type":""}],"src":"1817:203:16"},{"body":{"nodeType":"YulBlock","src":"2095:110:16","statements":[{"body":{"nodeType":"YulBlock","src":"2141:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2150:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2153:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2143:6:16"},"nodeType":"YulFunctionCall","src":"2143:12:16"},"nodeType":"YulExpressionStatement","src":"2143:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2116:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"2125:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2112:3:16"},"nodeType":"YulFunctionCall","src":"2112:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"2137:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2108:3:16"},"nodeType":"YulFunctionCall","src":"2108:32:16"},"nodeType":"YulIf","src":"2105:52:16"},{"nodeType":"YulAssignment","src":"2166:33:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2189:9:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2176:12:16"},"nodeType":"YulFunctionCall","src":"2176:23:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2166:6:16"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2061:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2072:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2084:6:16","type":""}],"src":"2025:180:16"},{"body":{"nodeType":"YulBlock","src":"2379:400:16","statements":[{"nodeType":"YulVariableDeclaration","src":"2389:16:16","value":{"name":"pos","nodeType":"YulIdentifier","src":"2402:3:16"},"variables":[{"name":"pos_1","nodeType":"YulTypedName","src":"2393:5:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2414:27:16","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2434:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2428:5:16"},"nodeType":"YulFunctionCall","src":"2428:13:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2418:6:16","type":""}]},{"nodeType":"YulAssignment","src":"2450:12:16","value":{"name":"pos","nodeType":"YulIdentifier","src":"2459:3:16"},"variableNames":[{"name":"pos_1","nodeType":"YulIdentifier","src":"2450:5:16"}]},{"nodeType":"YulVariableDeclaration","src":"2471:14:16","value":{"kind":"number","nodeType":"YulLiteral","src":"2481:4:16","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2475:2:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2494:29:16","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2512:6:16"},{"name":"_1","nodeType":"YulIdentifier","src":"2520:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2508:3:16"},"nodeType":"YulFunctionCall","src":"2508:15:16"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"2498:6:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2532:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"2541:1:16","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"2536:1:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"2600:152:16","statements":[{"expression":{"arguments":[{"name":"pos_1","nodeType":"YulIdentifier","src":"2621:5:16"},{"arguments":[{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"2638:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2632:5:16"},"nodeType":"YulFunctionCall","src":"2632:13:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2655:3:16","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2660:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2651:3:16"},"nodeType":"YulFunctionCall","src":"2651:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"2664:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2647:3:16"},"nodeType":"YulFunctionCall","src":"2647:19:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2628:3:16"},"nodeType":"YulFunctionCall","src":"2628:39:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2614:6:16"},"nodeType":"YulFunctionCall","src":"2614:54:16"},"nodeType":"YulExpressionStatement","src":"2614:54:16"},{"nodeType":"YulAssignment","src":"2681:23:16","value":{"arguments":[{"name":"pos_1","nodeType":"YulIdentifier","src":"2694:5:16"},{"name":"_1","nodeType":"YulIdentifier","src":"2701:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2690:3:16"},"nodeType":"YulFunctionCall","src":"2690:14:16"},"variableNames":[{"name":"pos_1","nodeType":"YulIdentifier","src":"2681:5:16"}]},{"nodeType":"YulAssignment","src":"2717:25:16","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"2731:6:16"},{"name":"_1","nodeType":"YulIdentifier","src":"2739:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2727:3:16"},"nodeType":"YulFunctionCall","src":"2727:15:16"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"2717:6:16"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2562:1:16"},{"name":"length","nodeType":"YulIdentifier","src":"2565:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2559:2:16"},"nodeType":"YulFunctionCall","src":"2559:13:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2573:18:16","statements":[{"nodeType":"YulAssignment","src":"2575:14:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2584:1:16"},{"kind":"number","nodeType":"YulLiteral","src":"2587:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2580:3:16"},"nodeType":"YulFunctionCall","src":"2580:9:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"2575:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"2555:3:16","statements":[]},"src":"2551:201:16"},{"nodeType":"YulAssignment","src":"2761:12:16","value":{"name":"pos_1","nodeType":"YulIdentifier","src":"2768:5:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2761:3:16"}]}]},"name":"abi_encode_tuple_packed_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2355:3:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2360:6:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2371:3:16","type":""}],"src":"2210:569:16"},{"body":{"nodeType":"YulBlock","src":"2958:167:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2975:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2986:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2968:6:16"},"nodeType":"YulFunctionCall","src":"2968:21:16"},"nodeType":"YulExpressionStatement","src":"2968:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3009:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3020:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3005:3:16"},"nodeType":"YulFunctionCall","src":"3005:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"3025:2:16","type":"","value":"17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2998:6:16"},"nodeType":"YulFunctionCall","src":"2998:30:16"},"nodeType":"YulExpressionStatement","src":"2998:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3048:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3059:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3044:3:16"},"nodeType":"YulFunctionCall","src":"3044:18:16"},{"hexValue":"4174206c65617374203220746f6b656e73","kind":"string","nodeType":"YulLiteral","src":"3064:19:16","type":"","value":"At least 2 tokens"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3037:6:16"},"nodeType":"YulFunctionCall","src":"3037:47:16"},"nodeType":"YulExpressionStatement","src":"3037:47:16"},{"nodeType":"YulAssignment","src":"3093:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3105:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3116:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3101:3:16"},"nodeType":"YulFunctionCall","src":"3101:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3093:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_121ad12696f26263306b4d7c149d3459b95d65f99a2328e9fc856d8b66c27d24__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2935:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2949:4:16","type":""}],"src":"2784:341:16"},{"body":{"nodeType":"YulBlock","src":"3304:166:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3321:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3332:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3314:6:16"},"nodeType":"YulFunctionCall","src":"3314:21:16"},"nodeType":"YulExpressionStatement","src":"3314:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3355:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3366:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3351:3:16"},"nodeType":"YulFunctionCall","src":"3351:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"3371:2:16","type":"","value":"16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3344:6:16"},"nodeType":"YulFunctionCall","src":"3344:30:16"},"nodeType":"YulExpressionStatement","src":"3344:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3394:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3405:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3390:3:16"},"nodeType":"YulFunctionCall","src":"3390:18:16"},{"hexValue":"4475706c696361746520746f6b656e73","kind":"string","nodeType":"YulLiteral","src":"3410:18:16","type":"","value":"Duplicate tokens"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3383:6:16"},"nodeType":"YulFunctionCall","src":"3383:46:16"},"nodeType":"YulExpressionStatement","src":"3383:46:16"},{"nodeType":"YulAssignment","src":"3438:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3450:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3461:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3446:3:16"},"nodeType":"YulFunctionCall","src":"3446:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3438:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_468e0bfcb3e3ab0378a7d7aca9480e7f3c9394926fb120f85a78a58c132177eb__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3281:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3295:4:16","type":""}],"src":"3130:340:16"},{"body":{"nodeType":"YulBlock","src":"3649:162:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3666:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3677:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3659:6:16"},"nodeType":"YulFunctionCall","src":"3659:21:16"},"nodeType":"YulExpressionStatement","src":"3659:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3700:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3711:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3696:3:16"},"nodeType":"YulFunctionCall","src":"3696:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"3716:2:16","type":"","value":"12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3689:6:16"},"nodeType":"YulFunctionCall","src":"3689:30:16"},"nodeType":"YulExpressionStatement","src":"3689:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3739:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3750:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3735:3:16"},"nodeType":"YulFunctionCall","src":"3735:18:16"},{"hexValue":"5a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"3755:14:16","type":"","value":"Zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3728:6:16"},"nodeType":"YulFunctionCall","src":"3728:42:16"},"nodeType":"YulExpressionStatement","src":"3728:42:16"},{"nodeType":"YulAssignment","src":"3779:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3791:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3802:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3787:3:16"},"nodeType":"YulFunctionCall","src":"3787:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3779:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_535d7636857fb1ab3a4f159f2a66b9583ce224510b4368fa2453e15bee0bc833__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3626:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3640:4:16","type":""}],"src":"3475:336:16"},{"body":{"nodeType":"YulBlock","src":"3990:161:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4007:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4018:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4000:6:16"},"nodeType":"YulFunctionCall","src":"4000:21:16"},"nodeType":"YulExpressionStatement","src":"4000:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4041:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4052:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4037:3:16"},"nodeType":"YulFunctionCall","src":"4037:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"4057:2:16","type":"","value":"11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4030:6:16"},"nodeType":"YulFunctionCall","src":"4030:30:16"},"nodeType":"YulExpressionStatement","src":"4030:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4080:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4091:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4076:3:16"},"nodeType":"YulFunctionCall","src":"4076:18:16"},{"hexValue":"506f6f6c20657869737473","kind":"string","nodeType":"YulLiteral","src":"4096:13:16","type":"","value":"Pool exists"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4069:6:16"},"nodeType":"YulFunctionCall","src":"4069:41:16"},"nodeType":"YulExpressionStatement","src":"4069:41:16"},{"nodeType":"YulAssignment","src":"4119:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4131:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4142:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4127:3:16"},"nodeType":"YulFunctionCall","src":"4127:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4119:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_a2f9d2cfeb937d9b3b8558f267a2117f3a09bfb914d45ceb20dc160f7bb83506__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3967:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3981:4:16","type":""}],"src":"3816:335:16"},{"body":{"nodeType":"YulBlock","src":"4307:507:16","statements":[{"nodeType":"YulVariableDeclaration","src":"4317:12:16","value":{"kind":"number","nodeType":"YulLiteral","src":"4327:2:16","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"4321:2:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4338:32:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4356:9:16"},{"name":"_1","nodeType":"YulIdentifier","src":"4367:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4352:3:16"},"nodeType":"YulFunctionCall","src":"4352:18:16"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"4342:6:16","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4386:9:16"},{"name":"_1","nodeType":"YulIdentifier","src":"4397:2:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4379:6:16"},"nodeType":"YulFunctionCall","src":"4379:21:16"},"nodeType":"YulExpressionStatement","src":"4379:21:16"},{"nodeType":"YulVariableDeclaration","src":"4409:17:16","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"4420:6:16"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"4413:3:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4435:27:16","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4455:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4449:5:16"},"nodeType":"YulFunctionCall","src":"4449:13:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4439:6:16","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"4478:6:16"},{"name":"length","nodeType":"YulIdentifier","src":"4486:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4471:6:16"},"nodeType":"YulFunctionCall","src":"4471:22:16"},"nodeType":"YulExpressionStatement","src":"4471:22:16"},{"nodeType":"YulAssignment","src":"4502:25:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4513:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4524:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4509:3:16"},"nodeType":"YulFunctionCall","src":"4509:18:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4502:3:16"}]},{"nodeType":"YulVariableDeclaration","src":"4536:29:16","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4554:6:16"},{"name":"_1","nodeType":"YulIdentifier","src":"4562:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4550:3:16"},"nodeType":"YulFunctionCall","src":"4550:15:16"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"4540:6:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4574:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"4583:1:16","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"4578:1:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"4642:146:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4663:3:16"},{"arguments":[{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"4678:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4672:5:16"},"nodeType":"YulFunctionCall","src":"4672:13:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4695:3:16","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"4700:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4691:3:16"},"nodeType":"YulFunctionCall","src":"4691:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"4704:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4687:3:16"},"nodeType":"YulFunctionCall","src":"4687:19:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4668:3:16"},"nodeType":"YulFunctionCall","src":"4668:39:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4656:6:16"},"nodeType":"YulFunctionCall","src":"4656:52:16"},"nodeType":"YulExpressionStatement","src":"4656:52:16"},{"nodeType":"YulAssignment","src":"4721:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4732:3:16"},{"name":"_1","nodeType":"YulIdentifier","src":"4737:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4728:3:16"},"nodeType":"YulFunctionCall","src":"4728:12:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4721:3:16"}]},{"nodeType":"YulAssignment","src":"4753:25:16","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"4767:6:16"},{"name":"_1","nodeType":"YulIdentifier","src":"4775:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4763:3:16"},"nodeType":"YulFunctionCall","src":"4763:15:16"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"4753:6:16"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4604:1:16"},{"name":"length","nodeType":"YulIdentifier","src":"4607:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4601:2:16"},"nodeType":"YulFunctionCall","src":"4601:13:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4615:18:16","statements":[{"nodeType":"YulAssignment","src":"4617:14:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4626:1:16"},{"kind":"number","nodeType":"YulLiteral","src":"4629:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4622:3:16"},"nodeType":"YulFunctionCall","src":"4622:9:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"4617:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"4597:3:16","statements":[]},"src":"4593:195:16"},{"nodeType":"YulAssignment","src":"4797:11:16","value":{"name":"pos","nodeType":"YulIdentifier","src":"4805:3:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4797:4:16"}]}]},"name":"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4276:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4287:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4298:4:16","type":""}],"src":"4156:658:16"},{"body":{"nodeType":"YulBlock","src":"4851:95:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4868:1:16","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4875:3:16","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"4880:10:16","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4871:3:16"},"nodeType":"YulFunctionCall","src":"4871:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4861:6:16"},"nodeType":"YulFunctionCall","src":"4861:31:16"},"nodeType":"YulExpressionStatement","src":"4861:31:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4908:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4911:4:16","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4901:6:16"},"nodeType":"YulFunctionCall","src":"4901:15:16"},"nodeType":"YulExpressionStatement","src":"4901:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4932:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4935:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4925:6:16"},"nodeType":"YulFunctionCall","src":"4925:15:16"},"nodeType":"YulExpressionStatement","src":"4925:15:16"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"4819:127:16"},{"body":{"nodeType":"YulBlock","src":"4983:95:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5000:1:16","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5007:3:16","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"5012:10:16","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5003:3:16"},"nodeType":"YulFunctionCall","src":"5003:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4993:6:16"},"nodeType":"YulFunctionCall","src":"4993:31:16"},"nodeType":"YulExpressionStatement","src":"4993:31:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5040:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5043:4:16","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5033:6:16"},"nodeType":"YulFunctionCall","src":"5033:15:16"},"nodeType":"YulExpressionStatement","src":"5033:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5064:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5067:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5057:6:16"},"nodeType":"YulFunctionCall","src":"5057:15:16"},"nodeType":"YulExpressionStatement","src":"5057:15:16"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"4951:127:16"},{"body":{"nodeType":"YulBlock","src":"5132:79:16","statements":[{"nodeType":"YulAssignment","src":"5142:17:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5154:1:16"},{"name":"y","nodeType":"YulIdentifier","src":"5157:1:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5150:3:16"},"nodeType":"YulFunctionCall","src":"5150:9:16"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"5142:4:16"}]},{"body":{"nodeType":"YulBlock","src":"5183:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"5185:16:16"},"nodeType":"YulFunctionCall","src":"5185:18:16"},"nodeType":"YulExpressionStatement","src":"5185:18:16"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"5174:4:16"},{"name":"x","nodeType":"YulIdentifier","src":"5180:1:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5171:2:16"},"nodeType":"YulFunctionCall","src":"5171:11:16"},"nodeType":"YulIf","src":"5168:37:16"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"5114:1:16","type":""},{"name":"y","nodeType":"YulTypedName","src":"5117:1:16","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"5123:4:16","type":""}],"src":"5083:128:16"},{"body":{"nodeType":"YulBlock","src":"5263:89:16","statements":[{"body":{"nodeType":"YulBlock","src":"5290:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"5292:16:16"},"nodeType":"YulFunctionCall","src":"5292:18:16"},"nodeType":"YulExpressionStatement","src":"5292:18:16"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5283:5:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5276:6:16"},"nodeType":"YulFunctionCall","src":"5276:13:16"},"nodeType":"YulIf","src":"5273:39:16"},{"nodeType":"YulAssignment","src":"5321:25:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5332:5:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5343:1:16","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5339:3:16"},"nodeType":"YulFunctionCall","src":"5339:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5328:3:16"},"nodeType":"YulFunctionCall","src":"5328:18:16"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5321:3:16"}]}]},"name":"decrement_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5245:5:16","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5255:3:16","type":""}],"src":"5216:136:16"},{"body":{"nodeType":"YulBlock","src":"5404:88:16","statements":[{"body":{"nodeType":"YulBlock","src":"5435:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"5437:16:16"},"nodeType":"YulFunctionCall","src":"5437:18:16"},"nodeType":"YulExpressionStatement","src":"5437:18:16"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5420:5:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5431:1:16","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5427:3:16"},"nodeType":"YulFunctionCall","src":"5427:6:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5417:2:16"},"nodeType":"YulFunctionCall","src":"5417:17:16"},"nodeType":"YulIf","src":"5414:43:16"},{"nodeType":"YulAssignment","src":"5466:20:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5477:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"5484:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5473:3:16"},"nodeType":"YulFunctionCall","src":"5473:13:16"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5466:3:16"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5386:5:16","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5396:3:16","type":""}],"src":"5357:135:16"},{"body":{"nodeType":"YulBlock","src":"5545:77:16","statements":[{"nodeType":"YulAssignment","src":"5555:16:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5566:1:16"},{"name":"y","nodeType":"YulIdentifier","src":"5569:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5562:3:16"},"nodeType":"YulFunctionCall","src":"5562:9:16"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"5555:3:16"}]},{"body":{"nodeType":"YulBlock","src":"5594:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"5596:16:16"},"nodeType":"YulFunctionCall","src":"5596:18:16"},"nodeType":"YulExpressionStatement","src":"5596:18:16"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5586:1:16"},{"name":"sum","nodeType":"YulIdentifier","src":"5589:3:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5583:2:16"},"nodeType":"YulFunctionCall","src":"5583:10:16"},"nodeType":"YulIf","src":"5580:36:16"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"5528:1:16","type":""},{"name":"y","nodeType":"YulTypedName","src":"5531:1:16","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"5537:3:16","type":""}],"src":"5497:125:16"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := calldataload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := shl(5, _4)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(_5, 63), not(31)))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        let dst := memPtr\n        mstore(memPtr, _4)\n        dst := add(memPtr, _1)\n        let srcEnd := add(add(_3, _5), _1)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_3, _1)\n        for { } lt(src, srcEnd) { src := add(src, _1) }\n        {\n            mstore(dst, abi_decode_address(src))\n            dst := add(dst, _1)\n        }\n        value0 := memPtr\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_packed_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let pos_1 := pos\n        let length := mload(value0)\n        pos_1 := pos\n        let _1 := 0x20\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos_1, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos_1 := add(pos_1, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos_1\n    }\n    function abi_encode_tuple_t_stringliteral_121ad12696f26263306b4d7c149d3459b95d65f99a2328e9fc856d8b66c27d24__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"At least 2 tokens\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_468e0bfcb3e3ab0378a7d7aca9480e7f3c9394926fb120f85a78a58c132177eb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Duplicate tokens\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_535d7636857fb1ab3a4f159f2a66b9583ce224510b4368fa2453e15bee0bc833__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"Zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a2f9d2cfeb937d9b3b8558f267a2117f3a09bfb914d45ceb20dc160f7bb83506__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 11)\n        mstore(add(headStart, 64), \"Pool exists\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n}","id":16,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"60806040523480156200001157600080fd5b50600436106200005e5760003560e01c80637ee5542a1462000063578063b5217bb4146200008d578063c625562614620000d2578063ec00710514620000e9578063f0a87c9f1462000100575b600080fd5b6200007a6200007436600462000872565b62000117565b6040519081526020015b60405180910390f35b620000b96200009e36600462000945565b6000602081905290815260409020546001600160a01b031681565b6040516001600160a01b03909116815260200162000084565b620000b9620000e336600462000945565b62000153565b620000b9620000fa36600462000872565b6200017e565b620000b96200011136600462000872565b620001ab565b60006200012482620003ce565b6040516020016200013691906200095f565b604051602081830303815290604052805190602001209050919050565b600181815481106200016457600080fd5b6000918252602090912001546001600160a01b0316905081565b6000806200018c8362000117565b6000908152602081905260409020546001600160a01b03169392505050565b6000600282511015620001f95760405162461bcd60e51b81526020600482015260116024820152704174206c65617374203220746f6b656e7360781b60448201526064015b60405180910390fd5b620002048262000523565b620002455760405162461bcd60e51b815260206004820152601060248201526f4475706c696361746520746f6b656e7360801b6044820152606401620001f0565b6200025082620005fe565b6200028d5760405162461bcd60e51b815260206004820152600c60248201526b5a65726f206164647265737360a01b6044820152606401620001f0565b60006200029a83620003ce565b9050600081604051602001620002b191906200095f565b60408051601f1981840301815291815281516020928301206000818152928390529120549091506001600160a01b0316156200031e5760405162461bcd60e51b815260206004820152600b60248201526a506f6f6c2065786973747360a81b6044820152606401620001f0565b6000826040516200032f9062000831565b6200033b9190620009a0565b604051809103906000f08015801562000358573d6000803e3d6000fd5b50600083815260208190526040902080546001600160a01b0319166001600160a01b03831617905590506200038d8362000661565b7f26bf75378c99ddaf6cfa3d759c5ca947d22d1169b02be2cd17d49b102a1ca2fd85604051620003be9190620009a0565b60405180910390a1949350505050565b60606000620003dd8362000706565b905060015b81518110156200051c576000828281518110620004035762000403620009ef565b6020026020010151905060008290505b6000811180156200045d57506001600160a01b038216846200043760018462000a1b565b815181106200044a576200044a620009ef565b60200260200101516001600160a01b0316115b15620004ce57836200047160018362000a1b565b81518110620004845762000484620009ef565b6020026020010151848281518110620004a157620004a1620009ef565b6001600160a01b039092166020928302919091019091015280620004c58162000a37565b91505062000413565b81848281518110620004e457620004e4620009ef565b60200260200101906001600160a01b031690816001600160a01b03168152505050508080620005139062000a51565b915050620003e2565b5092915050565b600060018251116200053757506001919050565b60005b600183516200054a919062000a1b565b811015620005f55760006200056182600162000a6d565b90505b8351811015620005df57838181518110620005835762000583620009ef565b60200260200101516001600160a01b0316848381518110620005a957620005a9620009ef565b60200260200101516001600160a01b031603620005ca575060009392505050565b80620005d68162000a51565b91505062000564565b5080620005ec8162000a51565b9150506200053a565b50600192915050565b6000805b8251811015620005f55760006001600160a01b03168382815181106200062c576200062c620009ef565b60200260200101516001600160a01b0316036200064c5750600092915050565b80620006588162000a51565b91505062000602565b60005b8151811015620007025762000695828281518110620006875762000687620009ef565b6020026020010151620007c0565b620006ed576001828281518110620006b157620006b1620009ef565b60209081029190910181015182546001810184556000938452919092200180546001600160a01b0319166001600160a01b039092169190911790555b80620006f98162000a51565b91505062000664565b5050565b60606000825167ffffffffffffffff8111156200072757620007276200083f565b60405190808252806020026020018201604052801562000751578160200160208202803683370190505b50905060005b83518110156200051c57838181518110620007765762000776620009ef565b6020026020010151828281518110620007935762000793620009ef565b6001600160a01b039092166020928302919091019091015280620007b78162000a51565b91505062000757565b6000805b6001548110156200082857826001600160a01b031660018281548110620007ef57620007ef620009ef565b6000918252602090912001546001600160a01b031603620008135750600192915050565b806200081f8162000a51565b915050620007c4565b50600092915050565b611e848062000a8483390190565b634e487b7160e01b600052604160045260246000fd5b80356001600160a01b03811681146200086d57600080fd5b919050565b600060208083850312156200088657600080fd5b823567ffffffffffffffff808211156200089f57600080fd5b818501915085601f830112620008b457600080fd5b813581811115620008c957620008c96200083f565b8060051b604051601f19603f83011681018181108582111715620008f157620008f16200083f565b6040529182528482019250838101850191888311156200091057600080fd5b938501935b828510156200093957620009298562000855565b8452938501939285019262000915565b98975050505050505050565b6000602082840312156200095857600080fd5b5035919050565b815160009082906020808601845b83811015620009945781516001600160a01b0316855293820193908201906001016200096d565b50929695505050505050565b6020808252825182820181905260009190848201906040850190845b81811015620009e35783516001600160a01b031683529284019291840191600101620009bc565b50909695505050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8181038181111562000a315762000a3162000a05565b92915050565b60008162000a495762000a4962000a05565b506000190190565b60006001820162000a665762000a6662000a05565b5060010190565b8082018082111562000a315762000a3162000a0556fe60e060405260016080908152600260a052600360c08190526200002591600a9162000276565b503480156200003357600080fd5b5060405162001e8438038062001e8483398101604081905262000056916200036d565b6040518060400160405280600781526020016626282a37b5b2b760c91b8152506040518060400160405280600381526020016213141560ea1b81525081818160039081620000a59190620004ce565b506004620000b48282620004ce565b505060016005555050600980546001600160a01b03191633179055508051806001600160401b03811115620000ed57620000ed6200033a565b60405190808252806020026020018201604052801562000117578160200160208202803683370190505b5080516200012e91600691602090910190620002cb565b50806001600160401b038111156200014a576200014a6200033a565b60405190808252806020026020018201604052801562000174578160200160208202803683370190505b5080516200018b91600791602090910190620002cb565b5060005b818110156200026d576000838281518110620001af57620001af6200059a565b602002602001015190508060068381548110620001d057620001d06200059a565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555080600783815481106200021557620002156200059a565b600091825260208083209190910180546001600160a01b0319166001600160a01b03948516179055929091168152600882526040808220849055600b90925290812055806200026481620005b0565b9150506200018f565b505050620005d8565b828054828255906000526020600020908101928215620002b9579160200282015b82811115620002b9578251829060ff1690559160200191906001019062000297565b50620002c792915062000323565b5090565b828054828255906000526020600020908101928215620002b9579160200282015b82811115620002b957825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190620002ec565b5b80821115620002c7576000815560010162000324565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b03811681146200036857600080fd5b919050565b600060208083850312156200038157600080fd5b82516001600160401b03808211156200039957600080fd5b818501915085601f830112620003ae57600080fd5b815181811115620003c357620003c36200033a565b8060051b604051601f19603f83011681018181108582111715620003eb57620003eb6200033a565b6040529182528482019250838101850191888311156200040a57600080fd5b938501935b828510156200043357620004238562000350565b845293850193928501926200040f565b98975050505050505050565b600181811c908216806200045457607f821691505b6020821081036200047557634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620004c957600081815260208120601f850160051c81016020861015620004a45750805b601f850160051c820191505b81811015620004c557828155600101620004b0565b5050505b505050565b81516001600160401b03811115620004ea57620004ea6200033a565b6200050281620004fb84546200043f565b846200047b565b602080601f8311600181146200053a5760008415620005215750858301515b600019600386901b1c1916600185901b178555620004c5565b600085815260208120601f198616915b828110156200056b578886015182559484019460019091019084016200054a565b50858210156200058a5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052603260045260246000fd5b600060018201620005d157634e487b7160e01b600052601160045260246000fd5b5060010190565b61189c80620005e86000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c806370a08231116100ad578063d5b271f511610071578063d5b271f5146102a3578063dd62ed3e146102c3578063e5a86833146102fc578063eaa91a3d1461030f578063ff9c8ac61461032257600080fd5b806370a082311461023957806395d89b4114610262578063a9059cbb1461026a578063c45a01551461027d578063cbd01fa41461029057600080fd5b806323b872dd116100f457806323b872dd146101b9578063313ce567146101cc578063345f5557146101db578063523fba7f146102065780636d069a671461022657600080fd5b806306fdde0314610131578063095ea7b31461014f5780631371a9571461017257806318160ddd146101925780631d978bd2146101a4575b600080fd5b610139610335565b6040516101469190611358565b60405180910390f35b61016261015d3660046113c2565b6103c7565b6040519015158152602001610146565b6101856101803660046113ec565b6103e1565b6040516101469190611440565b6002545b604051908152602001610146565b6101b76101b2366004611530565b610563565b005b6101626101c73660046115f0565b610863565b60405160128152602001610146565b6101ee6101e93660046113ec565b610887565b6040516001600160a01b039091168152602001610146565b61019661021436600461162c565b600b6020526000908152604090205481565b6101b7610234366004611647565b6108b1565b61019661024736600461162c565b6001600160a01b031660009081526020819052604090205490565b610139610c31565b6101626102783660046113c2565b610c40565b6009546101ee906001600160a01b031681565b61019661029e3660046113ec565b610c4e565b6101966102b136600461162c565b60086020526000908152604090205481565b6101966102d1366004611683565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6101b761030a366004611530565b610c6f565b6101ee61031d3660046113ec565b610f78565b610196610330366004611647565b610f88565b606060038054610344906116b6565b80601f0160208091040260200160405190810160405280929190818152602001828054610370906116b6565b80156103bd5780601f10610392576101008083540402835291602001916103bd565b820191906000526020600020905b8154815290600101906020018083116103a057829003601f168201915b5050505050905090565b6000336103d5818585610fd8565b60019150505b92915050565b60075460609060008167ffffffffffffffff8111156104025761040261145a565b60405190808252806020026020018201604052801561042b578160200160208202803683370190505b5090506000600b60006007600081548110610448576104486116f0565b60009182526020808320909101546001600160a01b03168352820192909252604001902054905060015b8381101561053b5760006007828154811061048f5761048f6116f0565b60009182526020808320909101546001600160a01b0316808352600b9091526040822054909250908181036104ee57600a84815481106104d1576104d16116f0565b9060005260206000200154896104e7919061171c565b9050610506565b816104f9868b61171c565b6105039190611733565b90505b80868581518110610519576105196116f0565b602002602001018181525050505050808061053390611755565b915050610472565b508482600081518110610550576105506116f0565b6020908102919091010152509392505050565b805182511461058d5760405162461bcd60e51b81526004016105849061176e565b60405180910390fd5b60008061059960025490565b111561061b57600b600060076000815481106105b7576105b76116f0565b60009182526020808320909101546001600160a01b031683528201929092526040019020546105e560025490565b836000815181106105f8576105f86116f0565b602002602001015161060a919061171c565b6106149190611733565b9050610639565b8160008151811061062e5761062e6116f0565b602002602001015190505b6106433382610fe5565b825160005b81811015610823576000858281518110610664576106646116f0565b60200260200101519050600060086000836001600160a01b03166001600160a01b031681526020019081526020016000205490506000600682815481106106ad576106ad6116f0565b9060005260206000200160009054906101000a90046001600160a01b03169050806001600160a01b03166323b872dd33308a88815181106106f0576106f06116f0565b60209081029190910101516040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015260448201526064016020604051808303816000875af115801561074f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077391906117be565b6107b85760405162461bcd60e51b8152602060048201526016602482015275151c985b9cd9995c881d1bdad95b8c0819985a5b195960521b6044820152606401610584565b8684815181106107ca576107ca6116f0565b6020026020010151600b6000856001600160a01b03166001600160a01b03168152602001908152602001600020600082825461080691906117e0565b92505081905550505050808061081b90611755565b915050610648565b507f7f63fc1ab7d4b22633cca91cd87319f6e7b3229ace7baa90f114b15f33e847ae84846040516108559291906117f3565b60405180910390a150505050565b60003361087185828561101b565b61087c85858561109a565b506001949350505050565b6006818154811061089757600080fd5b6000918252602090912001546001600160a01b0316905081565b6108b96110f9565b806001600160a01b0316836001600160a01b0316036109085760405162461bcd60e51b815260206004820152600b60248201526a53616d6520746f6b656e7360a81b6044820152606401610584565b6001600160a01b038316600090815260086020526040812054900361096f5760405162461bcd60e51b815260206004820152601b60248201527f746f6b656e496e206e6f7420696e20695f746f6b656e735f6d617000000000006044820152606401610584565b6001600160a01b03811660009081526008602052604081205490036109d65760405162461bcd60e51b815260206004820152601c60248201527f746f6b656e4f7574206e6f7420696e20695f746f6b656e735f6d6170000000006044820152606401610584565b60008211610a145760405162461bcd60e51b815260206004820152600b60248201526a16995c9bc8185b5bdd5b9d60aa1b6044820152606401610584565b6000610a21848484610f88565b6040516323b872dd60e01b8152336004820152306024820152604481018590529091506001600160a01b038516906323b872dd906064016020604051808303816000875af1158015610a77573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9b91906117be565b610ad55760405162461bcd60e51b815260206004820152600b60248201526a14ddd85c0811985a5b195960aa1b6044820152606401610584565b60405163a9059cbb60e01b8152336004820152602481018290526001600160a01b0383169063a9059cbb906044016020604051808303816000875af1158015610b22573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b4691906117be565b610b805760405162461bcd60e51b815260206004820152600b60248201526a14ddd85c0811985a5b195960aa1b6044820152606401610584565b6001600160a01b0384166000908152600b602052604081208054859290610ba8908490611853565b90915550506001600160a01b0382166000908152600b602052604081208054839290610bd59084906117e0565b9091555050604080516001600160a01b03808716825284166020820152829185917fdb587d878116df0bdd4fe154699aa2c5f439da001cc811dfd05d9f589fc5a8ee910160405180910390a350610c2c6001600555565b505050565b606060048054610344906116b6565b6000336103d581858561109a565b600a8181548110610c5e57600080fd5b600091825260209091200154905081565b610c776110f9565b8051825114610c985760405162461bcd60e51b81526004016105849061176e565b600080610ca460025490565b1115610d2657600b60006007600081548110610cc257610cc26116f0565b60009182526020808320909101546001600160a01b03168352820192909252604001902054610cf060025490565b83600081518110610d0357610d036116f0565b6020026020010151610d15919061171c565b610d1f9190611733565b9050610d44565b81600081518110610d3957610d396116f0565b602002602001015190505b610d4e3382611123565b825160005b81811015610f2e576000858281518110610d6f57610d6f6116f0565b60200260200101519050600060086000836001600160a01b03166001600160a01b03168152602001908152602001600020549050600060068281548110610db857610db86116f0565b9060005260206000200160009054906101000a90046001600160a01b03169050806001600160a01b03166323b872dd33308a8881518110610dfb57610dfb6116f0565b60209081029190910101516040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015260448201526064016020604051808303816000875af1158015610e5a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e7e91906117be565b610ec35760405162461bcd60e51b8152602060048201526016602482015275151c985b9cd9995c881d1bdad95b8c0819985a5b195960521b6044820152606401610584565b868481518110610ed557610ed56116f0565b6020026020010151600b6000856001600160a01b03166001600160a01b031681526020019081526020016000206000828254610f119190611853565b925050819055505050508080610f2690611755565b915050610d53565b507fb1b40d6e24db4f4144d860844c12ef0cee735402334d5e8682124a4c03bce4c78484604051610f609291906117f3565b60405180910390a15050610f746001600555565b5050565b6007818154811061089757600080fd5b6001600160a01b038082166000908152600b602052604080822054928616825281205490919082610fb98683611853565b610fc3878561171c565b610fcd9190611733565b979650505050505050565b610c2c8383836001611159565b6001600160a01b03821661100f57604051634b637e8f60e11b815260006004820152602401610584565b610f748260008361122e565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811015611094578181101561108557604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610584565b61109484848484036000611159565b50505050565b6001600160a01b0383166110c457604051634b637e8f60e11b815260006004820152602401610584565b6001600160a01b0382166110ee5760405163ec442f0560e01b815260006004820152602401610584565b610c2c83838361122e565b60026005540361111c57604051633ee5aeb560e01b815260040160405180910390fd5b6002600555565b6001600160a01b03821661114d5760405163ec442f0560e01b815260006004820152602401610584565b610f746000838361122e565b6001600160a01b0384166111835760405163e602df0560e01b815260006004820152602401610584565b6001600160a01b0383166111ad57604051634a1406b160e11b815260006004820152602401610584565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561109457826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161122091815260200190565b60405180910390a350505050565b6001600160a01b03831661125957806002600082825461124e9190611853565b909155506112cb9050565b6001600160a01b038316600090815260208190526040902054818110156112ac5760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610584565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166112e757600280548290039055611306565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161134b91815260200190565b60405180910390a3505050565b600060208083528351808285015260005b8181101561138557858101830151858201604001528201611369565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146113bd57600080fd5b919050565b600080604083850312156113d557600080fd5b6113de836113a6565b946020939093013593505050565b6000602082840312156113fe57600080fd5b5035919050565b600081518084526020808501945080840160005b8381101561143557815187529582019590820190600101611419565b509495945050505050565b6020815260006114536020830184611405565b9392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156114995761149961145a565b604052919050565b600067ffffffffffffffff8211156114bb576114bb61145a565b5060051b60200190565b600082601f8301126114d657600080fd5b813560206114eb6114e6836114a1565b611470565b82815260059290921b8401810191818101908684111561150a57600080fd5b8286015b84811015611525578035835291830191830161150e565b509695505050505050565b6000806040838503121561154357600080fd5b823567ffffffffffffffff8082111561155b57600080fd5b818501915085601f83011261156f57600080fd5b8135602061157f6114e6836114a1565b82815260059290921b8401810191818101908984111561159e57600080fd5b948201945b838610156115c3576115b4866113a6565b825294820194908201906115a3565b965050860135925050808211156115d957600080fd5b506115e6858286016114c5565b9150509250929050565b60008060006060848603121561160557600080fd5b61160e846113a6565b925061161c602085016113a6565b9150604084013590509250925092565b60006020828403121561163e57600080fd5b611453826113a6565b60008060006060848603121561165c57600080fd5b611665846113a6565b92506020840135915061167a604085016113a6565b90509250925092565b6000806040838503121561169657600080fd5b61169f836113a6565b91506116ad602084016113a6565b90509250929050565b600181811c908216806116ca57607f821691505b6020821081036116ea57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176103db576103db611706565b60008261175057634e487b7160e01b600052601260045260246000fd5b500490565b60006001820161176757611767611706565b5060010190565b60208082526030908201527f746865206c656e73206f6620616d6f756e7420616e6420746f6b656e5f61646460408201526f081cda1bdd5b1908189948195c5d585b60821b606082015260800190565b6000602082840312156117d057600080fd5b8151801515811461145357600080fd5b818103818111156103db576103db611706565b604080825283519082018190526000906020906060840190828701845b828110156118355781516001600160a01b031684529284019290840190600101611810565b505050838103828501526118498186611405565b9695505050505050565b808201808211156103db576103db61170656fea2646970667358221220c7ed7a53e7a7fcfdc1042d914bbababd5040a014f69d4fb7894bce403d5c904c64736f6c63430008140033a264697066735822122001798487fb0a51dbb80d0ada7ff104d89d3b7af5e24e9e6f0f7909dc8562fb2564736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH3 0x5E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7EE5542A EQ PUSH3 0x63 JUMPI DUP1 PUSH4 0xB5217BB4 EQ PUSH3 0x8D JUMPI DUP1 PUSH4 0xC6255626 EQ PUSH3 0xD2 JUMPI DUP1 PUSH4 0xEC007105 EQ PUSH3 0xE9 JUMPI DUP1 PUSH4 0xF0A87C9F EQ PUSH3 0x100 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x7A PUSH3 0x74 CALLDATASIZE PUSH1 0x4 PUSH3 0x872 JUMP JUMPDEST PUSH3 0x117 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0xB9 PUSH3 0x9E CALLDATASIZE PUSH1 0x4 PUSH3 0x945 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x84 JUMP JUMPDEST PUSH3 0xB9 PUSH3 0xE3 CALLDATASIZE PUSH1 0x4 PUSH3 0x945 JUMP JUMPDEST PUSH3 0x153 JUMP JUMPDEST PUSH3 0xB9 PUSH3 0xFA CALLDATASIZE PUSH1 0x4 PUSH3 0x872 JUMP JUMPDEST PUSH3 0x17E JUMP JUMPDEST PUSH3 0xB9 PUSH3 0x111 CALLDATASIZE PUSH1 0x4 PUSH3 0x872 JUMP JUMPDEST PUSH3 0x1AB JUMP JUMPDEST PUSH1 0x0 PUSH3 0x124 DUP3 PUSH3 0x3CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x136 SWAP2 SWAP1 PUSH3 0x95F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH3 0x164 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH3 0x18C DUP4 PUSH3 0x117 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 MLOAD LT ISZERO PUSH3 0x1F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x4174206C65617374203220746F6B656E73 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x204 DUP3 PUSH3 0x523 JUMP JUMPDEST PUSH3 0x245 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x4475706C696361746520746F6B656E73 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x1F0 JUMP JUMPDEST PUSH3 0x250 DUP3 PUSH3 0x5FE JUMP JUMPDEST PUSH3 0x28D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x5A65726F2061646472657373 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x1F0 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x29A DUP4 PUSH3 0x3CE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x2B1 SWAP2 SWAP1 PUSH3 0x95F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 PUSH1 0x0 DUP2 DUP2 MSTORE SWAP3 DUP4 SWAP1 MSTORE SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH3 0x31E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x506F6F6C20657869737473 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x1F0 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x40 MLOAD PUSH3 0x32F SWAP1 PUSH3 0x831 JUMP JUMPDEST PUSH3 0x33B SWAP2 SWAP1 PUSH3 0x9A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH3 0x358 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE SWAP1 POP PUSH3 0x38D DUP4 PUSH3 0x661 JUMP JUMPDEST PUSH32 0x26BF75378C99DDAF6CFA3D759C5CA947D22D1169B02BE2CD17D49B102A1CA2FD DUP6 PUSH1 0x40 MLOAD PUSH3 0x3BE SWAP2 SWAP1 PUSH3 0x9A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH3 0x3DD DUP4 PUSH3 0x706 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH3 0x51C JUMPI PUSH1 0x0 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH3 0x403 JUMPI PUSH3 0x403 PUSH3 0x9EF JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP3 SWAP1 POP JUMPDEST PUSH1 0x0 DUP2 GT DUP1 ISZERO PUSH3 0x45D JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP5 PUSH3 0x437 PUSH1 0x1 DUP5 PUSH3 0xA1B JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH3 0x44A JUMPI PUSH3 0x44A PUSH3 0x9EF JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT JUMPDEST ISZERO PUSH3 0x4CE JUMPI DUP4 PUSH3 0x471 PUSH1 0x1 DUP4 PUSH3 0xA1B JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH3 0x484 JUMPI PUSH3 0x484 PUSH3 0x9EF JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH3 0x4A1 JUMPI PUSH3 0x4A1 PUSH3 0x9EF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 PUSH3 0x4C5 DUP2 PUSH3 0xA37 JUMP JUMPDEST SWAP2 POP POP PUSH3 0x413 JUMP JUMPDEST DUP2 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH3 0x4E4 JUMPI PUSH3 0x4E4 PUSH3 0x9EF JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP POP POP DUP1 DUP1 PUSH3 0x513 SWAP1 PUSH3 0xA51 JUMP JUMPDEST SWAP2 POP POP PUSH3 0x3E2 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 MLOAD GT PUSH3 0x537 JUMPI POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x1 DUP4 MLOAD PUSH3 0x54A SWAP2 SWAP1 PUSH3 0xA1B JUMP JUMPDEST DUP2 LT ISZERO PUSH3 0x5F5 JUMPI PUSH1 0x0 PUSH3 0x561 DUP3 PUSH1 0x1 PUSH3 0xA6D JUMP JUMPDEST SWAP1 POP JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH3 0x5DF JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH3 0x583 JUMPI PUSH3 0x583 PUSH3 0x9EF JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH3 0x5A9 JUMPI PUSH3 0x5A9 PUSH3 0x9EF JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH3 0x5CA JUMPI POP PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 PUSH3 0x5D6 DUP2 PUSH3 0xA51 JUMP JUMPDEST SWAP2 POP POP PUSH3 0x564 JUMP JUMPDEST POP DUP1 PUSH3 0x5EC DUP2 PUSH3 0xA51 JUMP JUMPDEST SWAP2 POP POP PUSH3 0x53A JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH3 0x5F5 JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH3 0x62C JUMPI PUSH3 0x62C PUSH3 0x9EF JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH3 0x64C JUMPI POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH3 0x658 DUP2 PUSH3 0xA51 JUMP JUMPDEST SWAP2 POP POP PUSH3 0x602 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH3 0x702 JUMPI PUSH3 0x695 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH3 0x687 JUMPI PUSH3 0x687 PUSH3 0x9EF JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH3 0x7C0 JUMP JUMPDEST PUSH3 0x6ED JUMPI PUSH1 0x1 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH3 0x6B1 JUMPI PUSH3 0x6B1 PUSH3 0x9EF JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 SLOAD PUSH1 0x1 DUP2 ADD DUP5 SSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE SWAP2 SWAP1 SWAP3 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST DUP1 PUSH3 0x6F9 DUP2 PUSH3 0xA51 JUMP JUMPDEST SWAP2 POP POP PUSH3 0x664 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x727 JUMPI PUSH3 0x727 PUSH3 0x83F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH3 0x751 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH3 0x51C JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH3 0x776 JUMPI PUSH3 0x776 PUSH3 0x9EF JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH3 0x793 JUMPI PUSH3 0x793 PUSH3 0x9EF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 PUSH3 0x7B7 DUP2 PUSH3 0xA51 JUMP JUMPDEST SWAP2 POP POP PUSH3 0x757 JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH3 0x828 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 DUP3 DUP2 SLOAD DUP2 LT PUSH3 0x7EF JUMPI PUSH3 0x7EF PUSH3 0x9EF JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH3 0x813 JUMPI POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH3 0x81F DUP2 PUSH3 0xA51 JUMP JUMPDEST SWAP2 POP POP PUSH3 0x7C4 JUMP JUMPDEST POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1E84 DUP1 PUSH3 0xA84 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x86D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x886 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH3 0x89F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x8B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH3 0x8C9 JUMPI PUSH3 0x8C9 PUSH3 0x83F JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH3 0x8F1 JUMPI PUSH3 0x8F1 PUSH3 0x83F JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE DUP5 DUP3 ADD SWAP3 POP DUP4 DUP2 ADD DUP6 ADD SWAP2 DUP9 DUP4 GT ISZERO PUSH3 0x910 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP3 DUP6 LT ISZERO PUSH3 0x939 JUMPI PUSH3 0x929 DUP6 PUSH3 0x855 JUMP JUMPDEST DUP5 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP3 DUP6 ADD SWAP3 PUSH3 0x915 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x958 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x0 SWAP1 DUP3 SWAP1 PUSH1 0x20 DUP1 DUP7 ADD DUP5 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x994 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE SWAP4 DUP3 ADD SWAP4 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH3 0x96D JUMP JUMPDEST POP SWAP3 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x9E3 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH3 0x9BC JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH3 0xA31 JUMPI PUSH3 0xA31 PUSH3 0xA05 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH3 0xA49 JUMPI PUSH3 0xA49 PUSH3 0xA05 JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH3 0xA66 JUMPI PUSH3 0xA66 PUSH3 0xA05 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH3 0xA31 JUMPI PUSH3 0xA31 PUSH3 0xA05 JUMP INVALID PUSH1 0xE0 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x80 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0xA0 MSTORE PUSH1 0x3 PUSH1 0xC0 DUP2 SWAP1 MSTORE PUSH3 0x25 SWAP2 PUSH1 0xA SWAP2 PUSH3 0x276 JUMP JUMPDEST POP CALLVALUE DUP1 ISZERO PUSH3 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1E84 CODESIZE SUB DUP1 PUSH3 0x1E84 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x56 SWAP2 PUSH3 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH7 0x26282A37B5B2B7 PUSH1 0xC9 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x131415 PUSH1 0xEA SHL DUP2 MSTORE POP DUP2 DUP2 DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0xA5 SWAP2 SWAP1 PUSH3 0x4CE JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0xB4 DUP3 DUP3 PUSH3 0x4CE JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x5 SSTORE POP POP PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE POP DUP1 MLOAD DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0xED JUMPI PUSH3 0xED PUSH3 0x33A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH3 0x117 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP1 MLOAD PUSH3 0x12E SWAP2 PUSH1 0x6 SWAP2 PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH3 0x2CB JUMP JUMPDEST POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x14A JUMPI PUSH3 0x14A PUSH3 0x33A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH3 0x174 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP1 MLOAD PUSH3 0x18B SWAP2 PUSH1 0x7 SWAP2 PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH3 0x2CB JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x26D JUMPI PUSH1 0x0 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH3 0x1AF JUMPI PUSH3 0x1AF PUSH3 0x59A JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP1 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH3 0x1D0 JUMPI PUSH3 0x1D0 PUSH3 0x59A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x7 DUP4 DUP2 SLOAD DUP2 LT PUSH3 0x215 JUMPI PUSH3 0x215 PUSH3 0x59A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND OR SWAP1 SSTORE SWAP3 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x8 DUP3 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP5 SWAP1 SSTORE PUSH1 0xB SWAP1 SWAP3 MSTORE SWAP1 DUP2 KECCAK256 SSTORE DUP1 PUSH3 0x264 DUP2 PUSH3 0x5B0 JUMP JUMPDEST SWAP2 POP POP PUSH3 0x18F JUMP JUMPDEST POP POP POP PUSH3 0x5D8 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH3 0x2B9 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x2B9 JUMPI DUP3 MLOAD DUP3 SWAP1 PUSH1 0xFF AND SWAP1 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x297 JUMP JUMPDEST POP PUSH3 0x2C7 SWAP3 SWAP2 POP PUSH3 0x323 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH3 0x2B9 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x2B9 JUMPI DUP3 MLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH3 0x2EC JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x2C7 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x324 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x368 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x381 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x399 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x3AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH3 0x3C3 JUMPI PUSH3 0x3C3 PUSH3 0x33A JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH3 0x3EB JUMPI PUSH3 0x3EB PUSH3 0x33A JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE DUP5 DUP3 ADD SWAP3 POP DUP4 DUP2 ADD DUP6 ADD SWAP2 DUP9 DUP4 GT ISZERO PUSH3 0x40A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP3 DUP6 LT ISZERO PUSH3 0x433 JUMPI PUSH3 0x423 DUP6 PUSH3 0x350 JUMP JUMPDEST DUP5 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP3 DUP6 ADD SWAP3 PUSH3 0x40F JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x454 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x475 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x4C9 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x4A4 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x4C5 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x4B0 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x4EA JUMPI PUSH3 0x4EA PUSH3 0x33A JUMP JUMPDEST PUSH3 0x502 DUP2 PUSH3 0x4FB DUP5 SLOAD PUSH3 0x43F JUMP JUMPDEST DUP5 PUSH3 0x47B JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x53A JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x521 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x4C5 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x56B JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x54A JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x58A JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH3 0x5D1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0x189C DUP1 PUSH3 0x5E8 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xD5B271F5 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD5B271F5 EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2C3 JUMPI DUP1 PUSH4 0xE5A86833 EQ PUSH2 0x2FC JUMPI DUP1 PUSH4 0xEAA91A3D EQ PUSH2 0x30F JUMPI DUP1 PUSH4 0xFF9C8AC6 EQ PUSH2 0x322 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x262 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x27D JUMPI DUP1 PUSH4 0xCBD01FA4 EQ PUSH2 0x290 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B9 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1CC JUMPI DUP1 PUSH4 0x345F5557 EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x523FBA7F EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x6D069A67 EQ PUSH2 0x226 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x1371A957 EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0x1D978BD2 EQ PUSH2 0x1A4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x139 PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x1358 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x162 PUSH2 0x15D CALLDATASIZE PUSH1 0x4 PUSH2 0x13C2 JUMP JUMPDEST PUSH2 0x3C7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x146 JUMP JUMPDEST PUSH2 0x185 PUSH2 0x180 CALLDATASIZE PUSH1 0x4 PUSH2 0x13EC JUMP JUMPDEST PUSH2 0x3E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x1440 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x146 JUMP JUMPDEST PUSH2 0x1B7 PUSH2 0x1B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1530 JUMP JUMPDEST PUSH2 0x563 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x162 PUSH2 0x1C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x15F0 JUMP JUMPDEST PUSH2 0x863 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x146 JUMP JUMPDEST PUSH2 0x1EE PUSH2 0x1E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x13EC JUMP JUMPDEST PUSH2 0x887 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x146 JUMP JUMPDEST PUSH2 0x196 PUSH2 0x214 CALLDATASIZE PUSH1 0x4 PUSH2 0x162C JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1B7 PUSH2 0x234 CALLDATASIZE PUSH1 0x4 PUSH2 0x1647 JUMP JUMPDEST PUSH2 0x8B1 JUMP JUMPDEST PUSH2 0x196 PUSH2 0x247 CALLDATASIZE PUSH1 0x4 PUSH2 0x162C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x139 PUSH2 0xC31 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x278 CALLDATASIZE PUSH1 0x4 PUSH2 0x13C2 JUMP JUMPDEST PUSH2 0xC40 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x1EE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x196 PUSH2 0x29E CALLDATASIZE PUSH1 0x4 PUSH2 0x13EC JUMP JUMPDEST PUSH2 0xC4E JUMP JUMPDEST PUSH2 0x196 PUSH2 0x2B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x162C JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x196 PUSH2 0x2D1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1683 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1B7 PUSH2 0x30A CALLDATASIZE PUSH1 0x4 PUSH2 0x1530 JUMP JUMPDEST PUSH2 0xC6F JUMP JUMPDEST PUSH2 0x1EE PUSH2 0x31D CALLDATASIZE PUSH1 0x4 PUSH2 0x13EC JUMP JUMPDEST PUSH2 0xF78 JUMP JUMPDEST PUSH2 0x196 PUSH2 0x330 CALLDATASIZE PUSH1 0x4 PUSH2 0x1647 JUMP JUMPDEST PUSH2 0xF88 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x344 SWAP1 PUSH2 0x16B6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x370 SWAP1 PUSH2 0x16B6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3BD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x392 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3BD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3A0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x3D5 DUP2 DUP6 DUP6 PUSH2 0xFD8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x402 JUMPI PUSH2 0x402 PUSH2 0x145A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x42B JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 PUSH1 0xB PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0x448 JUMPI PUSH2 0x448 PUSH2 0x16F0 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD SWAP1 POP PUSH1 0x1 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x53B JUMPI PUSH1 0x0 PUSH1 0x7 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x48F JUMPI PUSH2 0x48F PUSH2 0x16F0 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 DUP4 MSTORE PUSH1 0xB SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD SWAP1 SWAP3 POP SWAP1 DUP2 DUP2 SUB PUSH2 0x4EE JUMPI PUSH1 0xA DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x4D1 JUMPI PUSH2 0x4D1 PUSH2 0x16F0 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP10 PUSH2 0x4E7 SWAP2 SWAP1 PUSH2 0x171C JUMP JUMPDEST SWAP1 POP PUSH2 0x506 JUMP JUMPDEST DUP2 PUSH2 0x4F9 DUP7 DUP12 PUSH2 0x171C JUMP JUMPDEST PUSH2 0x503 SWAP2 SWAP1 PUSH2 0x1733 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP1 DUP7 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x519 JUMPI PUSH2 0x519 PUSH2 0x16F0 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP POP POP POP DUP1 DUP1 PUSH2 0x533 SWAP1 PUSH2 0x1755 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x472 JUMP JUMPDEST POP DUP5 DUP3 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x550 JUMPI PUSH2 0x550 PUSH2 0x16F0 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x58D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x584 SWAP1 PUSH2 0x176E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x599 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST GT ISZERO PUSH2 0x61B JUMPI PUSH1 0xB PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0x5B7 JUMPI PUSH2 0x5B7 PUSH2 0x16F0 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD PUSH2 0x5E5 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST DUP4 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x5F8 JUMPI PUSH2 0x5F8 PUSH2 0x16F0 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x60A SWAP2 SWAP1 PUSH2 0x171C JUMP JUMPDEST PUSH2 0x614 SWAP2 SWAP1 PUSH2 0x1733 JUMP JUMPDEST SWAP1 POP PUSH2 0x639 JUMP JUMPDEST DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x62E JUMPI PUSH2 0x62E PUSH2 0x16F0 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x643 CALLER DUP3 PUSH2 0xFE5 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x823 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x664 JUMPI PUSH2 0x664 PUSH2 0x16F0 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x6AD JUMPI PUSH2 0x6AD PUSH2 0x16F0 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD CALLER ADDRESS DUP11 DUP9 DUP2 MLOAD DUP2 LT PUSH2 0x6F0 JUMPI PUSH2 0x6F0 PUSH2 0x16F0 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP7 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x74F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x773 SWAP2 SWAP1 PUSH2 0x17BE JUMP JUMPDEST PUSH2 0x7B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x151C985B9CD9995C881D1BDAD95B8C0819985A5B1959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x584 JUMP JUMPDEST DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x7CA JUMPI PUSH2 0x7CA PUSH2 0x16F0 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xB PUSH1 0x0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x806 SWAP2 SWAP1 PUSH2 0x17E0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 DUP1 PUSH2 0x81B SWAP1 PUSH2 0x1755 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x648 JUMP JUMPDEST POP PUSH32 0x7F63FC1AB7D4B22633CCA91CD87319F6E7B3229ACE7BAA90F114B15F33E847AE DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x855 SWAP3 SWAP2 SWAP1 PUSH2 0x17F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x871 DUP6 DUP3 DUP6 PUSH2 0x101B JUMP JUMPDEST PUSH2 0x87C DUP6 DUP6 DUP6 PUSH2 0x109A JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x897 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH2 0x8B9 PUSH2 0x10F9 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x908 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x53616D6520746F6B656E73 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x584 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x96F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x746F6B656E496E206E6F7420696E20695F746F6B656E735F6D61700000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x584 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x9D6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x746F6B656E4F7574206E6F7420696E20695F746F6B656E735F6D617000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x584 JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0xA14 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x16995C9BC8185B5BDD5B9D PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x584 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA21 DUP5 DUP5 DUP5 PUSH2 0xF88 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA77 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA9B SWAP2 SWAP1 PUSH2 0x17BE JUMP JUMPDEST PUSH2 0xAD5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x14DDD85C0811985A5B1959 PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x584 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB22 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB46 SWAP2 SWAP1 PUSH2 0x17BE JUMP JUMPDEST PUSH2 0xB80 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x14DDD85C0811985A5B1959 PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x584 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0xBA8 SWAP1 DUP5 SWAP1 PUSH2 0x1853 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xBD5 SWAP1 DUP5 SWAP1 PUSH2 0x17E0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE DUP3 SWAP2 DUP6 SWAP2 PUSH32 0xDB587D878116DF0BDD4FE154699AA2C5F439DA001CC811DFD05D9F589FC5A8EE SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH2 0xC2C PUSH1 0x1 PUSH1 0x5 SSTORE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x344 SWAP1 PUSH2 0x16B6 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x3D5 DUP2 DUP6 DUP6 PUSH2 0x109A JUMP JUMPDEST PUSH1 0xA DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xC5E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH2 0xC77 PUSH2 0x10F9 JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0xC98 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x584 SWAP1 PUSH2 0x176E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xCA4 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST GT ISZERO PUSH2 0xD26 JUMPI PUSH1 0xB PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0xCC2 JUMPI PUSH2 0xCC2 PUSH2 0x16F0 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD PUSH2 0xCF0 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST DUP4 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xD03 JUMPI PUSH2 0xD03 PUSH2 0x16F0 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0xD15 SWAP2 SWAP1 PUSH2 0x171C JUMP JUMPDEST PUSH2 0xD1F SWAP2 SWAP1 PUSH2 0x1733 JUMP JUMPDEST SWAP1 POP PUSH2 0xD44 JUMP JUMPDEST DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xD39 JUMPI PUSH2 0xD39 PUSH2 0x16F0 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0xD4E CALLER DUP3 PUSH2 0x1123 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xF2E JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xD6F JUMPI PUSH2 0xD6F PUSH2 0x16F0 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xDB8 JUMPI PUSH2 0xDB8 PUSH2 0x16F0 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD CALLER ADDRESS DUP11 DUP9 DUP2 MLOAD DUP2 LT PUSH2 0xDFB JUMPI PUSH2 0xDFB PUSH2 0x16F0 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP7 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE5A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE7E SWAP2 SWAP1 PUSH2 0x17BE JUMP JUMPDEST PUSH2 0xEC3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x151C985B9CD9995C881D1BDAD95B8C0819985A5B1959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x584 JUMP JUMPDEST DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xED5 JUMPI PUSH2 0xED5 PUSH2 0x16F0 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xB PUSH1 0x0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xF11 SWAP2 SWAP1 PUSH2 0x1853 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 DUP1 PUSH2 0xF26 SWAP1 PUSH2 0x1755 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xD53 JUMP JUMPDEST POP PUSH32 0xB1B40D6E24DB4F4144D860844C12EF0CEE735402334D5E8682124A4C03BCE4C7 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0xF60 SWAP3 SWAP2 SWAP1 PUSH2 0x17F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP PUSH2 0xF74 PUSH1 0x1 PUSH1 0x5 SSTORE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x7 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x897 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD SWAP3 DUP7 AND DUP3 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP3 PUSH2 0xFB9 DUP7 DUP4 PUSH2 0x1853 JUMP JUMPDEST PUSH2 0xFC3 DUP8 DUP6 PUSH2 0x171C JUMP JUMPDEST PUSH2 0xFCD SWAP2 SWAP1 PUSH2 0x1733 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xC2C DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1159 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x100F JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x584 JUMP JUMPDEST PUSH2 0xF74 DUP3 PUSH1 0x0 DUP4 PUSH2 0x122E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 LT ISZERO PUSH2 0x1094 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1085 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x584 JUMP JUMPDEST PUSH2 0x1094 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x1159 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x10C4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x584 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x10EE JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x584 JUMP JUMPDEST PUSH2 0xC2C DUP4 DUP4 DUP4 PUSH2 0x122E JUMP JUMPDEST PUSH1 0x2 PUSH1 0x5 SLOAD SUB PUSH2 0x111C JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x114D JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x584 JUMP JUMPDEST PUSH2 0xF74 PUSH1 0x0 DUP4 DUP4 PUSH2 0x122E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1183 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x584 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x11AD JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x584 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x1094 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1220 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1259 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x124E SWAP2 SWAP1 PUSH2 0x1853 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x12CB SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x12AC JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x584 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x12E7 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x1306 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x134B SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1385 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x1369 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x13BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13DE DUP4 PUSH2 0x13A6 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1435 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1419 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1453 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1405 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1499 JUMPI PUSH2 0x1499 PUSH2 0x145A JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x14BB JUMPI PUSH2 0x14BB PUSH2 0x145A JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x14D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x14EB PUSH2 0x14E6 DUP4 PUSH2 0x14A1 JUMP JUMPDEST PUSH2 0x1470 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x150A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x1525 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x150E JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1543 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x155B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x156F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x157F PUSH2 0x14E6 DUP4 PUSH2 0x14A1 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP10 DUP5 GT ISZERO PUSH2 0x159E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x15C3 JUMPI PUSH2 0x15B4 DUP7 PUSH2 0x13A6 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0x15A3 JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x15D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15E6 DUP6 DUP3 DUP7 ADD PUSH2 0x14C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1605 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x160E DUP5 PUSH2 0x13A6 JUMP JUMPDEST SWAP3 POP PUSH2 0x161C PUSH1 0x20 DUP6 ADD PUSH2 0x13A6 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x163E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1453 DUP3 PUSH2 0x13A6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x165C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1665 DUP5 PUSH2 0x13A6 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH2 0x167A PUSH1 0x40 DUP6 ADD PUSH2 0x13A6 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1696 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x169F DUP4 PUSH2 0x13A6 JUMP JUMPDEST SWAP2 POP PUSH2 0x16AD PUSH1 0x20 DUP5 ADD PUSH2 0x13A6 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x16CA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x16EA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x3DB JUMPI PUSH2 0x3DB PUSH2 0x1706 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1750 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1767 JUMPI PUSH2 0x1767 PUSH2 0x1706 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x30 SWAP1 DUP3 ADD MSTORE PUSH32 0x746865206C656E73206F6620616D6F756E7420616E6420746F6B656E5F616464 PUSH1 0x40 DUP3 ADD MSTORE PUSH16 0x81CDA1BDD5B1908189948195C5D585B PUSH1 0x82 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1453 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x3DB JUMPI PUSH2 0x3DB PUSH2 0x1706 JUMP JUMPDEST PUSH1 0x40 DUP1 DUP3 MSTORE DUP4 MLOAD SWAP1 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x20 SWAP1 PUSH1 0x60 DUP5 ADD SWAP1 DUP3 DUP8 ADD DUP5 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1835 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1810 JUMP JUMPDEST POP POP POP DUP4 DUP2 SUB DUP3 DUP6 ADD MSTORE PUSH2 0x1849 DUP2 DUP7 PUSH2 0x1405 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x3DB JUMPI PUSH2 0x3DB PUSH2 0x1706 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 0xED PUSH27 0x53E7A7FCFDC1042D914BBABABD5040A014F69D4FB7894BCE403D5C SWAP1 0x4C PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD PUSH26 0x8487FB0A51DBB80D0ADA7FF104D89D3B7AF5E24E9E6F0F7909DC DUP6 PUSH3 0xFB2564 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"80:3602:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1382:147;;;;;;:::i;:::-;;:::i;:::-;;;1596:25:16;;;1584:2;1569:18;1382:147:11;;;;;;;;156:40;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;156:40:11;;;;;;-1:-1:-1;;;;;1981:32:16;;;1963:51;;1951:2;1936:18;156:40:11;1817:203:16;202:32:11;;;;;;:::i;:::-;;:::i;1188:150::-;;;;;;:::i;:::-;;:::i;348:781::-;;;;;;:::i;:::-;;:::i;1382:147::-;1448:7;1501:19;1513:6;1501:11;:19::i;:::-;1484:37;;;;;;;;:::i;:::-;;;;;;;;;;;;;1474:48;;;;;;1467:55;;1382:147;;;:::o;202:32::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;202:32:11;;-1:-1:-1;202:32:11;:::o;1188:150::-;1253:7;1272:11;1286:18;1297:6;1286:10;:18::i;:::-;1321:5;:10;;;;;;;;;;;-1:-1:-1;;;;;1321:10:11;;1188:150;-1:-1:-1;;;1188:150:11:o;348:781::-;411:7;455:1;438:6;:13;:18;;430:48;;;;-1:-1:-1;;;430:48:11;;2986:2:16;430:48:11;;;2968:21:16;3025:2;3005:18;;;2998:30;-1:-1:-1;;;3044:18:16;;;3037:47;3101:18;;430:48:11;;;;;;;;;496:18;507:6;496:10;:18::i;:::-;488:47;;;;-1:-1:-1;;;488:47:11;;3332:2:16;488:47:11;;;3314:21:16;3371:2;3351:18;;;3344:30;-1:-1:-1;;;3390:18:16;;;3383:46;3446:18;;488:47:11;3130:340:16;488:47:11;553:22;568:6;553:14;:22::i;:::-;545:47;;;;-1:-1:-1;;;545:47:11;;3677:2:16;545:47:11;;;3659:21:16;3716:2;3696:18;;;3689:30;-1:-1:-1;;;3735:18:16;;;3728:42;3787:18;;545:47:11;3475:336:16;545:47:11;645:29;677:19;689:6;677:11;:19::i;:::-;645:51;;748:15;793:12;776:30;;;;;;;;:::i;:::-;;;;-1:-1:-1;;776:30:11;;;;;;;;;766:41;;776:30;766:41;;;;851:1;825:14;;;;;;;;;;766:41;;-1:-1:-1;;;;;;825:14:11;:28;817:52;;;;-1:-1:-1;;;817:52:11;;4018:2:16;817:52:11;;;4000:21:16;4057:2;4037:18;;;4030:30;-1:-1:-1;;;4076:18:16;;;4069:41;4127:18;;817:52:11;3816:335:16;817:52:11;903:12;935;926:22;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;959:5:11;:14;;;;;;;;;;:21;;-1:-1:-1;;;;;;959:21:11;-1:-1:-1;;;;;959:21:11;;;;;;-1:-1:-1;1030:36:11;1053:12;1030:22;:36::i;:::-;1082:19;1094:6;1082:19;;;;;;:::i;:::-;;;;;;;;1118:4;348:781;-1:-1:-1;;;;348:781:11:o;1594:474::-;1663:16;1691:23;1717:18;1728:6;1717:10;:18::i;:::-;1691:44;-1:-1:-1;1768:1:11;1754:285;1775:6;:13;1771:1;:17;1754:285;;;1809:11;1823:6;1830:1;1823:9;;;;;;;;:::i;:::-;;;;;;;1809:23;;1846:6;1855:1;1846:10;;1870:130;1881:1;1877;:5;:44;;;;-1:-1:-1;;;;;;1886:35:11;;1894:6;1901:3;1903:1;1901;:3;:::i;:::-;1894:11;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;1886:35:11;;1877:44;1870:130;;;1953:6;1960:3;1962:1;1960;:3;:::i;:::-;1953:11;;;;;;;;:::i;:::-;;;;;;;1941:6;1948:1;1941:9;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1941:23:11;;;:9;;;;;;;;;;;:23;1982:3;;;;:::i;:::-;;;;1870:130;;;2025:3;2013:6;2020:1;2013:9;;;;;;;;:::i;:::-;;;;;;:15;-1:-1:-1;;;;;2013:15:11;;;-1:-1:-1;;;;;2013:15:11;;;;;1795:244;;1790:3;;;;;:::i;:::-;;;;1754:285;;;-1:-1:-1;2055:6:11;1594:474;-1:-1:-1;;1594:474:11:o;3337:343::-;3405:4;3442:1;3425:6;:13;:18;3421:35;;-1:-1:-1;3452:4:11;;3337:343;-1:-1:-1;3337:343:11:o;3421:35::-;3471:6;3466:187;3503:1;3487:6;:13;:17;;;;:::i;:::-;3483:1;:21;3466:187;;;3530:6;3539:5;:1;3543;3539:5;:::i;:::-;3530:14;;3525:118;3550:6;:13;3546:1;:17;3525:118;;;3605:6;3612:1;3605:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;3592:22:11;:6;3599:1;3592:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;3592:22:11;;3588:40;;-1:-1:-1;3623:5:11;;3337:343;-1:-1:-1;;;3337:343:11:o;3588:40::-;3565:3;;;;:::i;:::-;;;;3525:118;;;-1:-1:-1;3506:3:11;;;;:::i;:::-;;;;3466:187;;;-1:-1:-1;3669:4:11;;3337:343;-1:-1:-1;;3337:343:11:o;3053:222::-;3125:4;;3141:107;3162:6;:13;3158:1;:17;3141:107;;;3221:1;-1:-1:-1;;;;;3200:23:11;:6;3207:1;3200:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;3200:23:11;;3196:41;;-1:-1:-1;3232:5:11;;3053:222;-1:-1:-1;;3053:222:11:o;3196:41::-;3177:3;;;;:::i;:::-;;;;3141:107;;2124:258;2208:6;2203:173;2224:9;:16;2220:1;:20;2203:173;;;2266:31;2284:9;2294:1;2284:12;;;;;;;;:::i;:::-;;;;;;;2266:17;:31::i;:::-;2261:105;;2317:15;2338:9;2348:1;2338:12;;;;;;;;:::i;:::-;;;;;;;;;;;;2317:34;;;;;;;-1:-1:-1;2317:34:11;;;;;;;;;;-1:-1:-1;;;;;;2317:34:11;-1:-1:-1;;;;;2317:34:11;;;;;;;;;2261:105;2242:3;;;;:::i;:::-;;;;2203:173;;;;2124:258;:::o;2423:::-;2488:16;2516:21;2554:3;:10;2540:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2540:25:11;;2516:49;;2580:6;2575:79;2596:3;:10;2592:1;:14;2575:79;;;2637:3;2641:1;2637:6;;;;;;;;:::i;:::-;;;;;;;2627:4;2632:1;2627:7;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2627:16:11;;;:7;;;;;;;;;;;:16;2608:3;;;;:::i;:::-;;;;2575:79;;2722:260;2787:4;;2803:151;2824:15;:22;2820:26;;2803:151;;;2893:5;-1:-1:-1;;;;;2871:27:11;:15;2887:1;2871:18;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;2871:18:11;:27;2867:77;;-1:-1:-1;2925:4:11;;2722:260;-1:-1:-1;;2722:260:11:o;2867:77::-;2848:3;;;;:::i;:::-;;;;2803:151;;;-1:-1:-1;2970:5:11;;2722:260;-1:-1:-1;;2722:260:11:o;-1:-1:-1:-;;;;;;;;:::o;14:127:16:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:173;214:20;;-1:-1:-1;;;;;263:31:16;;253:42;;243:70;;309:1;306;299:12;243:70;146:173;;;:::o;324:1121::-;408:6;439:2;482;470:9;461:7;457:23;453:32;450:52;;;498:1;495;488:12;450:52;538:9;525:23;567:18;608:2;600:6;597:14;594:34;;;624:1;621;614:12;594:34;662:6;651:9;647:22;637:32;;707:7;700:4;696:2;692:13;688:27;678:55;;729:1;726;719:12;678:55;765:2;752:16;787:2;783;780:10;777:36;;;793:18;;:::i;:::-;839:2;836:1;832:10;871:2;865:9;934:2;930:7;925:2;921;917:11;913:25;905:6;901:38;989:6;977:10;974:22;969:2;957:10;954:18;951:46;948:72;;;1000:18;;:::i;:::-;1036:2;1029:22;1086:18;;;1120:15;;;;-1:-1:-1;1162:11:16;;;1158:20;;;1190:19;;;1187:39;;;1222:1;1219;1212:12;1187:39;1246:11;;;;1266:148;1282:6;1277:3;1274:15;1266:148;;;1348:23;1367:3;1348:23;:::i;:::-;1336:36;;1299:12;;;;1392;;;;1266:148;;;1433:6;324:1121;-1:-1:-1;;;;;;;;324:1121:16:o;1632:180::-;1691:6;1744:2;1732:9;1723:7;1719:23;1715:32;1712:52;;;1760:1;1757;1750:12;1712:52;-1:-1:-1;1783:23:16;;1632:180;-1:-1:-1;1632:180:16:o;2210:569::-;2428:13;;2371:3;;2402;;2481:4;2508:15;;;2371:3;2551:201;2565:6;2562:1;2559:13;2551:201;;;2632:13;;-1:-1:-1;;;;;2628:39:16;2614:54;;2690:14;;;;2727:15;;;;2664:1;2580:9;2551:201;;;-1:-1:-1;2768:5:16;;2210:569;-1:-1:-1;;;;;;2210:569:16:o;4156:658::-;4327:2;4379:21;;;4449:13;;4352:18;;;4471:22;;;4298:4;;4327:2;4550:15;;;;4524:2;4509:18;;;4298:4;4593:195;4607:6;4604:1;4601:13;4593:195;;;4672:13;;-1:-1:-1;;;;;4668:39:16;4656:52;;4763:15;;;;4728:12;;;;4704:1;4622:9;4593:195;;;-1:-1:-1;4805:3:16;;4156:658;-1:-1:-1;;;;;;4156:658:16:o;4819:127::-;4880:10;4875:3;4871:20;4868:1;4861:31;4911:4;4908:1;4901:15;4935:4;4932:1;4925:15;4951:127;5012:10;5007:3;5003:20;5000:1;4993:31;5043:4;5040:1;5033:15;5067:4;5064:1;5057:15;5083:128;5150:9;;;5171:11;;;5168:37;;;5185:18;;:::i;:::-;5083:128;;;;:::o;5216:136::-;5255:3;5283:5;5273:39;;5292:18;;:::i;:::-;-1:-1:-1;;;5328:18:16;;5216:136::o;5357:135::-;5396:3;5417:17;;;5414:43;;5437:18;;:::i;:::-;-1:-1:-1;5484:1:16;5473:13;;5357:135::o;5497:125::-;5562:9;;;5583:10;;;5580:36;;;5596:18;;:::i"},"methodIdentifiers":{"createPool(address[])":"f0a87c9f","getPool(address[])":"ec007105","getPoolKey(address[])":"7ee5542a","pools(bytes32)":"b5217bb4","supportedTokens(uint256)":"c6255626"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"PoolCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"createPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"getPoolKey\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"pools\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"supportedTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Factory.sol\":\"Factory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/Factory.sol\":{\"keccak256\":\"0x8f9467fc3e645d22aab7f55e31fa4041d47a8e1ce98ca29c9619d5f19847a852\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8403db4839641b7a6e226ef79e21ea8fbf2b50aa3b9fb3bd36fd060055be8d35\",\"dweb:/ipfs/QmfRahkvXX3sdur2sEstzwJfozGf8nDZ9PMWU6xnqu3A49\"]},\"contracts/LPToken.sol\":{\"keccak256\":\"0x4048c56d416c225e2b6bff823124926b89bd890cbe4872a882bedce74bd0ba95\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d2747c21d85a7bc0ef661ff314d00c615e7fe8355ea3130635d434c9c34e6bc6\",\"dweb:/ipfs/QmQYyVDNgrkpqpi7jFUoFmH49nbWvwKLExLFL1xQNvUZNX\"]},\"contracts/Pool.sol\":{\"keccak256\":\"0x9d7d7cae4b91989231268bd6a2b084bd48e58ff6fa7e9a952f4265d7777a9490\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2e8a5e24c26c1745fd4fe0d7bd85a93699cbf6eb9b85e67759255263b74aad96\",\"dweb:/ipfs/QmZqPB2woUsjTbYr7mmKusWnBPDVNj6ACYmN9VGHMWgKtE\"]}},\"version\":1}"}},"contracts/LPToken.sol":{"LPToken":{"abi":[{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_188":{"entryPoint":null,"id":188,"parameterSlots":2,"returnSlots":0},"@_6067":{"entryPoint":null,"id":6067,"parameterSlots":2,"returnSlots":0},"abi_decode_string_fromMemory":{"entryPoint":116,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":291,"id":null,"parameterSlots":2,"returnSlots":2},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":457,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":540,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":397,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x41":{"entryPoint":94,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4144:16","statements":[{"nodeType":"YulBlock","src":"6:3:16","statements":[]},{"body":{"nodeType":"YulBlock","src":"46:95:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"63:1:16","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"70:3:16","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"75:10:16","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"66:3:16"},"nodeType":"YulFunctionCall","src":"66:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56:6:16"},"nodeType":"YulFunctionCall","src":"56:31:16"},"nodeType":"YulExpressionStatement","src":"56:31:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"106:4:16","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"96:6:16"},"nodeType":"YulFunctionCall","src":"96:15:16"},"nodeType":"YulExpressionStatement","src":"96:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"127:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"130:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"120:6:16"},"nodeType":"YulFunctionCall","src":"120:15:16"},"nodeType":"YulExpressionStatement","src":"120:15:16"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"14:127:16"},{"body":{"nodeType":"YulBlock","src":"210:776:16","statements":[{"body":{"nodeType":"YulBlock","src":"259:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"268:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"271:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"261:6:16"},"nodeType":"YulFunctionCall","src":"261:12:16"},"nodeType":"YulExpressionStatement","src":"261:12:16"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"238:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"246:4:16","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"234:3:16"},"nodeType":"YulFunctionCall","src":"234:17:16"},{"name":"end","nodeType":"YulIdentifier","src":"253:3:16"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"230:3:16"},"nodeType":"YulFunctionCall","src":"230:27:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"223:6:16"},"nodeType":"YulFunctionCall","src":"223:35:16"},"nodeType":"YulIf","src":"220:55:16"},{"nodeType":"YulVariableDeclaration","src":"284:23:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"300:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"294:5:16"},"nodeType":"YulFunctionCall","src":"294:13:16"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"288:2:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"316:28:16","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"334:2:16","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"338:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"330:3:16"},"nodeType":"YulFunctionCall","src":"330:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"342:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"326:3:16"},"nodeType":"YulFunctionCall","src":"326:18:16"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"320:2:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"367:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"369:16:16"},"nodeType":"YulFunctionCall","src":"369:18:16"},"nodeType":"YulExpressionStatement","src":"369:18:16"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"359:2:16"},{"name":"_2","nodeType":"YulIdentifier","src":"363:2:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"356:2:16"},"nodeType":"YulFunctionCall","src":"356:10:16"},"nodeType":"YulIf","src":"353:36:16"},{"nodeType":"YulVariableDeclaration","src":"398:17:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"412:2:16","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"408:3:16"},"nodeType":"YulFunctionCall","src":"408:7:16"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"402:2:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"424:23:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"444:2:16","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"438:5:16"},"nodeType":"YulFunctionCall","src":"438:9:16"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"428:6:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"456:71:16","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"478:6:16"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"502:2:16"},{"kind":"number","nodeType":"YulLiteral","src":"506:4:16","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"498:3:16"},"nodeType":"YulFunctionCall","src":"498:13:16"},{"name":"_3","nodeType":"YulIdentifier","src":"513:2:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"494:3:16"},"nodeType":"YulFunctionCall","src":"494:22:16"},{"kind":"number","nodeType":"YulLiteral","src":"518:2:16","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"490:3:16"},"nodeType":"YulFunctionCall","src":"490:31:16"},{"name":"_3","nodeType":"YulIdentifier","src":"523:2:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"486:3:16"},"nodeType":"YulFunctionCall","src":"486:40:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"474:3:16"},"nodeType":"YulFunctionCall","src":"474:53:16"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"460:10:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"586:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"588:16:16"},"nodeType":"YulFunctionCall","src":"588:18:16"},"nodeType":"YulExpressionStatement","src":"588:18:16"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"545:10:16"},{"name":"_2","nodeType":"YulIdentifier","src":"557:2:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"542:2:16"},"nodeType":"YulFunctionCall","src":"542:18:16"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"565:10:16"},{"name":"memPtr","nodeType":"YulIdentifier","src":"577:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"562:2:16"},"nodeType":"YulFunctionCall","src":"562:22:16"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"539:2:16"},"nodeType":"YulFunctionCall","src":"539:46:16"},"nodeType":"YulIf","src":"536:72:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"624:2:16","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"628:10:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"617:6:16"},"nodeType":"YulFunctionCall","src":"617:22:16"},"nodeType":"YulExpressionStatement","src":"617:22:16"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"655:6:16"},{"name":"_1","nodeType":"YulIdentifier","src":"663:2:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"648:6:16"},"nodeType":"YulFunctionCall","src":"648:18:16"},"nodeType":"YulExpressionStatement","src":"648:18:16"},{"nodeType":"YulVariableDeclaration","src":"675:14:16","value":{"kind":"number","nodeType":"YulLiteral","src":"685:4:16","type":"","value":"0x20"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"679:2:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"735:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"744:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"747:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"737:6:16"},"nodeType":"YulFunctionCall","src":"737:12:16"},"nodeType":"YulExpressionStatement","src":"737:12:16"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"712:6:16"},{"name":"_1","nodeType":"YulIdentifier","src":"720:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"708:3:16"},"nodeType":"YulFunctionCall","src":"708:15:16"},{"name":"_4","nodeType":"YulIdentifier","src":"725:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"704:3:16"},"nodeType":"YulFunctionCall","src":"704:24:16"},{"name":"end","nodeType":"YulIdentifier","src":"730:3:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"701:2:16"},"nodeType":"YulFunctionCall","src":"701:33:16"},"nodeType":"YulIf","src":"698:53:16"},{"nodeType":"YulVariableDeclaration","src":"760:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"769:1:16","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"764:1:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"825:87:16","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"854:6:16"},{"name":"i","nodeType":"YulIdentifier","src":"862:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"850:3:16"},"nodeType":"YulFunctionCall","src":"850:14:16"},{"name":"_4","nodeType":"YulIdentifier","src":"866:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"846:3:16"},"nodeType":"YulFunctionCall","src":"846:23:16"},{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"885:6:16"},{"name":"i","nodeType":"YulIdentifier","src":"893:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"881:3:16"},"nodeType":"YulFunctionCall","src":"881:14:16"},{"name":"_4","nodeType":"YulIdentifier","src":"897:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"877:3:16"},"nodeType":"YulFunctionCall","src":"877:23:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"871:5:16"},"nodeType":"YulFunctionCall","src":"871:30:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"839:6:16"},"nodeType":"YulFunctionCall","src":"839:63:16"},"nodeType":"YulExpressionStatement","src":"839:63:16"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"790:1:16"},{"name":"_1","nodeType":"YulIdentifier","src":"793:2:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"787:2:16"},"nodeType":"YulFunctionCall","src":"787:9:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"797:19:16","statements":[{"nodeType":"YulAssignment","src":"799:15:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"808:1:16"},{"name":"_4","nodeType":"YulIdentifier","src":"811:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"804:3:16"},"nodeType":"YulFunctionCall","src":"804:10:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"799:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"783:3:16","statements":[]},"src":"779:133:16"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"936:6:16"},{"name":"_1","nodeType":"YulIdentifier","src":"944:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"932:3:16"},"nodeType":"YulFunctionCall","src":"932:15:16"},{"name":"_4","nodeType":"YulIdentifier","src":"949:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"928:3:16"},"nodeType":"YulFunctionCall","src":"928:24:16"},{"kind":"number","nodeType":"YulLiteral","src":"954:1:16","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"921:6:16"},"nodeType":"YulFunctionCall","src":"921:35:16"},"nodeType":"YulExpressionStatement","src":"921:35:16"},{"nodeType":"YulAssignment","src":"965:15:16","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"974:6:16"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"965:5:16"}]}]},"name":"abi_decode_string_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"184:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"192:3:16","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"200:5:16","type":""}],"src":"146:840:16"},{"body":{"nodeType":"YulBlock","src":"1109:444:16","statements":[{"body":{"nodeType":"YulBlock","src":"1155:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1164:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1167:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1157:6:16"},"nodeType":"YulFunctionCall","src":"1157:12:16"},"nodeType":"YulExpressionStatement","src":"1157:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1130:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"1139:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1126:3:16"},"nodeType":"YulFunctionCall","src":"1126:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"1151:2:16","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1122:3:16"},"nodeType":"YulFunctionCall","src":"1122:32:16"},"nodeType":"YulIf","src":"1119:52:16"},{"nodeType":"YulVariableDeclaration","src":"1180:30:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1200:9:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1194:5:16"},"nodeType":"YulFunctionCall","src":"1194:16:16"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1184:6:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1219:28:16","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1237:2:16","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"1241:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1233:3:16"},"nodeType":"YulFunctionCall","src":"1233:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"1245:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1229:3:16"},"nodeType":"YulFunctionCall","src":"1229:18:16"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1223:2:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"1274:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1283:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1286:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1276:6:16"},"nodeType":"YulFunctionCall","src":"1276:12:16"},"nodeType":"YulExpressionStatement","src":"1276:12:16"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1262:6:16"},{"name":"_1","nodeType":"YulIdentifier","src":"1270:2:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1259:2:16"},"nodeType":"YulFunctionCall","src":"1259:14:16"},"nodeType":"YulIf","src":"1256:34:16"},{"nodeType":"YulAssignment","src":"1299:71:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1342:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"1353:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1338:3:16"},"nodeType":"YulFunctionCall","src":"1338:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1362:7:16"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1309:28:16"},"nodeType":"YulFunctionCall","src":"1309:61:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1299:6:16"}]},{"nodeType":"YulVariableDeclaration","src":"1379:41:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1405:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1416:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1401:3:16"},"nodeType":"YulFunctionCall","src":"1401:18:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1395:5:16"},"nodeType":"YulFunctionCall","src":"1395:25:16"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"1383:8:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"1449:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1458:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1461:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1451:6:16"},"nodeType":"YulFunctionCall","src":"1451:12:16"},"nodeType":"YulExpressionStatement","src":"1451:12:16"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"1435:8:16"},{"name":"_1","nodeType":"YulIdentifier","src":"1445:2:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1432:2:16"},"nodeType":"YulFunctionCall","src":"1432:16:16"},"nodeType":"YulIf","src":"1429:36:16"},{"nodeType":"YulAssignment","src":"1474:73:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1517:9:16"},{"name":"offset_1","nodeType":"YulIdentifier","src":"1528:8:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1513:3:16"},"nodeType":"YulFunctionCall","src":"1513:24:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1539:7:16"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1484:28:16"},"nodeType":"YulFunctionCall","src":"1484:63:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1474:6:16"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1067:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1078:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1090:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1098:6:16","type":""}],"src":"991:562:16"},{"body":{"nodeType":"YulBlock","src":"1613:325:16","statements":[{"nodeType":"YulAssignment","src":"1623:22:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1637:1:16","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"1640:4:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1633:3:16"},"nodeType":"YulFunctionCall","src":"1633:12:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1623:6:16"}]},{"nodeType":"YulVariableDeclaration","src":"1654:38:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1684:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"1690:1:16","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1680:3:16"},"nodeType":"YulFunctionCall","src":"1680:12:16"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"1658:18:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"1731:31:16","statements":[{"nodeType":"YulAssignment","src":"1733:27:16","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1747:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"1755:4:16","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1743:3:16"},"nodeType":"YulFunctionCall","src":"1743:17:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1733:6:16"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1711:18:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1704:6:16"},"nodeType":"YulFunctionCall","src":"1704:26:16"},"nodeType":"YulIf","src":"1701:61:16"},{"body":{"nodeType":"YulBlock","src":"1821:111:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1842:1:16","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1849:3:16","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1854:10:16","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1845:3:16"},"nodeType":"YulFunctionCall","src":"1845:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1835:6:16"},"nodeType":"YulFunctionCall","src":"1835:31:16"},"nodeType":"YulExpressionStatement","src":"1835:31:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1886:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1889:4:16","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1879:6:16"},"nodeType":"YulFunctionCall","src":"1879:15:16"},"nodeType":"YulExpressionStatement","src":"1879:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1914:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1917:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1907:6:16"},"nodeType":"YulFunctionCall","src":"1907:15:16"},"nodeType":"YulExpressionStatement","src":"1907:15:16"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1777:18:16"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1800:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"1808:2:16","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1797:2:16"},"nodeType":"YulFunctionCall","src":"1797:14:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1774:2:16"},"nodeType":"YulFunctionCall","src":"1774:38:16"},"nodeType":"YulIf","src":"1771:161:16"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1593:4:16","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1602:6:16","type":""}],"src":"1558:380:16"},{"body":{"nodeType":"YulBlock","src":"1999:65:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2016:1:16","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"2019:3:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2009:6:16"},"nodeType":"YulFunctionCall","src":"2009:14:16"},"nodeType":"YulExpressionStatement","src":"2009:14:16"},{"nodeType":"YulAssignment","src":"2032:26:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2050:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2053:4:16","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2040:9:16"},"nodeType":"YulFunctionCall","src":"2040:18:16"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"2032:4:16"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"1982:3:16","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"1990:4:16","type":""}],"src":"1943:121:16"},{"body":{"nodeType":"YulBlock","src":"2150:464:16","statements":[{"body":{"nodeType":"YulBlock","src":"2183:425:16","statements":[{"nodeType":"YulVariableDeclaration","src":"2197:11:16","value":{"kind":"number","nodeType":"YulLiteral","src":"2207:1:16","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2201:2:16","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2228:2:16"},{"name":"array","nodeType":"YulIdentifier","src":"2232:5:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2221:6:16"},"nodeType":"YulFunctionCall","src":"2221:17:16"},"nodeType":"YulExpressionStatement","src":"2221:17:16"},{"nodeType":"YulVariableDeclaration","src":"2251:31:16","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2273:2:16"},{"kind":"number","nodeType":"YulLiteral","src":"2277:4:16","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2263:9:16"},"nodeType":"YulFunctionCall","src":"2263:19:16"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"2255:4:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2295:57:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2318:4:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2328:1:16","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2335:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"2347:2:16","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2331:3:16"},"nodeType":"YulFunctionCall","src":"2331:19:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2324:3:16"},"nodeType":"YulFunctionCall","src":"2324:27:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2314:3:16"},"nodeType":"YulFunctionCall","src":"2314:38:16"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"2299:11:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"2389:23:16","statements":[{"nodeType":"YulAssignment","src":"2391:19:16","value":{"name":"data","nodeType":"YulIdentifier","src":"2406:4:16"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"2391:11:16"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2371:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"2383:4:16","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2368:2:16"},"nodeType":"YulFunctionCall","src":"2368:20:16"},"nodeType":"YulIf","src":"2365:47:16"},{"nodeType":"YulVariableDeclaration","src":"2425:41:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2439:4:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2449:1:16","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2456:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"2461:2:16","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2452:3:16"},"nodeType":"YulFunctionCall","src":"2452:12:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2445:3:16"},"nodeType":"YulFunctionCall","src":"2445:20:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2435:3:16"},"nodeType":"YulFunctionCall","src":"2435:31:16"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"2429:2:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2479:24:16","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"2492:11:16"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"2483:5:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"2577:21:16","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2586:5:16"},{"name":"_1","nodeType":"YulIdentifier","src":"2593:2:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2579:6:16"},"nodeType":"YulFunctionCall","src":"2579:17:16"},"nodeType":"YulExpressionStatement","src":"2579:17:16"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2527:5:16"},{"name":"_2","nodeType":"YulIdentifier","src":"2534:2:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2524:2:16"},"nodeType":"YulFunctionCall","src":"2524:13:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2538:26:16","statements":[{"nodeType":"YulAssignment","src":"2540:22:16","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2553:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"2560:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2549:3:16"},"nodeType":"YulFunctionCall","src":"2549:13:16"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"2540:5:16"}]}]},"pre":{"nodeType":"YulBlock","src":"2520:3:16","statements":[]},"src":"2516:82:16"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2166:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"2171:2:16","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2163:2:16"},"nodeType":"YulFunctionCall","src":"2163:11:16"},"nodeType":"YulIf","src":"2160:448:16"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"2122:5:16","type":""},{"name":"len","nodeType":"YulTypedName","src":"2129:3:16","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"2134:10:16","type":""}],"src":"2069:545:16"},{"body":{"nodeType":"YulBlock","src":"2704:81:16","statements":[{"nodeType":"YulAssignment","src":"2714:65:16","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2729:4:16"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2747:1:16","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"2750:3:16"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2743:3:16"},"nodeType":"YulFunctionCall","src":"2743:11:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2760:1:16","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2756:3:16"},"nodeType":"YulFunctionCall","src":"2756:6:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2739:3:16"},"nodeType":"YulFunctionCall","src":"2739:24:16"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2735:3:16"},"nodeType":"YulFunctionCall","src":"2735:29:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2725:3:16"},"nodeType":"YulFunctionCall","src":"2725:40:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2771:1:16","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"2774:3:16"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2767:3:16"},"nodeType":"YulFunctionCall","src":"2767:11:16"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2722:2:16"},"nodeType":"YulFunctionCall","src":"2722:57:16"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"2714:4:16"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2681:4:16","type":""},{"name":"len","nodeType":"YulTypedName","src":"2687:3:16","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"2695:4:16","type":""}],"src":"2619:166:16"},{"body":{"nodeType":"YulBlock","src":"2886:1256:16","statements":[{"nodeType":"YulVariableDeclaration","src":"2896:24:16","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2916:3:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2910:5:16"},"nodeType":"YulFunctionCall","src":"2910:10:16"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"2900:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"2963:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2965:16:16"},"nodeType":"YulFunctionCall","src":"2965:18:16"},"nodeType":"YulExpressionStatement","src":"2965:18:16"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"2935:6:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2951:2:16","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"2955:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2947:3:16"},"nodeType":"YulFunctionCall","src":"2947:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"2959:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2943:3:16"},"nodeType":"YulFunctionCall","src":"2943:18:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2932:2:16"},"nodeType":"YulFunctionCall","src":"2932:30:16"},"nodeType":"YulIf","src":"2929:56:16"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3038:4:16"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3076:4:16"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"3070:5:16"},"nodeType":"YulFunctionCall","src":"3070:11:16"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"3044:25:16"},"nodeType":"YulFunctionCall","src":"3044:38:16"},{"name":"newLen","nodeType":"YulIdentifier","src":"3084:6:16"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"2994:43:16"},"nodeType":"YulFunctionCall","src":"2994:97:16"},"nodeType":"YulExpressionStatement","src":"2994:97:16"},{"nodeType":"YulVariableDeclaration","src":"3100:18:16","value":{"kind":"number","nodeType":"YulLiteral","src":"3117:1:16","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"3104:9:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3127:23:16","value":{"kind":"number","nodeType":"YulLiteral","src":"3146:4:16","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"3131:11:16","type":""}]},{"nodeType":"YulAssignment","src":"3159:24:16","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3172:11:16"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3159:9:16"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"3229:656:16","statements":[{"nodeType":"YulVariableDeclaration","src":"3243:35:16","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"3262:6:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3274:2:16","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3270:3:16"},"nodeType":"YulFunctionCall","src":"3270:7:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3258:3:16"},"nodeType":"YulFunctionCall","src":"3258:20:16"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"3247:7:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3291:49:16","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3335:4:16"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"3305:29:16"},"nodeType":"YulFunctionCall","src":"3305:35:16"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"3295:6:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3353:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"3362:1:16","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3357:1:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"3440:172:16","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3465:6:16"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3483:3:16"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"3488:9:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3479:3:16"},"nodeType":"YulFunctionCall","src":"3479:19:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3473:5:16"},"nodeType":"YulFunctionCall","src":"3473:26:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3458:6:16"},"nodeType":"YulFunctionCall","src":"3458:42:16"},"nodeType":"YulExpressionStatement","src":"3458:42:16"},{"nodeType":"YulAssignment","src":"3517:24:16","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3531:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"3539:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3527:3:16"},"nodeType":"YulFunctionCall","src":"3527:14:16"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3517:6:16"}]},{"nodeType":"YulAssignment","src":"3558:40:16","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3575:9:16"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3586:11:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3571:3:16"},"nodeType":"YulFunctionCall","src":"3571:27:16"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3558:9:16"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3387:1:16"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"3390:7:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3384:2:16"},"nodeType":"YulFunctionCall","src":"3384:14:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3399:28:16","statements":[{"nodeType":"YulAssignment","src":"3401:24:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3410:1:16"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3413:11:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3406:3:16"},"nodeType":"YulFunctionCall","src":"3406:19:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3401:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"3380:3:16","statements":[]},"src":"3376:236:16"},{"body":{"nodeType":"YulBlock","src":"3660:166:16","statements":[{"nodeType":"YulVariableDeclaration","src":"3678:43:16","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3705:3:16"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"3710:9:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3701:3:16"},"nodeType":"YulFunctionCall","src":"3701:19:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3695:5:16"},"nodeType":"YulFunctionCall","src":"3695:26:16"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"3682:9:16","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3745:6:16"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"3757:9:16"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3784:1:16","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"3787:6:16"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3780:3:16"},"nodeType":"YulFunctionCall","src":"3780:14:16"},{"kind":"number","nodeType":"YulLiteral","src":"3796:3:16","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3776:3:16"},"nodeType":"YulFunctionCall","src":"3776:24:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3806:1:16","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3802:3:16"},"nodeType":"YulFunctionCall","src":"3802:6:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3772:3:16"},"nodeType":"YulFunctionCall","src":"3772:37:16"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3768:3:16"},"nodeType":"YulFunctionCall","src":"3768:42:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3753:3:16"},"nodeType":"YulFunctionCall","src":"3753:58:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3738:6:16"},"nodeType":"YulFunctionCall","src":"3738:74:16"},"nodeType":"YulExpressionStatement","src":"3738:74:16"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"3631:7:16"},{"name":"newLen","nodeType":"YulIdentifier","src":"3640:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3628:2:16"},"nodeType":"YulFunctionCall","src":"3628:19:16"},"nodeType":"YulIf","src":"3625:201:16"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3846:4:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3860:1:16","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"3863:6:16"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3856:3:16"},"nodeType":"YulFunctionCall","src":"3856:14:16"},{"kind":"number","nodeType":"YulLiteral","src":"3872:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3852:3:16"},"nodeType":"YulFunctionCall","src":"3852:22:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3839:6:16"},"nodeType":"YulFunctionCall","src":"3839:36:16"},"nodeType":"YulExpressionStatement","src":"3839:36:16"}]},"nodeType":"YulCase","src":"3222:663:16","value":{"kind":"number","nodeType":"YulLiteral","src":"3227:1:16","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"3902:234:16","statements":[{"nodeType":"YulVariableDeclaration","src":"3916:14:16","value":{"kind":"number","nodeType":"YulLiteral","src":"3929:1:16","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3920:5:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"3965:67:16","statements":[{"nodeType":"YulAssignment","src":"3983:35:16","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4002:3:16"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4007:9:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3998:3:16"},"nodeType":"YulFunctionCall","src":"3998:19:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3992:5:16"},"nodeType":"YulFunctionCall","src":"3992:26:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3983:5:16"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"3946:6:16"},"nodeType":"YulIf","src":"3943:89:16"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4052:4:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4111:5:16"},{"name":"newLen","nodeType":"YulIdentifier","src":"4118:6:16"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"4058:52:16"},"nodeType":"YulFunctionCall","src":"4058:67:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4045:6:16"},"nodeType":"YulFunctionCall","src":"4045:81:16"},"nodeType":"YulExpressionStatement","src":"4045:81:16"}]},"nodeType":"YulCase","src":"3894:242:16","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"3202:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"3210:2:16","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3199:2:16"},"nodeType":"YulFunctionCall","src":"3199:14:16"},"nodeType":"YulSwitch","src":"3192:944:16"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"2871:4:16","type":""},{"name":"src","nodeType":"YulTypedName","src":"2877:3:16","type":""}],"src":"2790:1352:16"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        mstore(add(add(memPtr, _1), _4), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}","id":16,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162000a1938038062000a19833981016040819052620000349162000123565b818160036200004483826200021c565b5060046200005382826200021c565b5050505050620002e8565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200008657600080fd5b81516001600160401b0380821115620000a357620000a36200005e565b604051601f8301601f19908116603f01168101908282118183101715620000ce57620000ce6200005e565b81604052838152602092508683858801011115620000eb57600080fd5b600091505b838210156200010f5785820183015181830184015290820190620000f0565b600093810190920192909252949350505050565b600080604083850312156200013757600080fd5b82516001600160401b03808211156200014f57600080fd5b6200015d8683870162000074565b935060208501519150808211156200017457600080fd5b50620001838582860162000074565b9150509250929050565b600181811c90821680620001a257607f821691505b602082108103620001c357634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200021757600081815260208120601f850160051c81016020861015620001f25750805b601f850160051c820191505b818110156200021357828155600101620001fe565b5050505b505050565b81516001600160401b038111156200023857620002386200005e565b62000250816200024984546200018d565b84620001c9565b602080601f8311600181146200028857600084156200026f5750858301515b600019600386901b1c1916600185901b17855562000213565b600085815260208120601f198616915b82811015620002b95788860151825594840194600190910190840162000298565b5085821015620002d85787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61072180620002f86000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063313ce56711610066578063313ce567146100fe57806370a082311461010d57806395d89b4114610136578063a9059cbb1461013e578063dd62ed3e1461015157600080fd5b806306fdde0314610098578063095ea7b3146100b657806318160ddd146100d957806323b872dd146100eb575b600080fd5b6100a061018a565b6040516100ad919061056b565b60405180910390f35b6100c96100c43660046105d5565b61021c565b60405190151581526020016100ad565b6002545b6040519081526020016100ad565b6100c96100f93660046105ff565b610236565b604051601281526020016100ad565b6100dd61011b36600461063b565b6001600160a01b031660009081526020819052604090205490565b6100a061025a565b6100c961014c3660046105d5565b610269565b6100dd61015f36600461065d565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60606003805461019990610690565b80601f01602080910402602001604051908101604052809291908181526020018280546101c590610690565b80156102125780601f106101e757610100808354040283529160200191610212565b820191906000526020600020905b8154815290600101906020018083116101f557829003601f168201915b5050505050905090565b60003361022a818585610277565b60019150505b92915050565b600033610244858285610289565b61024f85858561030d565b506001949350505050565b60606004805461019990610690565b60003361022a81858561030d565b610284838383600161036c565b505050565b6001600160a01b0383811660009081526001602090815260408083209386168352929052205460001981101561030757818110156102f857604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064015b60405180910390fd5b6103078484848403600061036c565b50505050565b6001600160a01b03831661033757604051634b637e8f60e11b8152600060048201526024016102ef565b6001600160a01b0382166103615760405163ec442f0560e01b8152600060048201526024016102ef565b610284838383610441565b6001600160a01b0384166103965760405163e602df0560e01b8152600060048201526024016102ef565b6001600160a01b0383166103c057604051634a1406b160e11b8152600060048201526024016102ef565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561030757826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161043391815260200190565b60405180910390a350505050565b6001600160a01b03831661046c57806002600082825461046191906106ca565b909155506104de9050565b6001600160a01b038316600090815260208190526040902054818110156104bf5760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016102ef565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166104fa57600280548290039055610519565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161055e91815260200190565b60405180910390a3505050565b600060208083528351808285015260005b818110156105985785810183015185820160400152820161057c565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146105d057600080fd5b919050565b600080604083850312156105e857600080fd5b6105f1836105b9565b946020939093013593505050565b60008060006060848603121561061457600080fd5b61061d846105b9565b925061062b602085016105b9565b9150604084013590509250925092565b60006020828403121561064d57600080fd5b610656826105b9565b9392505050565b6000806040838503121561067057600080fd5b610679836105b9565b9150610687602084016105b9565b90509250929050565b600181811c908216806106a457607f821691505b6020821081036106c457634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561023057634e487b7160e01b600052601160045260246000fdfea264697066735822122047967bc0a141033ba9db8a8e06b746a7666e561152d3aa276ad2eb6f8c16a7f464736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xA19 CODESIZE SUB DUP1 PUSH3 0xA19 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x123 JUMP JUMPDEST DUP2 DUP2 PUSH1 0x3 PUSH3 0x44 DUP4 DUP3 PUSH3 0x21C JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x53 DUP3 DUP3 PUSH3 0x21C JUMP JUMPDEST POP POP POP POP POP PUSH3 0x2E8 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0xA3 JUMPI PUSH3 0xA3 PUSH3 0x5E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0xCE JUMPI PUSH3 0xCE PUSH3 0x5E JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0xEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x10F JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0xF0 JUMP JUMPDEST PUSH1 0x0 SWAP4 DUP2 ADD SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x137 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x14F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x15D DUP7 DUP4 DUP8 ADD PUSH3 0x74 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x174 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x183 DUP6 DUP3 DUP7 ADD PUSH3 0x74 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x1A2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x1C3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x217 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x1F2 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x213 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1FE JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x238 JUMPI PUSH3 0x238 PUSH3 0x5E JUMP JUMPDEST PUSH3 0x250 DUP2 PUSH3 0x249 DUP5 SLOAD PUSH3 0x18D JUMP JUMPDEST DUP5 PUSH3 0x1C9 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x288 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x26F JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x213 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x2B9 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x298 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x2D8 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x721 DUP1 PUSH3 0x2F8 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0xFE JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x13E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x151 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xD9 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xEB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x18A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x56B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC9 PUSH2 0xC4 CALLDATASIZE PUSH1 0x4 PUSH2 0x5D5 JUMP JUMPDEST PUSH2 0x21C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAD JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAD JUMP JUMPDEST PUSH2 0xC9 PUSH2 0xF9 CALLDATASIZE PUSH1 0x4 PUSH2 0x5FF JUMP JUMPDEST PUSH2 0x236 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAD JUMP JUMPDEST PUSH2 0xDD PUSH2 0x11B CALLDATASIZE PUSH1 0x4 PUSH2 0x63B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xA0 PUSH2 0x25A JUMP JUMPDEST PUSH2 0xC9 PUSH2 0x14C CALLDATASIZE PUSH1 0x4 PUSH2 0x5D5 JUMP JUMPDEST PUSH2 0x269 JUMP JUMPDEST PUSH2 0xDD PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0x65D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x199 SWAP1 PUSH2 0x690 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1C5 SWAP1 PUSH2 0x690 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x212 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1E7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x212 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1F5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x22A DUP2 DUP6 DUP6 PUSH2 0x277 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x244 DUP6 DUP3 DUP6 PUSH2 0x289 JUMP JUMPDEST PUSH2 0x24F DUP6 DUP6 DUP6 PUSH2 0x30D JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x199 SWAP1 PUSH2 0x690 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x22A DUP2 DUP6 DUP6 PUSH2 0x30D JUMP JUMPDEST PUSH2 0x284 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x36C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 LT ISZERO PUSH2 0x307 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x2F8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x307 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x36C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x337 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2EF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x361 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2EF JUMP JUMPDEST PUSH2 0x284 DUP4 DUP4 DUP4 PUSH2 0x441 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x396 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2EF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3C0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2EF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x307 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x433 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x46C JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x461 SWAP2 SWAP1 PUSH2 0x6CA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x4DE SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x4BF JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x2EF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4FA JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x519 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x55E SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x598 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x57C JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x5D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5F1 DUP4 PUSH2 0x5B9 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x614 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x61D DUP5 PUSH2 0x5B9 JUMP JUMPDEST SWAP3 POP PUSH2 0x62B PUSH1 0x20 DUP6 ADD PUSH2 0x5B9 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x64D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x656 DUP3 PUSH2 0x5B9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x670 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x679 DUP4 PUSH2 0x5B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x687 PUSH1 0x20 DUP5 ADD PUSH2 0x5B9 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x6A4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x6C4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x230 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE SWAP7 PUSH28 0xC0A141033BA9DB8A8E06B746A7666E561152D3AA276AD2EB6F8C16A7 DELEGATECALL PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"337:169:12:-:0;;;370:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;430:4;436:6;1667:5:1;:13;430:4:12;1667:5:1;:13;:::i;:::-;-1:-1:-1;1690:7:1;:17;1700:7;1690;:17;:::i;:::-;;1601:113;;370:76:12;;337:169;;14:127:16;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:16;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:16;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:16:o;991:562::-;1090:6;1098;1151:2;1139:9;1130:7;1126:23;1122:32;1119:52;;;1167:1;1164;1157:12;1119:52;1194:16;;-1:-1:-1;;;;;1259:14:16;;;1256:34;;;1286:1;1283;1276:12;1256:34;1309:61;1362:7;1353:6;1342:9;1338:22;1309:61;:::i;:::-;1299:71;;1416:2;1405:9;1401:18;1395:25;1379:41;;1445:2;1435:8;1432:16;1429:36;;;1461:1;1458;1451:12;1429:36;;1484:63;1539:7;1528:8;1517:9;1513:24;1484:63;:::i;:::-;1474:73;;;991:562;;;;;:::o;1558:380::-;1637:1;1633:12;;;;1680;;;1701:61;;1755:4;1747:6;1743:17;1733:27;;1701:61;1808:2;1800:6;1797:14;1777:18;1774:38;1771:161;;1854:10;1849:3;1845:20;1842:1;1835:31;1889:4;1886:1;1879:15;1917:4;1914:1;1907:15;1771:161;;1558:380;;;:::o;2069:545::-;2171:2;2166:3;2163:11;2160:448;;;2207:1;2232:5;2228:2;2221:17;2277:4;2273:2;2263:19;2347:2;2335:10;2331:19;2328:1;2324:27;2318:4;2314:38;2383:4;2371:10;2368:20;2365:47;;;-1:-1:-1;2406:4:16;2365:47;2461:2;2456:3;2452:12;2449:1;2445:20;2439:4;2435:31;2425:41;;2516:82;2534:2;2527:5;2524:13;2516:82;;;2579:17;;;2560:1;2549:13;2516:82;;;2520:3;;;2160:448;2069:545;;;:::o;2790:1352::-;2910:10;;-1:-1:-1;;;;;2932:30:16;;2929:56;;;2965:18;;:::i;:::-;2994:97;3084:6;3044:38;3076:4;3070:11;3044:38;:::i;:::-;3038:4;2994:97;:::i;:::-;3146:4;;3210:2;3199:14;;3227:1;3222:663;;;;3929:1;3946:6;3943:89;;;-1:-1:-1;3998:19:16;;;3992:26;3943:89;-1:-1:-1;;2747:1:16;2743:11;;;2739:24;2735:29;2725:40;2771:1;2767:11;;;2722:57;4045:81;;3192:944;;3222:663;2016:1;2009:14;;;2053:4;2040:18;;-1:-1:-1;;3258:20:16;;;3376:236;3390:7;3387:1;3384:14;3376:236;;;3479:19;;;3473:26;3458:42;;3571:27;;;;3539:1;3527:14;;;;3406:19;;3376:236;;;3380:3;3640:6;3631:7;3628:19;3625:201;;;3701:19;;;3695:26;-1:-1:-1;;3784:1:16;3780:14;;;3796:3;3776:24;3772:37;3768:42;3753:58;3738:74;;3625:201;-1:-1:-1;;;;;3872:1:16;3856:14;;;3852:22;3839:36;;-1:-1:-1;2790:1352:16:o;:::-;337:169:12;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_approve_542":{"entryPoint":631,"id":542,"parameterSlots":3,"returnSlots":0},"@_approve_602":{"entryPoint":876,"id":602,"parameterSlots":4,"returnSlots":0},"@_msgSender_767":{"entryPoint":null,"id":767,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_650":{"entryPoint":649,"id":650,"parameterSlots":3,"returnSlots":0},"@_transfer_381":{"entryPoint":781,"id":381,"parameterSlots":3,"returnSlots":0},"@_update_458":{"entryPoint":1089,"id":458,"parameterSlots":3,"returnSlots":0},"@allowance_278":{"entryPoint":null,"id":278,"parameterSlots":2,"returnSlots":1},"@approve_302":{"entryPoint":540,"id":302,"parameterSlots":2,"returnSlots":1},"@balanceOf_237":{"entryPoint":null,"id":237,"parameterSlots":1,"returnSlots":1},"@decimals_215":{"entryPoint":null,"id":215,"parameterSlots":0,"returnSlots":1},"@name_197":{"entryPoint":394,"id":197,"parameterSlots":0,"returnSlots":1},"@symbol_206":{"entryPoint":602,"id":206,"parameterSlots":0,"returnSlots":1},"@totalSupply_224":{"entryPoint":null,"id":224,"parameterSlots":0,"returnSlots":1},"@transferFrom_334":{"entryPoint":566,"id":334,"parameterSlots":3,"returnSlots":1},"@transfer_261":{"entryPoint":617,"id":261,"parameterSlots":2,"returnSlots":1},"abi_decode_address":{"entryPoint":1465,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":1595,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":1629,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":1535,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":1493,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1387,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":1738,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":1680,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:3523:16","statements":[{"nodeType":"YulBlock","src":"6:3:16","statements":[]},{"body":{"nodeType":"YulBlock","src":"135:427:16","statements":[{"nodeType":"YulVariableDeclaration","src":"145:12:16","value":{"kind":"number","nodeType":"YulLiteral","src":"155:2:16","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"149:2:16","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"173:9:16"},{"name":"_1","nodeType":"YulIdentifier","src":"184:2:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"166:6:16"},"nodeType":"YulFunctionCall","src":"166:21:16"},"nodeType":"YulExpressionStatement","src":"166:21:16"},{"nodeType":"YulVariableDeclaration","src":"196:27:16","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"216:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"210:5:16"},"nodeType":"YulFunctionCall","src":"210:13:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"200:6:16","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"243:9:16"},{"name":"_1","nodeType":"YulIdentifier","src":"254:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"239:3:16"},"nodeType":"YulFunctionCall","src":"239:18:16"},{"name":"length","nodeType":"YulIdentifier","src":"259:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"232:6:16"},"nodeType":"YulFunctionCall","src":"232:34:16"},"nodeType":"YulExpressionStatement","src":"232:34:16"},{"nodeType":"YulVariableDeclaration","src":"275:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"284:1:16","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"279:1:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"344:90:16","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"373:9:16"},{"name":"i","nodeType":"YulIdentifier","src":"384:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"369:3:16"},"nodeType":"YulFunctionCall","src":"369:17:16"},{"kind":"number","nodeType":"YulLiteral","src":"388:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"365:3:16"},"nodeType":"YulFunctionCall","src":"365:26:16"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"407:6:16"},{"name":"i","nodeType":"YulIdentifier","src":"415:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"403:3:16"},"nodeType":"YulFunctionCall","src":"403:14:16"},{"name":"_1","nodeType":"YulIdentifier","src":"419:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"399:3:16"},"nodeType":"YulFunctionCall","src":"399:23:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"393:5:16"},"nodeType":"YulFunctionCall","src":"393:30:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"358:6:16"},"nodeType":"YulFunctionCall","src":"358:66:16"},"nodeType":"YulExpressionStatement","src":"358:66:16"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"305:1:16"},{"name":"length","nodeType":"YulIdentifier","src":"308:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"302:2:16"},"nodeType":"YulFunctionCall","src":"302:13:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"316:19:16","statements":[{"nodeType":"YulAssignment","src":"318:15:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"327:1:16"},{"name":"_1","nodeType":"YulIdentifier","src":"330:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"323:3:16"},"nodeType":"YulFunctionCall","src":"323:10:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"318:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"298:3:16","statements":[]},"src":"294:140:16"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"458:9:16"},{"name":"length","nodeType":"YulIdentifier","src":"469:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"454:3:16"},"nodeType":"YulFunctionCall","src":"454:22:16"},{"kind":"number","nodeType":"YulLiteral","src":"478:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"450:3:16"},"nodeType":"YulFunctionCall","src":"450:31:16"},{"kind":"number","nodeType":"YulLiteral","src":"483:1:16","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"443:6:16"},"nodeType":"YulFunctionCall","src":"443:42:16"},"nodeType":"YulExpressionStatement","src":"443:42:16"},{"nodeType":"YulAssignment","src":"494:62:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"510:9:16"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"529:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"537:2:16","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"525:3:16"},"nodeType":"YulFunctionCall","src":"525:15:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"546:2:16","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"542:3:16"},"nodeType":"YulFunctionCall","src":"542:7:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"521:3:16"},"nodeType":"YulFunctionCall","src":"521:29:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"506:3:16"},"nodeType":"YulFunctionCall","src":"506:45:16"},{"kind":"number","nodeType":"YulLiteral","src":"553:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"502:3:16"},"nodeType":"YulFunctionCall","src":"502:54:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"494:4:16"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"104:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"115:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"126:4:16","type":""}],"src":"14:548:16"},{"body":{"nodeType":"YulBlock","src":"616:124:16","statements":[{"nodeType":"YulAssignment","src":"626:29:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"648:6:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"635:12:16"},"nodeType":"YulFunctionCall","src":"635:20:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"626:5:16"}]},{"body":{"nodeType":"YulBlock","src":"718:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"727:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"730:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"720:6:16"},"nodeType":"YulFunctionCall","src":"720:12:16"},"nodeType":"YulExpressionStatement","src":"720:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"677:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"688:5:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"703:3:16","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"708:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"699:3:16"},"nodeType":"YulFunctionCall","src":"699:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"712:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"695:3:16"},"nodeType":"YulFunctionCall","src":"695:19:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"684:3:16"},"nodeType":"YulFunctionCall","src":"684:31:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"674:2:16"},"nodeType":"YulFunctionCall","src":"674:42:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"667:6:16"},"nodeType":"YulFunctionCall","src":"667:50:16"},"nodeType":"YulIf","src":"664:70:16"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"595:6:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"606:5:16","type":""}],"src":"567:173:16"},{"body":{"nodeType":"YulBlock","src":"832:167:16","statements":[{"body":{"nodeType":"YulBlock","src":"878:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"887:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"890:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"880:6:16"},"nodeType":"YulFunctionCall","src":"880:12:16"},"nodeType":"YulExpressionStatement","src":"880:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"853:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"862:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"849:3:16"},"nodeType":"YulFunctionCall","src":"849:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"874:2:16","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"845:3:16"},"nodeType":"YulFunctionCall","src":"845:32:16"},"nodeType":"YulIf","src":"842:52:16"},{"nodeType":"YulAssignment","src":"903:39:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"932:9:16"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"913:18:16"},"nodeType":"YulFunctionCall","src":"913:29:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"903:6:16"}]},{"nodeType":"YulAssignment","src":"951:42:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"978:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"989:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"974:3:16"},"nodeType":"YulFunctionCall","src":"974:18:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"961:12:16"},"nodeType":"YulFunctionCall","src":"961:32:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"951:6:16"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"790:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"801:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"813:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"821:6:16","type":""}],"src":"745:254:16"},{"body":{"nodeType":"YulBlock","src":"1099:92:16","statements":[{"nodeType":"YulAssignment","src":"1109:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1121:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1132:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1117:3:16"},"nodeType":"YulFunctionCall","src":"1117:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1109:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1151:9:16"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1176:6:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1169:6:16"},"nodeType":"YulFunctionCall","src":"1169:14:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1162:6:16"},"nodeType":"YulFunctionCall","src":"1162:22:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1144:6:16"},"nodeType":"YulFunctionCall","src":"1144:41:16"},"nodeType":"YulExpressionStatement","src":"1144:41:16"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1068:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1079:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1090:4:16","type":""}],"src":"1004:187:16"},{"body":{"nodeType":"YulBlock","src":"1297:76:16","statements":[{"nodeType":"YulAssignment","src":"1307:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1319:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1330:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1315:3:16"},"nodeType":"YulFunctionCall","src":"1315:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1307:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1349:9:16"},{"name":"value0","nodeType":"YulIdentifier","src":"1360:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1342:6:16"},"nodeType":"YulFunctionCall","src":"1342:25:16"},"nodeType":"YulExpressionStatement","src":"1342:25:16"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1266:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1277:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1288:4:16","type":""}],"src":"1196:177:16"},{"body":{"nodeType":"YulBlock","src":"1482:224:16","statements":[{"body":{"nodeType":"YulBlock","src":"1528:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1537:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1540:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1530:6:16"},"nodeType":"YulFunctionCall","src":"1530:12:16"},"nodeType":"YulExpressionStatement","src":"1530:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1503:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"1512:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1499:3:16"},"nodeType":"YulFunctionCall","src":"1499:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"1524:2:16","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1495:3:16"},"nodeType":"YulFunctionCall","src":"1495:32:16"},"nodeType":"YulIf","src":"1492:52:16"},{"nodeType":"YulAssignment","src":"1553:39:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1582:9:16"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1563:18:16"},"nodeType":"YulFunctionCall","src":"1563:29:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1553:6:16"}]},{"nodeType":"YulAssignment","src":"1601:48:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1634:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1645:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1630:3:16"},"nodeType":"YulFunctionCall","src":"1630:18:16"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1611:18:16"},"nodeType":"YulFunctionCall","src":"1611:38:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1601:6:16"}]},{"nodeType":"YulAssignment","src":"1658:42:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1685:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1696:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1681:3:16"},"nodeType":"YulFunctionCall","src":"1681:18:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1668:12:16"},"nodeType":"YulFunctionCall","src":"1668:32:16"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1658:6:16"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1432:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1443:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1455:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1463:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1471:6:16","type":""}],"src":"1378:328:16"},{"body":{"nodeType":"YulBlock","src":"1808:87:16","statements":[{"nodeType":"YulAssignment","src":"1818:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1830:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1841:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1826:3:16"},"nodeType":"YulFunctionCall","src":"1826:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1818:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1860:9:16"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1875:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"1883:4:16","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1871:3:16"},"nodeType":"YulFunctionCall","src":"1871:17:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1853:6:16"},"nodeType":"YulFunctionCall","src":"1853:36:16"},"nodeType":"YulExpressionStatement","src":"1853:36:16"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1777:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1788:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1799:4:16","type":""}],"src":"1711:184:16"},{"body":{"nodeType":"YulBlock","src":"1970:116:16","statements":[{"body":{"nodeType":"YulBlock","src":"2016:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2025:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2028:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2018:6:16"},"nodeType":"YulFunctionCall","src":"2018:12:16"},"nodeType":"YulExpressionStatement","src":"2018:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1991:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"2000:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1987:3:16"},"nodeType":"YulFunctionCall","src":"1987:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"2012:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1983:3:16"},"nodeType":"YulFunctionCall","src":"1983:32:16"},"nodeType":"YulIf","src":"1980:52:16"},{"nodeType":"YulAssignment","src":"2041:39:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2070:9:16"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2051:18:16"},"nodeType":"YulFunctionCall","src":"2051:29:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2041:6:16"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1936:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1947:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1959:6:16","type":""}],"src":"1900:186:16"},{"body":{"nodeType":"YulBlock","src":"2178:173:16","statements":[{"body":{"nodeType":"YulBlock","src":"2224:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2233:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2236:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2226:6:16"},"nodeType":"YulFunctionCall","src":"2226:12:16"},"nodeType":"YulExpressionStatement","src":"2226:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2199:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"2208:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2195:3:16"},"nodeType":"YulFunctionCall","src":"2195:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"2220:2:16","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2191:3:16"},"nodeType":"YulFunctionCall","src":"2191:32:16"},"nodeType":"YulIf","src":"2188:52:16"},{"nodeType":"YulAssignment","src":"2249:39:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2278:9:16"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2259:18:16"},"nodeType":"YulFunctionCall","src":"2259:29:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2249:6:16"}]},{"nodeType":"YulAssignment","src":"2297:48:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2330:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2341:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2326:3:16"},"nodeType":"YulFunctionCall","src":"2326:18:16"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2307:18:16"},"nodeType":"YulFunctionCall","src":"2307:38:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2297:6:16"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2136:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2147:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2159:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2167:6:16","type":""}],"src":"2091:260:16"},{"body":{"nodeType":"YulBlock","src":"2411:325:16","statements":[{"nodeType":"YulAssignment","src":"2421:22:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2435:1:16","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"2438:4:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2431:3:16"},"nodeType":"YulFunctionCall","src":"2431:12:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2421:6:16"}]},{"nodeType":"YulVariableDeclaration","src":"2452:38:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2482:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"2488:1:16","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2478:3:16"},"nodeType":"YulFunctionCall","src":"2478:12:16"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"2456:18:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"2529:31:16","statements":[{"nodeType":"YulAssignment","src":"2531:27:16","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2545:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"2553:4:16","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2541:3:16"},"nodeType":"YulFunctionCall","src":"2541:17:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2531:6:16"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2509:18:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2502:6:16"},"nodeType":"YulFunctionCall","src":"2502:26:16"},"nodeType":"YulIf","src":"2499:61:16"},{"body":{"nodeType":"YulBlock","src":"2619:111:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2640:1:16","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2647:3:16","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2652:10:16","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2643:3:16"},"nodeType":"YulFunctionCall","src":"2643:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2633:6:16"},"nodeType":"YulFunctionCall","src":"2633:31:16"},"nodeType":"YulExpressionStatement","src":"2633:31:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2684:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2687:4:16","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2677:6:16"},"nodeType":"YulFunctionCall","src":"2677:15:16"},"nodeType":"YulExpressionStatement","src":"2677:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2712:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2715:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2705:6:16"},"nodeType":"YulFunctionCall","src":"2705:15:16"},"nodeType":"YulExpressionStatement","src":"2705:15:16"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2575:18:16"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2598:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"2606:2:16","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2595:2:16"},"nodeType":"YulFunctionCall","src":"2595:14:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2572:2:16"},"nodeType":"YulFunctionCall","src":"2572:38:16"},"nodeType":"YulIf","src":"2569:161:16"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2391:4:16","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"2400:6:16","type":""}],"src":"2356:380:16"},{"body":{"nodeType":"YulBlock","src":"2898:188:16","statements":[{"nodeType":"YulAssignment","src":"2908:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2920:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2931:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2916:3:16"},"nodeType":"YulFunctionCall","src":"2916:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2908:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2950:9:16"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2965:6:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2981:3:16","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2986:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2977:3:16"},"nodeType":"YulFunctionCall","src":"2977:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"2990:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2973:3:16"},"nodeType":"YulFunctionCall","src":"2973:19:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2961:3:16"},"nodeType":"YulFunctionCall","src":"2961:32:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2943:6:16"},"nodeType":"YulFunctionCall","src":"2943:51:16"},"nodeType":"YulExpressionStatement","src":"2943:51:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3014:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3025:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3010:3:16"},"nodeType":"YulFunctionCall","src":"3010:18:16"},{"name":"value1","nodeType":"YulIdentifier","src":"3030:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3003:6:16"},"nodeType":"YulFunctionCall","src":"3003:34:16"},"nodeType":"YulExpressionStatement","src":"3003:34:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3057:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3068:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3053:3:16"},"nodeType":"YulFunctionCall","src":"3053:18:16"},{"name":"value2","nodeType":"YulIdentifier","src":"3073:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3046:6:16"},"nodeType":"YulFunctionCall","src":"3046:34:16"},"nodeType":"YulExpressionStatement","src":"3046:34:16"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2851:9:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2862:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2870:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2878:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2889:4:16","type":""}],"src":"2741:345:16"},{"body":{"nodeType":"YulBlock","src":"3192:102:16","statements":[{"nodeType":"YulAssignment","src":"3202:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3214:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3225:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3210:3:16"},"nodeType":"YulFunctionCall","src":"3210:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3202:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3244:9:16"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3259:6:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3275:3:16","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"3280:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3271:3:16"},"nodeType":"YulFunctionCall","src":"3271:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"3284:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3267:3:16"},"nodeType":"YulFunctionCall","src":"3267:19:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3255:3:16"},"nodeType":"YulFunctionCall","src":"3255:32:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3237:6:16"},"nodeType":"YulFunctionCall","src":"3237:51:16"},"nodeType":"YulExpressionStatement","src":"3237:51:16"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3161:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3172:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3183:4:16","type":""}],"src":"3091:203:16"},{"body":{"nodeType":"YulBlock","src":"3347:174:16","statements":[{"nodeType":"YulAssignment","src":"3357:16:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3368:1:16"},{"name":"y","nodeType":"YulIdentifier","src":"3371:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3364:3:16"},"nodeType":"YulFunctionCall","src":"3364:9:16"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"3357:3:16"}]},{"body":{"nodeType":"YulBlock","src":"3404:111:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3425:1:16","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3432:3:16","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3437:10:16","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3428:3:16"},"nodeType":"YulFunctionCall","src":"3428:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3418:6:16"},"nodeType":"YulFunctionCall","src":"3418:31:16"},"nodeType":"YulExpressionStatement","src":"3418:31:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3469:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3472:4:16","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3462:6:16"},"nodeType":"YulFunctionCall","src":"3462:15:16"},"nodeType":"YulExpressionStatement","src":"3462:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3497:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3500:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3490:6:16"},"nodeType":"YulFunctionCall","src":"3490:15:16"},"nodeType":"YulExpressionStatement","src":"3490:15:16"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3388:1:16"},{"name":"sum","nodeType":"YulIdentifier","src":"3391:3:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3385:2:16"},"nodeType":"YulFunctionCall","src":"3385:10:16"},"nodeType":"YulIf","src":"3382:133:16"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"3330:1:16","type":""},{"name":"y","nodeType":"YulTypedName","src":"3333:1:16","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"3339:3:16","type":""}],"src":"3299:222:16"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n}","id":16,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100935760003560e01c8063313ce56711610066578063313ce567146100fe57806370a082311461010d57806395d89b4114610136578063a9059cbb1461013e578063dd62ed3e1461015157600080fd5b806306fdde0314610098578063095ea7b3146100b657806318160ddd146100d957806323b872dd146100eb575b600080fd5b6100a061018a565b6040516100ad919061056b565b60405180910390f35b6100c96100c43660046105d5565b61021c565b60405190151581526020016100ad565b6002545b6040519081526020016100ad565b6100c96100f93660046105ff565b610236565b604051601281526020016100ad565b6100dd61011b36600461063b565b6001600160a01b031660009081526020819052604090205490565b6100a061025a565b6100c961014c3660046105d5565b610269565b6100dd61015f36600461065d565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60606003805461019990610690565b80601f01602080910402602001604051908101604052809291908181526020018280546101c590610690565b80156102125780601f106101e757610100808354040283529160200191610212565b820191906000526020600020905b8154815290600101906020018083116101f557829003601f168201915b5050505050905090565b60003361022a818585610277565b60019150505b92915050565b600033610244858285610289565b61024f85858561030d565b506001949350505050565b60606004805461019990610690565b60003361022a81858561030d565b610284838383600161036c565b505050565b6001600160a01b0383811660009081526001602090815260408083209386168352929052205460001981101561030757818110156102f857604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064015b60405180910390fd5b6103078484848403600061036c565b50505050565b6001600160a01b03831661033757604051634b637e8f60e11b8152600060048201526024016102ef565b6001600160a01b0382166103615760405163ec442f0560e01b8152600060048201526024016102ef565b610284838383610441565b6001600160a01b0384166103965760405163e602df0560e01b8152600060048201526024016102ef565b6001600160a01b0383166103c057604051634a1406b160e11b8152600060048201526024016102ef565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561030757826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161043391815260200190565b60405180910390a350505050565b6001600160a01b03831661046c57806002600082825461046191906106ca565b909155506104de9050565b6001600160a01b038316600090815260208190526040902054818110156104bf5760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016102ef565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166104fa57600280548290039055610519565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161055e91815260200190565b60405180910390a3505050565b600060208083528351808285015260005b818110156105985785810183015185820160400152820161057c565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146105d057600080fd5b919050565b600080604083850312156105e857600080fd5b6105f1836105b9565b946020939093013593505050565b60008060006060848603121561061457600080fd5b61061d846105b9565b925061062b602085016105b9565b9150604084013590509250925092565b60006020828403121561064d57600080fd5b610656826105b9565b9392505050565b6000806040838503121561067057600080fd5b610679836105b9565b9150610687602084016105b9565b90509250929050565b600181811c908216806106a457607f821691505b6020821081036106c457634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561023057634e487b7160e01b600052601160045260246000fdfea264697066735822122047967bc0a141033ba9db8a8e06b746a7666e561152d3aa276ad2eb6f8c16a7f464736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0xFE JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x13E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x151 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xD9 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xEB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x18A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x56B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC9 PUSH2 0xC4 CALLDATASIZE PUSH1 0x4 PUSH2 0x5D5 JUMP JUMPDEST PUSH2 0x21C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAD JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAD JUMP JUMPDEST PUSH2 0xC9 PUSH2 0xF9 CALLDATASIZE PUSH1 0x4 PUSH2 0x5FF JUMP JUMPDEST PUSH2 0x236 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAD JUMP JUMPDEST PUSH2 0xDD PUSH2 0x11B CALLDATASIZE PUSH1 0x4 PUSH2 0x63B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xA0 PUSH2 0x25A JUMP JUMPDEST PUSH2 0xC9 PUSH2 0x14C CALLDATASIZE PUSH1 0x4 PUSH2 0x5D5 JUMP JUMPDEST PUSH2 0x269 JUMP JUMPDEST PUSH2 0xDD PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0x65D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x199 SWAP1 PUSH2 0x690 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1C5 SWAP1 PUSH2 0x690 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x212 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1E7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x212 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1F5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x22A DUP2 DUP6 DUP6 PUSH2 0x277 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x244 DUP6 DUP3 DUP6 PUSH2 0x289 JUMP JUMPDEST PUSH2 0x24F DUP6 DUP6 DUP6 PUSH2 0x30D JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x199 SWAP1 PUSH2 0x690 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x22A DUP2 DUP6 DUP6 PUSH2 0x30D JUMP JUMPDEST PUSH2 0x284 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x36C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 LT ISZERO PUSH2 0x307 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x2F8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x307 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x36C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x337 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2EF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x361 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2EF JUMP JUMPDEST PUSH2 0x284 DUP4 DUP4 DUP4 PUSH2 0x441 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x396 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2EF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3C0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2EF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x307 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x433 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x46C JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x461 SWAP2 SWAP1 PUSH2 0x6CA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x4DE SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x4BF JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x2EF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4FA JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x519 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x55E SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x598 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x57C JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x5D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5F1 DUP4 PUSH2 0x5B9 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x614 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x61D DUP5 PUSH2 0x5B9 JUMP JUMPDEST SWAP3 POP PUSH2 0x62B PUSH1 0x20 DUP6 ADD PUSH2 0x5B9 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x64D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x656 DUP3 PUSH2 0x5B9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x670 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x679 DUP4 PUSH2 0x5B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x687 PUSH1 0x20 DUP5 ADD PUSH2 0x5B9 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x6A4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x6C4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x230 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE SWAP7 PUSH28 0xC0A141033BA9DB8A8E06B746A7666E561152D3AA276AD2EB6F8C16A7 DELEGATECALL PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"337:169:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:16;;1162:22;1144:41;;1132:2;1117:18;3998:186:1;1004:187:16;2849:97:1;2927:12;;2849:97;;;1342:25:16;;;1330:2;1315:18;2849:97:1;1196:177:16;4776:244:1;;;;;;:::i;:::-;;:::i;2707:82::-;;;2780:2;1853:36:16;;1841:2;1826:18;2707:82:1;1711:184:16;3004:116:1;;;;;;:::i;:::-;-1:-1:-1;;;;;3095:18:1;3069:7;3095:18;;;;;;;;;;;;3004:116;1981:93;;;:::i;3315:178::-;;;;;;:::i;:::-;;:::i;3551:140::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3657:18:1;;;3631:7;3657:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3551:140;1779:89;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;735:10:4;4125:31:1;735:10:4;4141:7:1;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;;:::o;4776:244::-;4863:4;735:10:4;4919:37:1;4935:4;735:10:4;4950:5:1;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;-1:-1:-1;5009:4:1;;4776:244;-1:-1:-1;;;;4776:244:1:o;1981:93::-;2028:13;2060:7;2053:14;;;;;:::i;3315:178::-;3384:4;735:10:4;3438:27:1;735:10:4;3455:2:1;3459:5;3438:9;:27::i;8726:128::-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;10415:476::-;-1:-1:-1;;;;;3657:18:1;;;10514:24;3657:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10580:36:1;;10576:309;;;10655:5;10636:16;:24;10632:130;;;10687:60;;-1:-1:-1;;;10687:60:1;;-1:-1:-1;;;;;2961:32:16;;10687:60:1;;;2943:51:16;3010:18;;;3003:34;;;3053:18;;;3046:34;;;2916:18;;10687:60:1;;;;;;;;10632:130;10803:57;10812:5;10819:7;10847:5;10828:16;:24;10854:5;10803:8;:57::i;:::-;10504:387;10415:476;;;:::o;5393:300::-;-1:-1:-1;;;;;5476:18:1;;5472:86;;5517:30;;-1:-1:-1;;;5517:30:1;;5544:1;5517:30;;;3237:51:16;3210:18;;5517:30:1;3091:203:16;5472:86:1;-1:-1:-1;;;;;5571:16:1;;5567:86;;5610:32;;-1:-1:-1;;;5610:32:1;;5639:1;5610:32;;;3237:51:16;3210:18;;5610:32:1;3091:203:16;5567:86:1;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;9701:432::-;-1:-1:-1;;;;;9813:19:1;;9809:89;;9855:32;;-1:-1:-1;;;9855:32:1;;9884:1;9855:32;;;3237:51:16;3210:18;;9855:32:1;3091:203:16;9809:89:1;-1:-1:-1;;;;;9911:21:1;;9907:90;;9955:31;;-1:-1:-1;;;9955:31:1;;9983:1;9955:31;;;3237:51:16;3210:18;;9955:31:1;3091:203:16;9907:90:1;-1:-1:-1;;;;;10006:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10051:76;;;;10101:7;-1:-1:-1;;;;;10085:31:1;10094:5;-1:-1:-1;;;;;10085:31:1;;10110:5;10085:31;;;;1342:25:16;;1330:2;1315:18;;1196:177;10085:31:1;;;;;;;;9701:432;;;;:::o;6008:1107::-;-1:-1:-1;;;;;6097:18:1;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6093:540:1;;-1:-1:-1;6093:540:1;;-1:-1:-1;;;;;6307:15:1;;6285:19;6307:15;;;;;;;;;;;6340:19;;;6336:115;;;6386:50;;-1:-1:-1;;;6386:50:1;;-1:-1:-1;;;;;2961:32:16;;6386:50:1;;;2943:51:16;3010:18;;;3003:34;;;3053:18;;;3046:34;;;2916:18;;6386:50:1;2741:345:16;6336:115:1;-1:-1:-1;;;;;6571:15:1;;:9;:15;;;;;;;;;;6589:19;;;;6571:37;;6093:540;-1:-1:-1;;;;;6647:16:1;;6643:425;;6810:12;:21;;;;;;;6643:425;;;-1:-1:-1;;;;;7021:13:1;;:9;:13;;;;;;;;;;:22;;;;;;6643:425;7098:2;-1:-1:-1;;;;;7083:25:1;7092:4;-1:-1:-1;;;;;7083:25:1;;7102:5;7083:25;;;;1342::16;;1330:2;1315:18;;1196:177;7083:25:1;;;;;;;;6008:1107;;;:::o;14:548:16:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:16;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:16:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:186::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;2051:29;2070:9;2051:29;:::i;:::-;2041:39;1900:186;-1:-1:-1;;;1900:186:16:o;2091:260::-;2159:6;2167;2220:2;2208:9;2199:7;2195:23;2191:32;2188:52;;;2236:1;2233;2226:12;2188:52;2259:29;2278:9;2259:29;:::i;:::-;2249:39;;2307:38;2341:2;2330:9;2326:18;2307:38;:::i;:::-;2297:48;;2091:260;;;;;:::o;2356:380::-;2435:1;2431:12;;;;2478;;;2499:61;;2553:4;2545:6;2541:17;2531:27;;2499:61;2606:2;2598:6;2595:14;2575:18;2572:38;2569:161;;2652:10;2647:3;2643:20;2640:1;2633:31;2687:4;2684:1;2677:15;2715:4;2712:1;2705:15;2569:161;;2356:380;;;:::o;3299:222::-;3364:9;;;3385:10;;;3382:133;;;3437:10;3432:3;3428:20;3425:1;3418:31;3472:4;3469:1;3462:15;3500:4;3497:1;3490:15"},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LPToken.sol\":\"LPToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/LPToken.sol\":{\"keccak256\":\"0x4048c56d416c225e2b6bff823124926b89bd890cbe4872a882bedce74bd0ba95\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d2747c21d85a7bc0ef661ff314d00c615e7fe8355ea3130635d434c9c34e6bc6\",\"dweb:/ipfs/QmQYyVDNgrkpqpi7jFUoFmH49nbWvwKLExLFL1xQNvUZNX\"]}},\"version\":1}"}},"contracts/NewToken.sol":{"NewToken":{"abi":[{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_188":{"entryPoint":null,"id":188,"parameterSlots":2,"returnSlots":0},"@_6096":{"entryPoint":null,"id":6096,"parameterSlots":2,"returnSlots":0},"@_mint_491":{"entryPoint":154,"id":491,"parameterSlots":2,"returnSlots":0},"@_update_458":{"entryPoint":220,"id":458,"parameterSlots":3,"returnSlots":0},"@decimals_215":{"entryPoint":149,"id":215,"parameterSlots":0,"returnSlots":1},"abi_decode_string_fromMemory":{"entryPoint":549,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":724,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":1504,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_helper":{"entryPoint":1199,"id":null,"parameterSlots":2,"returnSlots":2},"checked_exp_t_uint256_t_uint8":{"entryPoint":1454,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_unsigned":{"entryPoint":1272,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":1478,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":890,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":973,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":830,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":1177,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":527,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:6702:16","statements":[{"nodeType":"YulBlock","src":"6:3:16","statements":[]},{"body":{"nodeType":"YulBlock","src":"46:95:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"63:1:16","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"70:3:16","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"75:10:16","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"66:3:16"},"nodeType":"YulFunctionCall","src":"66:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56:6:16"},"nodeType":"YulFunctionCall","src":"56:31:16"},"nodeType":"YulExpressionStatement","src":"56:31:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"106:4:16","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"96:6:16"},"nodeType":"YulFunctionCall","src":"96:15:16"},"nodeType":"YulExpressionStatement","src":"96:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"127:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"130:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"120:6:16"},"nodeType":"YulFunctionCall","src":"120:15:16"},"nodeType":"YulExpressionStatement","src":"120:15:16"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"14:127:16"},{"body":{"nodeType":"YulBlock","src":"210:776:16","statements":[{"body":{"nodeType":"YulBlock","src":"259:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"268:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"271:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"261:6:16"},"nodeType":"YulFunctionCall","src":"261:12:16"},"nodeType":"YulExpressionStatement","src":"261:12:16"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"238:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"246:4:16","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"234:3:16"},"nodeType":"YulFunctionCall","src":"234:17:16"},{"name":"end","nodeType":"YulIdentifier","src":"253:3:16"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"230:3:16"},"nodeType":"YulFunctionCall","src":"230:27:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"223:6:16"},"nodeType":"YulFunctionCall","src":"223:35:16"},"nodeType":"YulIf","src":"220:55:16"},{"nodeType":"YulVariableDeclaration","src":"284:23:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"300:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"294:5:16"},"nodeType":"YulFunctionCall","src":"294:13:16"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"288:2:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"316:28:16","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"334:2:16","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"338:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"330:3:16"},"nodeType":"YulFunctionCall","src":"330:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"342:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"326:3:16"},"nodeType":"YulFunctionCall","src":"326:18:16"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"320:2:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"367:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"369:16:16"},"nodeType":"YulFunctionCall","src":"369:18:16"},"nodeType":"YulExpressionStatement","src":"369:18:16"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"359:2:16"},{"name":"_2","nodeType":"YulIdentifier","src":"363:2:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"356:2:16"},"nodeType":"YulFunctionCall","src":"356:10:16"},"nodeType":"YulIf","src":"353:36:16"},{"nodeType":"YulVariableDeclaration","src":"398:17:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"412:2:16","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"408:3:16"},"nodeType":"YulFunctionCall","src":"408:7:16"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"402:2:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"424:23:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"444:2:16","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"438:5:16"},"nodeType":"YulFunctionCall","src":"438:9:16"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"428:6:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"456:71:16","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"478:6:16"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"502:2:16"},{"kind":"number","nodeType":"YulLiteral","src":"506:4:16","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"498:3:16"},"nodeType":"YulFunctionCall","src":"498:13:16"},{"name":"_3","nodeType":"YulIdentifier","src":"513:2:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"494:3:16"},"nodeType":"YulFunctionCall","src":"494:22:16"},{"kind":"number","nodeType":"YulLiteral","src":"518:2:16","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"490:3:16"},"nodeType":"YulFunctionCall","src":"490:31:16"},{"name":"_3","nodeType":"YulIdentifier","src":"523:2:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"486:3:16"},"nodeType":"YulFunctionCall","src":"486:40:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"474:3:16"},"nodeType":"YulFunctionCall","src":"474:53:16"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"460:10:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"586:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"588:16:16"},"nodeType":"YulFunctionCall","src":"588:18:16"},"nodeType":"YulExpressionStatement","src":"588:18:16"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"545:10:16"},{"name":"_2","nodeType":"YulIdentifier","src":"557:2:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"542:2:16"},"nodeType":"YulFunctionCall","src":"542:18:16"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"565:10:16"},{"name":"memPtr","nodeType":"YulIdentifier","src":"577:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"562:2:16"},"nodeType":"YulFunctionCall","src":"562:22:16"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"539:2:16"},"nodeType":"YulFunctionCall","src":"539:46:16"},"nodeType":"YulIf","src":"536:72:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"624:2:16","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"628:10:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"617:6:16"},"nodeType":"YulFunctionCall","src":"617:22:16"},"nodeType":"YulExpressionStatement","src":"617:22:16"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"655:6:16"},{"name":"_1","nodeType":"YulIdentifier","src":"663:2:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"648:6:16"},"nodeType":"YulFunctionCall","src":"648:18:16"},"nodeType":"YulExpressionStatement","src":"648:18:16"},{"nodeType":"YulVariableDeclaration","src":"675:14:16","value":{"kind":"number","nodeType":"YulLiteral","src":"685:4:16","type":"","value":"0x20"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"679:2:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"735:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"744:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"747:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"737:6:16"},"nodeType":"YulFunctionCall","src":"737:12:16"},"nodeType":"YulExpressionStatement","src":"737:12:16"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"712:6:16"},{"name":"_1","nodeType":"YulIdentifier","src":"720:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"708:3:16"},"nodeType":"YulFunctionCall","src":"708:15:16"},{"name":"_4","nodeType":"YulIdentifier","src":"725:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"704:3:16"},"nodeType":"YulFunctionCall","src":"704:24:16"},{"name":"end","nodeType":"YulIdentifier","src":"730:3:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"701:2:16"},"nodeType":"YulFunctionCall","src":"701:33:16"},"nodeType":"YulIf","src":"698:53:16"},{"nodeType":"YulVariableDeclaration","src":"760:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"769:1:16","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"764:1:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"825:87:16","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"854:6:16"},{"name":"i","nodeType":"YulIdentifier","src":"862:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"850:3:16"},"nodeType":"YulFunctionCall","src":"850:14:16"},{"name":"_4","nodeType":"YulIdentifier","src":"866:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"846:3:16"},"nodeType":"YulFunctionCall","src":"846:23:16"},{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"885:6:16"},{"name":"i","nodeType":"YulIdentifier","src":"893:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"881:3:16"},"nodeType":"YulFunctionCall","src":"881:14:16"},{"name":"_4","nodeType":"YulIdentifier","src":"897:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"877:3:16"},"nodeType":"YulFunctionCall","src":"877:23:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"871:5:16"},"nodeType":"YulFunctionCall","src":"871:30:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"839:6:16"},"nodeType":"YulFunctionCall","src":"839:63:16"},"nodeType":"YulExpressionStatement","src":"839:63:16"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"790:1:16"},{"name":"_1","nodeType":"YulIdentifier","src":"793:2:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"787:2:16"},"nodeType":"YulFunctionCall","src":"787:9:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"797:19:16","statements":[{"nodeType":"YulAssignment","src":"799:15:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"808:1:16"},{"name":"_4","nodeType":"YulIdentifier","src":"811:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"804:3:16"},"nodeType":"YulFunctionCall","src":"804:10:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"799:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"783:3:16","statements":[]},"src":"779:133:16"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"936:6:16"},{"name":"_1","nodeType":"YulIdentifier","src":"944:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"932:3:16"},"nodeType":"YulFunctionCall","src":"932:15:16"},{"name":"_4","nodeType":"YulIdentifier","src":"949:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"928:3:16"},"nodeType":"YulFunctionCall","src":"928:24:16"},{"kind":"number","nodeType":"YulLiteral","src":"954:1:16","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"921:6:16"},"nodeType":"YulFunctionCall","src":"921:35:16"},"nodeType":"YulExpressionStatement","src":"921:35:16"},{"nodeType":"YulAssignment","src":"965:15:16","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"974:6:16"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"965:5:16"}]}]},"name":"abi_decode_string_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"184:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"192:3:16","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"200:5:16","type":""}],"src":"146:840:16"},{"body":{"nodeType":"YulBlock","src":"1109:444:16","statements":[{"body":{"nodeType":"YulBlock","src":"1155:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1164:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1167:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1157:6:16"},"nodeType":"YulFunctionCall","src":"1157:12:16"},"nodeType":"YulExpressionStatement","src":"1157:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1130:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"1139:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1126:3:16"},"nodeType":"YulFunctionCall","src":"1126:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"1151:2:16","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1122:3:16"},"nodeType":"YulFunctionCall","src":"1122:32:16"},"nodeType":"YulIf","src":"1119:52:16"},{"nodeType":"YulVariableDeclaration","src":"1180:30:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1200:9:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1194:5:16"},"nodeType":"YulFunctionCall","src":"1194:16:16"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1184:6:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1219:28:16","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1237:2:16","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"1241:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1233:3:16"},"nodeType":"YulFunctionCall","src":"1233:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"1245:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1229:3:16"},"nodeType":"YulFunctionCall","src":"1229:18:16"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1223:2:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"1274:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1283:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1286:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1276:6:16"},"nodeType":"YulFunctionCall","src":"1276:12:16"},"nodeType":"YulExpressionStatement","src":"1276:12:16"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1262:6:16"},{"name":"_1","nodeType":"YulIdentifier","src":"1270:2:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1259:2:16"},"nodeType":"YulFunctionCall","src":"1259:14:16"},"nodeType":"YulIf","src":"1256:34:16"},{"nodeType":"YulAssignment","src":"1299:71:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1342:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"1353:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1338:3:16"},"nodeType":"YulFunctionCall","src":"1338:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1362:7:16"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1309:28:16"},"nodeType":"YulFunctionCall","src":"1309:61:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1299:6:16"}]},{"nodeType":"YulVariableDeclaration","src":"1379:41:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1405:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1416:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1401:3:16"},"nodeType":"YulFunctionCall","src":"1401:18:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1395:5:16"},"nodeType":"YulFunctionCall","src":"1395:25:16"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"1383:8:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"1449:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1458:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1461:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1451:6:16"},"nodeType":"YulFunctionCall","src":"1451:12:16"},"nodeType":"YulExpressionStatement","src":"1451:12:16"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"1435:8:16"},{"name":"_1","nodeType":"YulIdentifier","src":"1445:2:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1432:2:16"},"nodeType":"YulFunctionCall","src":"1432:16:16"},"nodeType":"YulIf","src":"1429:36:16"},{"nodeType":"YulAssignment","src":"1474:73:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1517:9:16"},{"name":"offset_1","nodeType":"YulIdentifier","src":"1528:8:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1513:3:16"},"nodeType":"YulFunctionCall","src":"1513:24:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1539:7:16"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1484:28:16"},"nodeType":"YulFunctionCall","src":"1484:63:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1474:6:16"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1067:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1078:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1090:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1098:6:16","type":""}],"src":"991:562:16"},{"body":{"nodeType":"YulBlock","src":"1613:325:16","statements":[{"nodeType":"YulAssignment","src":"1623:22:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1637:1:16","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"1640:4:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1633:3:16"},"nodeType":"YulFunctionCall","src":"1633:12:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1623:6:16"}]},{"nodeType":"YulVariableDeclaration","src":"1654:38:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1684:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"1690:1:16","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1680:3:16"},"nodeType":"YulFunctionCall","src":"1680:12:16"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"1658:18:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"1731:31:16","statements":[{"nodeType":"YulAssignment","src":"1733:27:16","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1747:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"1755:4:16","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1743:3:16"},"nodeType":"YulFunctionCall","src":"1743:17:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1733:6:16"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1711:18:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1704:6:16"},"nodeType":"YulFunctionCall","src":"1704:26:16"},"nodeType":"YulIf","src":"1701:61:16"},{"body":{"nodeType":"YulBlock","src":"1821:111:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1842:1:16","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1849:3:16","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1854:10:16","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1845:3:16"},"nodeType":"YulFunctionCall","src":"1845:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1835:6:16"},"nodeType":"YulFunctionCall","src":"1835:31:16"},"nodeType":"YulExpressionStatement","src":"1835:31:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1886:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1889:4:16","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1879:6:16"},"nodeType":"YulFunctionCall","src":"1879:15:16"},"nodeType":"YulExpressionStatement","src":"1879:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1914:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1917:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1907:6:16"},"nodeType":"YulFunctionCall","src":"1907:15:16"},"nodeType":"YulExpressionStatement","src":"1907:15:16"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1777:18:16"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1800:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"1808:2:16","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1797:2:16"},"nodeType":"YulFunctionCall","src":"1797:14:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1774:2:16"},"nodeType":"YulFunctionCall","src":"1774:38:16"},"nodeType":"YulIf","src":"1771:161:16"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1593:4:16","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1602:6:16","type":""}],"src":"1558:380:16"},{"body":{"nodeType":"YulBlock","src":"1999:65:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2016:1:16","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"2019:3:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2009:6:16"},"nodeType":"YulFunctionCall","src":"2009:14:16"},"nodeType":"YulExpressionStatement","src":"2009:14:16"},{"nodeType":"YulAssignment","src":"2032:26:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2050:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2053:4:16","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2040:9:16"},"nodeType":"YulFunctionCall","src":"2040:18:16"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"2032:4:16"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"1982:3:16","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"1990:4:16","type":""}],"src":"1943:121:16"},{"body":{"nodeType":"YulBlock","src":"2150:464:16","statements":[{"body":{"nodeType":"YulBlock","src":"2183:425:16","statements":[{"nodeType":"YulVariableDeclaration","src":"2197:11:16","value":{"kind":"number","nodeType":"YulLiteral","src":"2207:1:16","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2201:2:16","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2228:2:16"},{"name":"array","nodeType":"YulIdentifier","src":"2232:5:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2221:6:16"},"nodeType":"YulFunctionCall","src":"2221:17:16"},"nodeType":"YulExpressionStatement","src":"2221:17:16"},{"nodeType":"YulVariableDeclaration","src":"2251:31:16","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2273:2:16"},{"kind":"number","nodeType":"YulLiteral","src":"2277:4:16","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2263:9:16"},"nodeType":"YulFunctionCall","src":"2263:19:16"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"2255:4:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2295:57:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2318:4:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2328:1:16","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2335:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"2347:2:16","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2331:3:16"},"nodeType":"YulFunctionCall","src":"2331:19:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2324:3:16"},"nodeType":"YulFunctionCall","src":"2324:27:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2314:3:16"},"nodeType":"YulFunctionCall","src":"2314:38:16"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"2299:11:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"2389:23:16","statements":[{"nodeType":"YulAssignment","src":"2391:19:16","value":{"name":"data","nodeType":"YulIdentifier","src":"2406:4:16"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"2391:11:16"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2371:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"2383:4:16","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2368:2:16"},"nodeType":"YulFunctionCall","src":"2368:20:16"},"nodeType":"YulIf","src":"2365:47:16"},{"nodeType":"YulVariableDeclaration","src":"2425:41:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2439:4:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2449:1:16","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2456:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"2461:2:16","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2452:3:16"},"nodeType":"YulFunctionCall","src":"2452:12:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2445:3:16"},"nodeType":"YulFunctionCall","src":"2445:20:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2435:3:16"},"nodeType":"YulFunctionCall","src":"2435:31:16"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"2429:2:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2479:24:16","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"2492:11:16"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"2483:5:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"2577:21:16","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2586:5:16"},{"name":"_1","nodeType":"YulIdentifier","src":"2593:2:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2579:6:16"},"nodeType":"YulFunctionCall","src":"2579:17:16"},"nodeType":"YulExpressionStatement","src":"2579:17:16"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2527:5:16"},{"name":"_2","nodeType":"YulIdentifier","src":"2534:2:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2524:2:16"},"nodeType":"YulFunctionCall","src":"2524:13:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2538:26:16","statements":[{"nodeType":"YulAssignment","src":"2540:22:16","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2553:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"2560:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2549:3:16"},"nodeType":"YulFunctionCall","src":"2549:13:16"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"2540:5:16"}]}]},"pre":{"nodeType":"YulBlock","src":"2520:3:16","statements":[]},"src":"2516:82:16"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2166:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"2171:2:16","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2163:2:16"},"nodeType":"YulFunctionCall","src":"2163:11:16"},"nodeType":"YulIf","src":"2160:448:16"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"2122:5:16","type":""},{"name":"len","nodeType":"YulTypedName","src":"2129:3:16","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"2134:10:16","type":""}],"src":"2069:545:16"},{"body":{"nodeType":"YulBlock","src":"2704:81:16","statements":[{"nodeType":"YulAssignment","src":"2714:65:16","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2729:4:16"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2747:1:16","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"2750:3:16"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2743:3:16"},"nodeType":"YulFunctionCall","src":"2743:11:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2760:1:16","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2756:3:16"},"nodeType":"YulFunctionCall","src":"2756:6:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2739:3:16"},"nodeType":"YulFunctionCall","src":"2739:24:16"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2735:3:16"},"nodeType":"YulFunctionCall","src":"2735:29:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2725:3:16"},"nodeType":"YulFunctionCall","src":"2725:40:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2771:1:16","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"2774:3:16"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2767:3:16"},"nodeType":"YulFunctionCall","src":"2767:11:16"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2722:2:16"},"nodeType":"YulFunctionCall","src":"2722:57:16"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"2714:4:16"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2681:4:16","type":""},{"name":"len","nodeType":"YulTypedName","src":"2687:3:16","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"2695:4:16","type":""}],"src":"2619:166:16"},{"body":{"nodeType":"YulBlock","src":"2886:1256:16","statements":[{"nodeType":"YulVariableDeclaration","src":"2896:24:16","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2916:3:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2910:5:16"},"nodeType":"YulFunctionCall","src":"2910:10:16"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"2900:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"2963:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2965:16:16"},"nodeType":"YulFunctionCall","src":"2965:18:16"},"nodeType":"YulExpressionStatement","src":"2965:18:16"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"2935:6:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2951:2:16","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"2955:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2947:3:16"},"nodeType":"YulFunctionCall","src":"2947:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"2959:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2943:3:16"},"nodeType":"YulFunctionCall","src":"2943:18:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2932:2:16"},"nodeType":"YulFunctionCall","src":"2932:30:16"},"nodeType":"YulIf","src":"2929:56:16"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3038:4:16"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3076:4:16"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"3070:5:16"},"nodeType":"YulFunctionCall","src":"3070:11:16"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"3044:25:16"},"nodeType":"YulFunctionCall","src":"3044:38:16"},{"name":"newLen","nodeType":"YulIdentifier","src":"3084:6:16"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"2994:43:16"},"nodeType":"YulFunctionCall","src":"2994:97:16"},"nodeType":"YulExpressionStatement","src":"2994:97:16"},{"nodeType":"YulVariableDeclaration","src":"3100:18:16","value":{"kind":"number","nodeType":"YulLiteral","src":"3117:1:16","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"3104:9:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3127:23:16","value":{"kind":"number","nodeType":"YulLiteral","src":"3146:4:16","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"3131:11:16","type":""}]},{"nodeType":"YulAssignment","src":"3159:24:16","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3172:11:16"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3159:9:16"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"3229:656:16","statements":[{"nodeType":"YulVariableDeclaration","src":"3243:35:16","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"3262:6:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3274:2:16","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3270:3:16"},"nodeType":"YulFunctionCall","src":"3270:7:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3258:3:16"},"nodeType":"YulFunctionCall","src":"3258:20:16"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"3247:7:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3291:49:16","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3335:4:16"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"3305:29:16"},"nodeType":"YulFunctionCall","src":"3305:35:16"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"3295:6:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3353:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"3362:1:16","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3357:1:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"3440:172:16","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3465:6:16"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3483:3:16"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"3488:9:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3479:3:16"},"nodeType":"YulFunctionCall","src":"3479:19:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3473:5:16"},"nodeType":"YulFunctionCall","src":"3473:26:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3458:6:16"},"nodeType":"YulFunctionCall","src":"3458:42:16"},"nodeType":"YulExpressionStatement","src":"3458:42:16"},{"nodeType":"YulAssignment","src":"3517:24:16","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3531:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"3539:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3527:3:16"},"nodeType":"YulFunctionCall","src":"3527:14:16"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3517:6:16"}]},{"nodeType":"YulAssignment","src":"3558:40:16","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3575:9:16"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3586:11:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3571:3:16"},"nodeType":"YulFunctionCall","src":"3571:27:16"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3558:9:16"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3387:1:16"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"3390:7:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3384:2:16"},"nodeType":"YulFunctionCall","src":"3384:14:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3399:28:16","statements":[{"nodeType":"YulAssignment","src":"3401:24:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3410:1:16"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3413:11:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3406:3:16"},"nodeType":"YulFunctionCall","src":"3406:19:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3401:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"3380:3:16","statements":[]},"src":"3376:236:16"},{"body":{"nodeType":"YulBlock","src":"3660:166:16","statements":[{"nodeType":"YulVariableDeclaration","src":"3678:43:16","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3705:3:16"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"3710:9:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3701:3:16"},"nodeType":"YulFunctionCall","src":"3701:19:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3695:5:16"},"nodeType":"YulFunctionCall","src":"3695:26:16"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"3682:9:16","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3745:6:16"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"3757:9:16"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3784:1:16","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"3787:6:16"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3780:3:16"},"nodeType":"YulFunctionCall","src":"3780:14:16"},{"kind":"number","nodeType":"YulLiteral","src":"3796:3:16","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3776:3:16"},"nodeType":"YulFunctionCall","src":"3776:24:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3806:1:16","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3802:3:16"},"nodeType":"YulFunctionCall","src":"3802:6:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3772:3:16"},"nodeType":"YulFunctionCall","src":"3772:37:16"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3768:3:16"},"nodeType":"YulFunctionCall","src":"3768:42:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3753:3:16"},"nodeType":"YulFunctionCall","src":"3753:58:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3738:6:16"},"nodeType":"YulFunctionCall","src":"3738:74:16"},"nodeType":"YulExpressionStatement","src":"3738:74:16"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"3631:7:16"},{"name":"newLen","nodeType":"YulIdentifier","src":"3640:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3628:2:16"},"nodeType":"YulFunctionCall","src":"3628:19:16"},"nodeType":"YulIf","src":"3625:201:16"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3846:4:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3860:1:16","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"3863:6:16"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3856:3:16"},"nodeType":"YulFunctionCall","src":"3856:14:16"},{"kind":"number","nodeType":"YulLiteral","src":"3872:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3852:3:16"},"nodeType":"YulFunctionCall","src":"3852:22:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3839:6:16"},"nodeType":"YulFunctionCall","src":"3839:36:16"},"nodeType":"YulExpressionStatement","src":"3839:36:16"}]},"nodeType":"YulCase","src":"3222:663:16","value":{"kind":"number","nodeType":"YulLiteral","src":"3227:1:16","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"3902:234:16","statements":[{"nodeType":"YulVariableDeclaration","src":"3916:14:16","value":{"kind":"number","nodeType":"YulLiteral","src":"3929:1:16","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3920:5:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"3965:67:16","statements":[{"nodeType":"YulAssignment","src":"3983:35:16","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4002:3:16"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4007:9:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3998:3:16"},"nodeType":"YulFunctionCall","src":"3998:19:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3992:5:16"},"nodeType":"YulFunctionCall","src":"3992:26:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3983:5:16"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"3946:6:16"},"nodeType":"YulIf","src":"3943:89:16"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4052:4:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4111:5:16"},{"name":"newLen","nodeType":"YulIdentifier","src":"4118:6:16"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"4058:52:16"},"nodeType":"YulFunctionCall","src":"4058:67:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4045:6:16"},"nodeType":"YulFunctionCall","src":"4045:81:16"},"nodeType":"YulExpressionStatement","src":"4045:81:16"}]},"nodeType":"YulCase","src":"3894:242:16","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"3202:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"3210:2:16","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3199:2:16"},"nodeType":"YulFunctionCall","src":"3199:14:16"},"nodeType":"YulSwitch","src":"3192:944:16"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"2871:4:16","type":""},{"name":"src","nodeType":"YulTypedName","src":"2877:3:16","type":""}],"src":"2790:1352:16"},{"body":{"nodeType":"YulBlock","src":"4179:95:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4196:1:16","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4203:3:16","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"4208:10:16","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4199:3:16"},"nodeType":"YulFunctionCall","src":"4199:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4189:6:16"},"nodeType":"YulFunctionCall","src":"4189:31:16"},"nodeType":"YulExpressionStatement","src":"4189:31:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4236:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4239:4:16","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4229:6:16"},"nodeType":"YulFunctionCall","src":"4229:15:16"},"nodeType":"YulExpressionStatement","src":"4229:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4260:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4263:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4253:6:16"},"nodeType":"YulFunctionCall","src":"4253:15:16"},"nodeType":"YulExpressionStatement","src":"4253:15:16"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"4147:127:16"},{"body":{"nodeType":"YulBlock","src":"4343:358:16","statements":[{"nodeType":"YulVariableDeclaration","src":"4353:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"4368:1:16","type":"","value":"1"},"variables":[{"name":"power_1","nodeType":"YulTypedName","src":"4357:7:16","type":""}]},{"nodeType":"YulAssignment","src":"4378:16:16","value":{"name":"power_1","nodeType":"YulIdentifier","src":"4387:7:16"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"4378:5:16"}]},{"nodeType":"YulAssignment","src":"4403:13:16","value":{"name":"_base","nodeType":"YulIdentifier","src":"4411:5:16"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"4403:4:16"}]},{"body":{"nodeType":"YulBlock","src":"4467:228:16","statements":[{"body":{"nodeType":"YulBlock","src":"4512:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"4514:16:16"},"nodeType":"YulFunctionCall","src":"4514:18:16"},"nodeType":"YulExpressionStatement","src":"4514:18:16"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"4487:4:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4501:1:16","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4497:3:16"},"nodeType":"YulFunctionCall","src":"4497:6:16"},{"name":"base","nodeType":"YulIdentifier","src":"4505:4:16"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4493:3:16"},"nodeType":"YulFunctionCall","src":"4493:17:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4484:2:16"},"nodeType":"YulFunctionCall","src":"4484:27:16"},"nodeType":"YulIf","src":"4481:53:16"},{"body":{"nodeType":"YulBlock","src":"4573:29:16","statements":[{"nodeType":"YulAssignment","src":"4575:25:16","value":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"4588:5:16"},{"name":"base","nodeType":"YulIdentifier","src":"4595:4:16"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4584:3:16"},"nodeType":"YulFunctionCall","src":"4584:16:16"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"4575:5:16"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"4554:8:16"},{"name":"power_1","nodeType":"YulIdentifier","src":"4564:7:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4550:3:16"},"nodeType":"YulFunctionCall","src":"4550:22:16"},"nodeType":"YulIf","src":"4547:55:16"},{"nodeType":"YulAssignment","src":"4615:23:16","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"4627:4:16"},{"name":"base","nodeType":"YulIdentifier","src":"4633:4:16"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4623:3:16"},"nodeType":"YulFunctionCall","src":"4623:15:16"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"4615:4:16"}]},{"nodeType":"YulAssignment","src":"4651:34:16","value":{"arguments":[{"name":"power_1","nodeType":"YulIdentifier","src":"4667:7:16"},{"name":"exponent","nodeType":"YulIdentifier","src":"4676:8:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"4663:3:16"},"nodeType":"YulFunctionCall","src":"4663:22:16"},"variableNames":[{"name":"exponent","nodeType":"YulIdentifier","src":"4651:8:16"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"4436:8:16"},{"name":"power_1","nodeType":"YulIdentifier","src":"4446:7:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4433:2:16"},"nodeType":"YulFunctionCall","src":"4433:21:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4455:3:16","statements":[]},"pre":{"nodeType":"YulBlock","src":"4429:3:16","statements":[]},"src":"4425:270:16"}]},"name":"checked_exp_helper","nodeType":"YulFunctionDefinition","parameters":[{"name":"_base","nodeType":"YulTypedName","src":"4307:5:16","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"4314:8:16","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"4327:5:16","type":""},{"name":"base","nodeType":"YulTypedName","src":"4334:4:16","type":""}],"src":"4279:422:16"},{"body":{"nodeType":"YulBlock","src":"4765:747:16","statements":[{"body":{"nodeType":"YulBlock","src":"4803:52:16","statements":[{"nodeType":"YulAssignment","src":"4817:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"4826:1:16","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"4817:5:16"}]},{"nodeType":"YulLeave","src":"4840:5:16"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"4785:8:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4778:6:16"},"nodeType":"YulFunctionCall","src":"4778:16:16"},"nodeType":"YulIf","src":"4775:80:16"},{"body":{"nodeType":"YulBlock","src":"4888:52:16","statements":[{"nodeType":"YulAssignment","src":"4902:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"4911:1:16","type":"","value":"0"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"4902:5:16"}]},{"nodeType":"YulLeave","src":"4925:5:16"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"4874:4:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4867:6:16"},"nodeType":"YulFunctionCall","src":"4867:12:16"},"nodeType":"YulIf","src":"4864:76:16"},{"cases":[{"body":{"nodeType":"YulBlock","src":"4976:52:16","statements":[{"nodeType":"YulAssignment","src":"4990:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"4999:1:16","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"4990:5:16"}]},{"nodeType":"YulLeave","src":"5013:5:16"}]},"nodeType":"YulCase","src":"4969:59:16","value":{"kind":"number","nodeType":"YulLiteral","src":"4974:1:16","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"5044:123:16","statements":[{"body":{"nodeType":"YulBlock","src":"5079:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"5081:16:16"},"nodeType":"YulFunctionCall","src":"5081:18:16"},"nodeType":"YulExpressionStatement","src":"5081:18:16"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"5064:8:16"},{"kind":"number","nodeType":"YulLiteral","src":"5074:3:16","type":"","value":"255"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5061:2:16"},"nodeType":"YulFunctionCall","src":"5061:17:16"},"nodeType":"YulIf","src":"5058:43:16"},{"nodeType":"YulAssignment","src":"5114:25:16","value":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"5127:8:16"},{"kind":"number","nodeType":"YulLiteral","src":"5137:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5123:3:16"},"nodeType":"YulFunctionCall","src":"5123:16:16"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"5114:5:16"}]},{"nodeType":"YulLeave","src":"5152:5:16"}]},"nodeType":"YulCase","src":"5037:130:16","value":{"kind":"number","nodeType":"YulLiteral","src":"5042:1:16","type":"","value":"2"}}],"expression":{"name":"base","nodeType":"YulIdentifier","src":"4956:4:16"},"nodeType":"YulSwitch","src":"4949:218:16"},{"body":{"nodeType":"YulBlock","src":"5265:70:16","statements":[{"nodeType":"YulAssignment","src":"5279:28:16","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"5292:4:16"},{"name":"exponent","nodeType":"YulIdentifier","src":"5298:8:16"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"5288:3:16"},"nodeType":"YulFunctionCall","src":"5288:19:16"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"5279:5:16"}]},{"nodeType":"YulLeave","src":"5320:5:16"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"5189:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"5195:2:16","type":"","value":"11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5186:2:16"},"nodeType":"YulFunctionCall","src":"5186:12:16"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"5203:8:16"},{"kind":"number","nodeType":"YulLiteral","src":"5213:2:16","type":"","value":"78"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5200:2:16"},"nodeType":"YulFunctionCall","src":"5200:16:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5182:3:16"},"nodeType":"YulFunctionCall","src":"5182:35:16"},{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"5226:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"5232:3:16","type":"","value":"307"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5223:2:16"},"nodeType":"YulFunctionCall","src":"5223:13:16"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"5241:8:16"},{"kind":"number","nodeType":"YulLiteral","src":"5251:2:16","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5238:2:16"},"nodeType":"YulFunctionCall","src":"5238:16:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5219:3:16"},"nodeType":"YulFunctionCall","src":"5219:36:16"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5179:2:16"},"nodeType":"YulFunctionCall","src":"5179:77:16"},"nodeType":"YulIf","src":"5176:159:16"},{"nodeType":"YulVariableDeclaration","src":"5344:57:16","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"5386:4:16"},{"name":"exponent","nodeType":"YulIdentifier","src":"5392:8:16"}],"functionName":{"name":"checked_exp_helper","nodeType":"YulIdentifier","src":"5367:18:16"},"nodeType":"YulFunctionCall","src":"5367:34:16"},"variables":[{"name":"power_1","nodeType":"YulTypedName","src":"5348:7:16","type":""},{"name":"base_1","nodeType":"YulTypedName","src":"5357:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"5446:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"5448:16:16"},"nodeType":"YulFunctionCall","src":"5448:18:16"},"nodeType":"YulExpressionStatement","src":"5448:18:16"}]},"condition":{"arguments":[{"name":"power_1","nodeType":"YulIdentifier","src":"5416:7:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5433:1:16","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5429:3:16"},"nodeType":"YulFunctionCall","src":"5429:6:16"},{"name":"base_1","nodeType":"YulIdentifier","src":"5437:6:16"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"5425:3:16"},"nodeType":"YulFunctionCall","src":"5425:19:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5413:2:16"},"nodeType":"YulFunctionCall","src":"5413:32:16"},"nodeType":"YulIf","src":"5410:58:16"},{"nodeType":"YulAssignment","src":"5477:29:16","value":{"arguments":[{"name":"power_1","nodeType":"YulIdentifier","src":"5490:7:16"},{"name":"base_1","nodeType":"YulIdentifier","src":"5499:6:16"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5486:3:16"},"nodeType":"YulFunctionCall","src":"5486:20:16"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"5477:5:16"}]}]},"name":"checked_exp_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"4736:4:16","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"4742:8:16","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"4755:5:16","type":""}],"src":"4706:806:16"},{"body":{"nodeType":"YulBlock","src":"5585:72:16","statements":[{"nodeType":"YulAssignment","src":"5595:56:16","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"5625:4:16"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"5635:8:16"},{"kind":"number","nodeType":"YulLiteral","src":"5645:4:16","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5631:3:16"},"nodeType":"YulFunctionCall","src":"5631:19:16"}],"functionName":{"name":"checked_exp_unsigned","nodeType":"YulIdentifier","src":"5604:20:16"},"nodeType":"YulFunctionCall","src":"5604:47:16"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"5595:5:16"}]}]},"name":"checked_exp_t_uint256_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"5556:4:16","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"5562:8:16","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"5575:5:16","type":""}],"src":"5517:140:16"},{"body":{"nodeType":"YulBlock","src":"5714:116:16","statements":[{"nodeType":"YulAssignment","src":"5724:20:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5739:1:16"},{"name":"y","nodeType":"YulIdentifier","src":"5742:1:16"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5735:3:16"},"nodeType":"YulFunctionCall","src":"5735:9:16"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"5724:7:16"}]},{"body":{"nodeType":"YulBlock","src":"5802:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"5804:16:16"},"nodeType":"YulFunctionCall","src":"5804:18:16"},"nodeType":"YulExpressionStatement","src":"5804:18:16"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5773:1:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5766:6:16"},"nodeType":"YulFunctionCall","src":"5766:9:16"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"5780:1:16"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"5787:7:16"},{"name":"x","nodeType":"YulIdentifier","src":"5796:1:16"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"5783:3:16"},"nodeType":"YulFunctionCall","src":"5783:15:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5777:2:16"},"nodeType":"YulFunctionCall","src":"5777:22:16"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5763:2:16"},"nodeType":"YulFunctionCall","src":"5763:37:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5756:6:16"},"nodeType":"YulFunctionCall","src":"5756:45:16"},"nodeType":"YulIf","src":"5753:71:16"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"5693:1:16","type":""},{"name":"y","nodeType":"YulTypedName","src":"5696:1:16","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"5702:7:16","type":""}],"src":"5662:168:16"},{"body":{"nodeType":"YulBlock","src":"5936:102:16","statements":[{"nodeType":"YulAssignment","src":"5946:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5958:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"5969:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5954:3:16"},"nodeType":"YulFunctionCall","src":"5954:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5946:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5988:9:16"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6003:6:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6019:3:16","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"6024:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6015:3:16"},"nodeType":"YulFunctionCall","src":"6015:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"6028:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6011:3:16"},"nodeType":"YulFunctionCall","src":"6011:19:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5999:3:16"},"nodeType":"YulFunctionCall","src":"5999:32:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5981:6:16"},"nodeType":"YulFunctionCall","src":"5981:51:16"},"nodeType":"YulExpressionStatement","src":"5981:51:16"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5905:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5916:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5927:4:16","type":""}],"src":"5835:203:16"},{"body":{"nodeType":"YulBlock","src":"6091:77:16","statements":[{"nodeType":"YulAssignment","src":"6101:16:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6112:1:16"},{"name":"y","nodeType":"YulIdentifier","src":"6115:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6108:3:16"},"nodeType":"YulFunctionCall","src":"6108:9:16"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"6101:3:16"}]},{"body":{"nodeType":"YulBlock","src":"6140:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6142:16:16"},"nodeType":"YulFunctionCall","src":"6142:18:16"},"nodeType":"YulExpressionStatement","src":"6142:18:16"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6132:1:16"},{"name":"sum","nodeType":"YulIdentifier","src":"6135:3:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6129:2:16"},"nodeType":"YulFunctionCall","src":"6129:10:16"},"nodeType":"YulIf","src":"6126:36:16"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6074:1:16","type":""},{"name":"y","nodeType":"YulTypedName","src":"6077:1:16","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"6083:3:16","type":""}],"src":"6043:125:16"},{"body":{"nodeType":"YulBlock","src":"6330:188:16","statements":[{"nodeType":"YulAssignment","src":"6340:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6352:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6363:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6348:3:16"},"nodeType":"YulFunctionCall","src":"6348:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6340:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6382:9:16"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6397:6:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6413:3:16","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"6418:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6409:3:16"},"nodeType":"YulFunctionCall","src":"6409:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"6422:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6405:3:16"},"nodeType":"YulFunctionCall","src":"6405:19:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6393:3:16"},"nodeType":"YulFunctionCall","src":"6393:32:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6375:6:16"},"nodeType":"YulFunctionCall","src":"6375:51:16"},"nodeType":"YulExpressionStatement","src":"6375:51:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6446:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6457:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6442:3:16"},"nodeType":"YulFunctionCall","src":"6442:18:16"},{"name":"value1","nodeType":"YulIdentifier","src":"6462:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6435:6:16"},"nodeType":"YulFunctionCall","src":"6435:34:16"},"nodeType":"YulExpressionStatement","src":"6435:34:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6489:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6500:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6485:3:16"},"nodeType":"YulFunctionCall","src":"6485:18:16"},{"name":"value2","nodeType":"YulIdentifier","src":"6505:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6478:6:16"},"nodeType":"YulFunctionCall","src":"6478:34:16"},"nodeType":"YulExpressionStatement","src":"6478:34:16"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6283:9:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6294:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6302:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6310:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6321:4:16","type":""}],"src":"6173:345:16"},{"body":{"nodeType":"YulBlock","src":"6624:76:16","statements":[{"nodeType":"YulAssignment","src":"6634:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6646:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6657:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6642:3:16"},"nodeType":"YulFunctionCall","src":"6642:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6634:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6676:9:16"},{"name":"value0","nodeType":"YulIdentifier","src":"6687:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6669:6:16"},"nodeType":"YulFunctionCall","src":"6669:25:16"},"nodeType":"YulExpressionStatement","src":"6669:25:16"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6593:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6604:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6615:4:16","type":""}],"src":"6523:177:16"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        mstore(add(add(memPtr, _1), _4), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}","id":16,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162000d2738038062000d278339810160408190526200003491620002d4565b81816003620000448382620003cd565b506004620000538282620003cd565b5050506200008d336200006b6200009560201b60201c565b6200007890600a620005ae565b6200008790620f4240620005c6565b6200009a565b5050620005f6565b601290565b6001600160a01b038216620000ca5760405163ec442f0560e01b8152600060048201526024015b60405180910390fd5b620000d860008383620000dc565b5050565b6001600160a01b0383166200010b578060026000828254620000ff9190620005e0565b909155506200017f9050565b6001600160a01b03831660009081526020819052604090205481811015620001605760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401620000c1565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166200019d57600280548290039055620001bc565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200020291815260200190565b60405180910390a3505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200023757600080fd5b81516001600160401b03808211156200025457620002546200020f565b604051601f8301601f19908116603f011681019082821181831017156200027f576200027f6200020f565b816040528381526020925086838588010111156200029c57600080fd5b600091505b83821015620002c05785820183015181830184015290820190620002a1565b600093810190920192909252949350505050565b60008060408385031215620002e857600080fd5b82516001600160401b03808211156200030057600080fd5b6200030e8683870162000225565b935060208501519150808211156200032557600080fd5b50620003348582860162000225565b9150509250929050565b600181811c908216806200035357607f821691505b6020821081036200037457634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620003c857600081815260208120601f850160051c81016020861015620003a35750805b601f850160051c820191505b81811015620003c457828155600101620003af565b5050505b505050565b81516001600160401b03811115620003e957620003e96200020f565b6200040181620003fa84546200033e565b846200037a565b602080601f831160018114620004395760008415620004205750858301515b600019600386901b1c1916600185901b178555620003c4565b600085815260208120601f198616915b828110156200046a5788860151825594840194600190910190840162000449565b5085821015620004895787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115620004f0578160001904821115620004d457620004d462000499565b80851615620004e257918102915b93841c9390800290620004b4565b509250929050565b6000826200050957506001620005a8565b816200051857506000620005a8565b81600181146200053157600281146200053c576200055c565b6001915050620005a8565b60ff84111562000550576200055062000499565b50506001821b620005a8565b5060208310610133831016604e8410600b841016171562000581575081810a620005a8565b6200058d8383620004af565b8060001904821115620005a457620005a462000499565b0290505b92915050565b6000620005bf60ff841683620004f8565b9392505050565b8082028115828204841417620005a857620005a862000499565b80820180821115620005a857620005a862000499565b61072180620006066000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063313ce56711610066578063313ce567146100fe57806370a082311461010d57806395d89b4114610136578063a9059cbb1461013e578063dd62ed3e1461015157600080fd5b806306fdde0314610098578063095ea7b3146100b657806318160ddd146100d957806323b872dd146100eb575b600080fd5b6100a061018a565b6040516100ad919061056b565b60405180910390f35b6100c96100c43660046105d5565b61021c565b60405190151581526020016100ad565b6002545b6040519081526020016100ad565b6100c96100f93660046105ff565b610236565b604051601281526020016100ad565b6100dd61011b36600461063b565b6001600160a01b031660009081526020819052604090205490565b6100a061025a565b6100c961014c3660046105d5565b610269565b6100dd61015f36600461065d565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60606003805461019990610690565b80601f01602080910402602001604051908101604052809291908181526020018280546101c590610690565b80156102125780601f106101e757610100808354040283529160200191610212565b820191906000526020600020905b8154815290600101906020018083116101f557829003601f168201915b5050505050905090565b60003361022a818585610277565b60019150505b92915050565b600033610244858285610289565b61024f85858561030d565b506001949350505050565b60606004805461019990610690565b60003361022a81858561030d565b610284838383600161036c565b505050565b6001600160a01b0383811660009081526001602090815260408083209386168352929052205460001981101561030757818110156102f857604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064015b60405180910390fd5b6103078484848403600061036c565b50505050565b6001600160a01b03831661033757604051634b637e8f60e11b8152600060048201526024016102ef565b6001600160a01b0382166103615760405163ec442f0560e01b8152600060048201526024016102ef565b610284838383610441565b6001600160a01b0384166103965760405163e602df0560e01b8152600060048201526024016102ef565b6001600160a01b0383166103c057604051634a1406b160e11b8152600060048201526024016102ef565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561030757826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161043391815260200190565b60405180910390a350505050565b6001600160a01b03831661046c57806002600082825461046191906106ca565b909155506104de9050565b6001600160a01b038316600090815260208190526040902054818110156104bf5760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016102ef565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166104fa57600280548290039055610519565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161055e91815260200190565b60405180910390a3505050565b600060208083528351808285015260005b818110156105985785810183015185820160400152820161057c565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146105d057600080fd5b919050565b600080604083850312156105e857600080fd5b6105f1836105b9565b946020939093013593505050565b60008060006060848603121561061457600080fd5b61061d846105b9565b925061062b602085016105b9565b9150604084013590509250925092565b60006020828403121561064d57600080fd5b610656826105b9565b9392505050565b6000806040838503121561067057600080fd5b610679836105b9565b9150610687602084016105b9565b90509250929050565b600181811c908216806106a457607f821691505b6020821081036106c457634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561023057634e487b7160e01b600052601160045260246000fdfea26469706673582212201bec8b242e5c02405398e4fbf42717c8cc160082cddb3e98e278f75356b9785764736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xD27 CODESIZE SUB DUP1 PUSH3 0xD27 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x2D4 JUMP JUMPDEST DUP2 DUP2 PUSH1 0x3 PUSH3 0x44 DUP4 DUP3 PUSH3 0x3CD JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x53 DUP3 DUP3 PUSH3 0x3CD JUMP JUMPDEST POP POP POP PUSH3 0x8D CALLER PUSH3 0x6B PUSH3 0x95 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x78 SWAP1 PUSH1 0xA PUSH3 0x5AE JUMP JUMPDEST PUSH3 0x87 SWAP1 PUSH3 0xF4240 PUSH3 0x5C6 JUMP JUMPDEST PUSH3 0x9A JUMP JUMPDEST POP POP PUSH3 0x5F6 JUMP JUMPDEST PUSH1 0x12 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0xCA JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xD8 PUSH1 0x0 DUP4 DUP4 PUSH3 0xDC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH3 0x10B JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0xFF SWAP2 SWAP1 PUSH3 0x5E0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH3 0x17F SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH3 0x160 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH3 0xC1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x19D JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH3 0x1BC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x202 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x237 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x254 JUMPI PUSH3 0x254 PUSH3 0x20F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x27F JUMPI PUSH3 0x27F PUSH3 0x20F JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x29C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x2C0 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x2A1 JUMP JUMPDEST PUSH1 0x0 SWAP4 DUP2 ADD SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x2E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x300 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x30E DUP7 DUP4 DUP8 ADD PUSH3 0x225 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x325 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x334 DUP6 DUP3 DUP7 ADD PUSH3 0x225 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x353 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x374 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x3C8 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x3A3 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x3C4 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x3AF JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x3E9 JUMPI PUSH3 0x3E9 PUSH3 0x20F JUMP JUMPDEST PUSH3 0x401 DUP2 PUSH3 0x3FA DUP5 SLOAD PUSH3 0x33E JUMP JUMPDEST DUP5 PUSH3 0x37A JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x439 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x420 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x3C4 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x46A JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x449 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x489 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH3 0x4F0 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH3 0x4D4 JUMPI PUSH3 0x4D4 PUSH3 0x499 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH3 0x4E2 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH3 0x4B4 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH3 0x509 JUMPI POP PUSH1 0x1 PUSH3 0x5A8 JUMP JUMPDEST DUP2 PUSH3 0x518 JUMPI POP PUSH1 0x0 PUSH3 0x5A8 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0x531 JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0x53C JUMPI PUSH3 0x55C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0x5A8 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0x550 JUMPI PUSH3 0x550 PUSH3 0x499 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH3 0x5A8 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0x581 JUMPI POP DUP2 DUP2 EXP PUSH3 0x5A8 JUMP JUMPDEST PUSH3 0x58D DUP4 DUP4 PUSH3 0x4AF JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH3 0x5A4 JUMPI PUSH3 0x5A4 PUSH3 0x499 JUMP JUMPDEST MUL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x5BF PUSH1 0xFF DUP5 AND DUP4 PUSH3 0x4F8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH3 0x5A8 JUMPI PUSH3 0x5A8 PUSH3 0x499 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH3 0x5A8 JUMPI PUSH3 0x5A8 PUSH3 0x499 JUMP JUMPDEST PUSH2 0x721 DUP1 PUSH3 0x606 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0xFE JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x13E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x151 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xD9 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xEB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x18A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x56B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC9 PUSH2 0xC4 CALLDATASIZE PUSH1 0x4 PUSH2 0x5D5 JUMP JUMPDEST PUSH2 0x21C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAD JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAD JUMP JUMPDEST PUSH2 0xC9 PUSH2 0xF9 CALLDATASIZE PUSH1 0x4 PUSH2 0x5FF JUMP JUMPDEST PUSH2 0x236 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAD JUMP JUMPDEST PUSH2 0xDD PUSH2 0x11B CALLDATASIZE PUSH1 0x4 PUSH2 0x63B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xA0 PUSH2 0x25A JUMP JUMPDEST PUSH2 0xC9 PUSH2 0x14C CALLDATASIZE PUSH1 0x4 PUSH2 0x5D5 JUMP JUMPDEST PUSH2 0x269 JUMP JUMPDEST PUSH2 0xDD PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0x65D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x199 SWAP1 PUSH2 0x690 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1C5 SWAP1 PUSH2 0x690 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x212 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1E7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x212 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1F5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x22A DUP2 DUP6 DUP6 PUSH2 0x277 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x244 DUP6 DUP3 DUP6 PUSH2 0x289 JUMP JUMPDEST PUSH2 0x24F DUP6 DUP6 DUP6 PUSH2 0x30D JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x199 SWAP1 PUSH2 0x690 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x22A DUP2 DUP6 DUP6 PUSH2 0x30D JUMP JUMPDEST PUSH2 0x284 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x36C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 LT ISZERO PUSH2 0x307 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x2F8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x307 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x36C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x337 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2EF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x361 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2EF JUMP JUMPDEST PUSH2 0x284 DUP4 DUP4 DUP4 PUSH2 0x441 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x396 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2EF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3C0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2EF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x307 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x433 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x46C JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x461 SWAP2 SWAP1 PUSH2 0x6CA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x4DE SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x4BF JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x2EF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4FA JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x519 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x55E SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x598 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x57C JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x5D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5F1 DUP4 PUSH2 0x5B9 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x614 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x61D DUP5 PUSH2 0x5B9 JUMP JUMPDEST SWAP3 POP PUSH2 0x62B PUSH1 0x20 DUP6 ADD PUSH2 0x5B9 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x64D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x656 DUP3 PUSH2 0x5B9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x670 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x679 DUP4 PUSH2 0x5B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x687 PUSH1 0x20 DUP5 ADD PUSH2 0x5B9 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x6A4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x6C4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x230 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHL 0xEC DUP12 0x24 0x2E 0x5C MUL BLOCKHASH MSTORE8 SWAP9 0xE4 0xFB DELEGATECALL 0x27 OR 0xC8 0xCC AND STOP DUP3 0xCD 0xDB RETURNDATACOPY SWAP9 0xE2 PUSH25 0xF75356B9785764736F6C634300081400330000000000000000 ","sourceMap":"270:384:13:-:0;;;306:339;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;366:4;372:6;1667:5:1;:13;366:4:13;1667:5:1;:13;:::i;:::-;-1:-1:-1;1690:7:1;:17;1700:7;1690;:17;:::i;:::-;;1601:113;;391:43:13::1;397:10;423;:8;;;:10;;:::i;:::-;419:14;::::0;:2:::1;:14;:::i;:::-;409:24;::::0;:7:::1;:24;:::i;:::-;391:5;:43::i;:::-;306:339:::0;;270:384;;2707:82:1;2780:2;;2707:82::o;7458:208::-;-1:-1:-1;;;;;7528:21:1;;7524:91;;7572:32;;-1:-1:-1;;;7572:32:1;;7601:1;7572:32;;;5981:51:16;5954:18;;7572:32:1;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;:35::i;:::-;7458:208;;:::o;6008:1107::-;-1:-1:-1;;;;;6097:18:1;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6093:540:1;;-1:-1:-1;6093:540:1;;-1:-1:-1;;;;;6307:15:1;;6285:19;6307:15;;;;;;;;;;;6340:19;;;6336:115;;;6386:50;;-1:-1:-1;;;6386:50:1;;-1:-1:-1;;;;;6393:32:16;;6386:50:1;;;6375:51:16;6442:18;;;6435:34;;;6485:18;;;6478:34;;;6348:18;;6386:50:1;6173:345:16;6336:115:1;-1:-1:-1;;;;;6571:15:1;;:9;:15;;;;;;;;;;6589:19;;;;6571:37;;6093:540;-1:-1:-1;;;;;6647:16:1;;6643:425;;6810:12;:21;;;;;;;6643:425;;;-1:-1:-1;;;;;7021:13:1;;:9;:13;;;;;;;;;;:22;;;;;;6643:425;7098:2;-1:-1:-1;;;;;7083:25:1;7092:4;-1:-1:-1;;;;;7083:25:1;;7102:5;7083:25;;;;6669::16;;6657:2;6642:18;;6523:177;7083:25:1;;;;;;;;6008:1107;;;:::o;14:127:16:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:16;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:16;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:16:o;991:562::-;1090:6;1098;1151:2;1139:9;1130:7;1126:23;1122:32;1119:52;;;1167:1;1164;1157:12;1119:52;1194:16;;-1:-1:-1;;;;;1259:14:16;;;1256:34;;;1286:1;1283;1276:12;1256:34;1309:61;1362:7;1353:6;1342:9;1338:22;1309:61;:::i;:::-;1299:71;;1416:2;1405:9;1401:18;1395:25;1379:41;;1445:2;1435:8;1432:16;1429:36;;;1461:1;1458;1451:12;1429:36;;1484:63;1539:7;1528:8;1517:9;1513:24;1484:63;:::i;:::-;1474:73;;;991:562;;;;;:::o;1558:380::-;1637:1;1633:12;;;;1680;;;1701:61;;1755:4;1747:6;1743:17;1733:27;;1701:61;1808:2;1800:6;1797:14;1777:18;1774:38;1771:161;;1854:10;1849:3;1845:20;1842:1;1835:31;1889:4;1886:1;1879:15;1917:4;1914:1;1907:15;1771:161;;1558:380;;;:::o;2069:545::-;2171:2;2166:3;2163:11;2160:448;;;2207:1;2232:5;2228:2;2221:17;2277:4;2273:2;2263:19;2347:2;2335:10;2331:19;2328:1;2324:27;2318:4;2314:38;2383:4;2371:10;2368:20;2365:47;;;-1:-1:-1;2406:4:16;2365:47;2461:2;2456:3;2452:12;2449:1;2445:20;2439:4;2435:31;2425:41;;2516:82;2534:2;2527:5;2524:13;2516:82;;;2579:17;;;2560:1;2549:13;2516:82;;;2520:3;;;2160:448;2069:545;;;:::o;2790:1352::-;2910:10;;-1:-1:-1;;;;;2932:30:16;;2929:56;;;2965:18;;:::i;:::-;2994:97;3084:6;3044:38;3076:4;3070:11;3044:38;:::i;:::-;3038:4;2994:97;:::i;:::-;3146:4;;3210:2;3199:14;;3227:1;3222:663;;;;3929:1;3946:6;3943:89;;;-1:-1:-1;3998:19:16;;;3992:26;3943:89;-1:-1:-1;;2747:1:16;2743:11;;;2739:24;2735:29;2725:40;2771:1;2767:11;;;2722:57;4045:81;;3192:944;;3222:663;2016:1;2009:14;;;2053:4;2040:18;;-1:-1:-1;;3258:20:16;;;3376:236;3390:7;3387:1;3384:14;3376:236;;;3479:19;;;3473:26;3458:42;;3571:27;;;;3539:1;3527:14;;;;3406:19;;3376:236;;;3380:3;3640:6;3631:7;3628:19;3625:201;;;3701:19;;;3695:26;-1:-1:-1;;3784:1:16;3780:14;;;3796:3;3776:24;3772:37;3768:42;3753:58;3738:74;;3625:201;-1:-1:-1;;;;;3872:1:16;3856:14;;;3852:22;3839:36;;-1:-1:-1;2790:1352:16:o;4147:127::-;4208:10;4203:3;4199:20;4196:1;4189:31;4239:4;4236:1;4229:15;4263:4;4260:1;4253:15;4279:422;4368:1;4411:5;4368:1;4425:270;4446:7;4436:8;4433:21;4425:270;;;4505:4;4501:1;4497:6;4493:17;4487:4;4484:27;4481:53;;;4514:18;;:::i;:::-;4564:7;4554:8;4550:22;4547:55;;;4584:16;;;;4547:55;4663:22;;;;4623:15;;;;4425:270;;;4429:3;4279:422;;;;;:::o;4706:806::-;4755:5;4785:8;4775:80;;-1:-1:-1;4826:1:16;4840:5;;4775:80;4874:4;4864:76;;-1:-1:-1;4911:1:16;4925:5;;4864:76;4956:4;4974:1;4969:59;;;;5042:1;5037:130;;;;4949:218;;4969:59;4999:1;4990:10;;5013:5;;;5037:130;5074:3;5064:8;5061:17;5058:43;;;5081:18;;:::i;:::-;-1:-1:-1;;5137:1:16;5123:16;;5152:5;;4949:218;;5251:2;5241:8;5238:16;5232:3;5226:4;5223:13;5219:36;5213:2;5203:8;5200:16;5195:2;5189:4;5186:12;5182:35;5179:77;5176:159;;;-1:-1:-1;5288:19:16;;;5320:5;;5176:159;5367:34;5392:8;5386:4;5367:34;:::i;:::-;5437:6;5433:1;5429:6;5425:19;5416:7;5413:32;5410:58;;;5448:18;;:::i;:::-;5486:20;;-1:-1:-1;4706:806:16;;;;;:::o;5517:140::-;5575:5;5604:47;5645:4;5635:8;5631:19;5625:4;5604:47;:::i;:::-;5595:56;5517:140;-1:-1:-1;;;5517:140:16:o;5662:168::-;5735:9;;;5766;;5783:15;;;5777:22;;5763:37;5753:71;;5804:18;;:::i;6043:125::-;6108:9;;;6129:10;;;6126:36;;;6142:18;;:::i;6523:177::-;270:384:13;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_approve_542":{"entryPoint":631,"id":542,"parameterSlots":3,"returnSlots":0},"@_approve_602":{"entryPoint":876,"id":602,"parameterSlots":4,"returnSlots":0},"@_msgSender_767":{"entryPoint":null,"id":767,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_650":{"entryPoint":649,"id":650,"parameterSlots":3,"returnSlots":0},"@_transfer_381":{"entryPoint":781,"id":381,"parameterSlots":3,"returnSlots":0},"@_update_458":{"entryPoint":1089,"id":458,"parameterSlots":3,"returnSlots":0},"@allowance_278":{"entryPoint":null,"id":278,"parameterSlots":2,"returnSlots":1},"@approve_302":{"entryPoint":540,"id":302,"parameterSlots":2,"returnSlots":1},"@balanceOf_237":{"entryPoint":null,"id":237,"parameterSlots":1,"returnSlots":1},"@decimals_215":{"entryPoint":null,"id":215,"parameterSlots":0,"returnSlots":1},"@name_197":{"entryPoint":394,"id":197,"parameterSlots":0,"returnSlots":1},"@symbol_206":{"entryPoint":602,"id":206,"parameterSlots":0,"returnSlots":1},"@totalSupply_224":{"entryPoint":null,"id":224,"parameterSlots":0,"returnSlots":1},"@transferFrom_334":{"entryPoint":566,"id":334,"parameterSlots":3,"returnSlots":1},"@transfer_261":{"entryPoint":617,"id":261,"parameterSlots":2,"returnSlots":1},"abi_decode_address":{"entryPoint":1465,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":1595,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":1629,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":1535,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":1493,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1387,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":1738,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":1680,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:3523:16","statements":[{"nodeType":"YulBlock","src":"6:3:16","statements":[]},{"body":{"nodeType":"YulBlock","src":"135:427:16","statements":[{"nodeType":"YulVariableDeclaration","src":"145:12:16","value":{"kind":"number","nodeType":"YulLiteral","src":"155:2:16","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"149:2:16","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"173:9:16"},{"name":"_1","nodeType":"YulIdentifier","src":"184:2:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"166:6:16"},"nodeType":"YulFunctionCall","src":"166:21:16"},"nodeType":"YulExpressionStatement","src":"166:21:16"},{"nodeType":"YulVariableDeclaration","src":"196:27:16","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"216:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"210:5:16"},"nodeType":"YulFunctionCall","src":"210:13:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"200:6:16","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"243:9:16"},{"name":"_1","nodeType":"YulIdentifier","src":"254:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"239:3:16"},"nodeType":"YulFunctionCall","src":"239:18:16"},{"name":"length","nodeType":"YulIdentifier","src":"259:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"232:6:16"},"nodeType":"YulFunctionCall","src":"232:34:16"},"nodeType":"YulExpressionStatement","src":"232:34:16"},{"nodeType":"YulVariableDeclaration","src":"275:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"284:1:16","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"279:1:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"344:90:16","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"373:9:16"},{"name":"i","nodeType":"YulIdentifier","src":"384:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"369:3:16"},"nodeType":"YulFunctionCall","src":"369:17:16"},{"kind":"number","nodeType":"YulLiteral","src":"388:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"365:3:16"},"nodeType":"YulFunctionCall","src":"365:26:16"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"407:6:16"},{"name":"i","nodeType":"YulIdentifier","src":"415:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"403:3:16"},"nodeType":"YulFunctionCall","src":"403:14:16"},{"name":"_1","nodeType":"YulIdentifier","src":"419:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"399:3:16"},"nodeType":"YulFunctionCall","src":"399:23:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"393:5:16"},"nodeType":"YulFunctionCall","src":"393:30:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"358:6:16"},"nodeType":"YulFunctionCall","src":"358:66:16"},"nodeType":"YulExpressionStatement","src":"358:66:16"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"305:1:16"},{"name":"length","nodeType":"YulIdentifier","src":"308:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"302:2:16"},"nodeType":"YulFunctionCall","src":"302:13:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"316:19:16","statements":[{"nodeType":"YulAssignment","src":"318:15:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"327:1:16"},{"name":"_1","nodeType":"YulIdentifier","src":"330:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"323:3:16"},"nodeType":"YulFunctionCall","src":"323:10:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"318:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"298:3:16","statements":[]},"src":"294:140:16"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"458:9:16"},{"name":"length","nodeType":"YulIdentifier","src":"469:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"454:3:16"},"nodeType":"YulFunctionCall","src":"454:22:16"},{"kind":"number","nodeType":"YulLiteral","src":"478:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"450:3:16"},"nodeType":"YulFunctionCall","src":"450:31:16"},{"kind":"number","nodeType":"YulLiteral","src":"483:1:16","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"443:6:16"},"nodeType":"YulFunctionCall","src":"443:42:16"},"nodeType":"YulExpressionStatement","src":"443:42:16"},{"nodeType":"YulAssignment","src":"494:62:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"510:9:16"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"529:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"537:2:16","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"525:3:16"},"nodeType":"YulFunctionCall","src":"525:15:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"546:2:16","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"542:3:16"},"nodeType":"YulFunctionCall","src":"542:7:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"521:3:16"},"nodeType":"YulFunctionCall","src":"521:29:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"506:3:16"},"nodeType":"YulFunctionCall","src":"506:45:16"},{"kind":"number","nodeType":"YulLiteral","src":"553:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"502:3:16"},"nodeType":"YulFunctionCall","src":"502:54:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"494:4:16"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"104:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"115:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"126:4:16","type":""}],"src":"14:548:16"},{"body":{"nodeType":"YulBlock","src":"616:124:16","statements":[{"nodeType":"YulAssignment","src":"626:29:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"648:6:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"635:12:16"},"nodeType":"YulFunctionCall","src":"635:20:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"626:5:16"}]},{"body":{"nodeType":"YulBlock","src":"718:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"727:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"730:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"720:6:16"},"nodeType":"YulFunctionCall","src":"720:12:16"},"nodeType":"YulExpressionStatement","src":"720:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"677:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"688:5:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"703:3:16","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"708:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"699:3:16"},"nodeType":"YulFunctionCall","src":"699:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"712:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"695:3:16"},"nodeType":"YulFunctionCall","src":"695:19:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"684:3:16"},"nodeType":"YulFunctionCall","src":"684:31:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"674:2:16"},"nodeType":"YulFunctionCall","src":"674:42:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"667:6:16"},"nodeType":"YulFunctionCall","src":"667:50:16"},"nodeType":"YulIf","src":"664:70:16"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"595:6:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"606:5:16","type":""}],"src":"567:173:16"},{"body":{"nodeType":"YulBlock","src":"832:167:16","statements":[{"body":{"nodeType":"YulBlock","src":"878:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"887:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"890:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"880:6:16"},"nodeType":"YulFunctionCall","src":"880:12:16"},"nodeType":"YulExpressionStatement","src":"880:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"853:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"862:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"849:3:16"},"nodeType":"YulFunctionCall","src":"849:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"874:2:16","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"845:3:16"},"nodeType":"YulFunctionCall","src":"845:32:16"},"nodeType":"YulIf","src":"842:52:16"},{"nodeType":"YulAssignment","src":"903:39:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"932:9:16"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"913:18:16"},"nodeType":"YulFunctionCall","src":"913:29:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"903:6:16"}]},{"nodeType":"YulAssignment","src":"951:42:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"978:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"989:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"974:3:16"},"nodeType":"YulFunctionCall","src":"974:18:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"961:12:16"},"nodeType":"YulFunctionCall","src":"961:32:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"951:6:16"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"790:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"801:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"813:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"821:6:16","type":""}],"src":"745:254:16"},{"body":{"nodeType":"YulBlock","src":"1099:92:16","statements":[{"nodeType":"YulAssignment","src":"1109:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1121:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1132:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1117:3:16"},"nodeType":"YulFunctionCall","src":"1117:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1109:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1151:9:16"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1176:6:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1169:6:16"},"nodeType":"YulFunctionCall","src":"1169:14:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1162:6:16"},"nodeType":"YulFunctionCall","src":"1162:22:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1144:6:16"},"nodeType":"YulFunctionCall","src":"1144:41:16"},"nodeType":"YulExpressionStatement","src":"1144:41:16"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1068:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1079:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1090:4:16","type":""}],"src":"1004:187:16"},{"body":{"nodeType":"YulBlock","src":"1297:76:16","statements":[{"nodeType":"YulAssignment","src":"1307:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1319:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1330:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1315:3:16"},"nodeType":"YulFunctionCall","src":"1315:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1307:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1349:9:16"},{"name":"value0","nodeType":"YulIdentifier","src":"1360:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1342:6:16"},"nodeType":"YulFunctionCall","src":"1342:25:16"},"nodeType":"YulExpressionStatement","src":"1342:25:16"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1266:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1277:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1288:4:16","type":""}],"src":"1196:177:16"},{"body":{"nodeType":"YulBlock","src":"1482:224:16","statements":[{"body":{"nodeType":"YulBlock","src":"1528:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1537:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1540:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1530:6:16"},"nodeType":"YulFunctionCall","src":"1530:12:16"},"nodeType":"YulExpressionStatement","src":"1530:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1503:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"1512:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1499:3:16"},"nodeType":"YulFunctionCall","src":"1499:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"1524:2:16","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1495:3:16"},"nodeType":"YulFunctionCall","src":"1495:32:16"},"nodeType":"YulIf","src":"1492:52:16"},{"nodeType":"YulAssignment","src":"1553:39:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1582:9:16"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1563:18:16"},"nodeType":"YulFunctionCall","src":"1563:29:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1553:6:16"}]},{"nodeType":"YulAssignment","src":"1601:48:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1634:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1645:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1630:3:16"},"nodeType":"YulFunctionCall","src":"1630:18:16"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1611:18:16"},"nodeType":"YulFunctionCall","src":"1611:38:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1601:6:16"}]},{"nodeType":"YulAssignment","src":"1658:42:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1685:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1696:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1681:3:16"},"nodeType":"YulFunctionCall","src":"1681:18:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1668:12:16"},"nodeType":"YulFunctionCall","src":"1668:32:16"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1658:6:16"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1432:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1443:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1455:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1463:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1471:6:16","type":""}],"src":"1378:328:16"},{"body":{"nodeType":"YulBlock","src":"1808:87:16","statements":[{"nodeType":"YulAssignment","src":"1818:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1830:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1841:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1826:3:16"},"nodeType":"YulFunctionCall","src":"1826:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1818:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1860:9:16"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1875:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"1883:4:16","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1871:3:16"},"nodeType":"YulFunctionCall","src":"1871:17:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1853:6:16"},"nodeType":"YulFunctionCall","src":"1853:36:16"},"nodeType":"YulExpressionStatement","src":"1853:36:16"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1777:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1788:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1799:4:16","type":""}],"src":"1711:184:16"},{"body":{"nodeType":"YulBlock","src":"1970:116:16","statements":[{"body":{"nodeType":"YulBlock","src":"2016:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2025:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2028:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2018:6:16"},"nodeType":"YulFunctionCall","src":"2018:12:16"},"nodeType":"YulExpressionStatement","src":"2018:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1991:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"2000:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1987:3:16"},"nodeType":"YulFunctionCall","src":"1987:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"2012:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1983:3:16"},"nodeType":"YulFunctionCall","src":"1983:32:16"},"nodeType":"YulIf","src":"1980:52:16"},{"nodeType":"YulAssignment","src":"2041:39:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2070:9:16"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2051:18:16"},"nodeType":"YulFunctionCall","src":"2051:29:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2041:6:16"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1936:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1947:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1959:6:16","type":""}],"src":"1900:186:16"},{"body":{"nodeType":"YulBlock","src":"2178:173:16","statements":[{"body":{"nodeType":"YulBlock","src":"2224:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2233:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2236:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2226:6:16"},"nodeType":"YulFunctionCall","src":"2226:12:16"},"nodeType":"YulExpressionStatement","src":"2226:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2199:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"2208:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2195:3:16"},"nodeType":"YulFunctionCall","src":"2195:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"2220:2:16","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2191:3:16"},"nodeType":"YulFunctionCall","src":"2191:32:16"},"nodeType":"YulIf","src":"2188:52:16"},{"nodeType":"YulAssignment","src":"2249:39:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2278:9:16"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2259:18:16"},"nodeType":"YulFunctionCall","src":"2259:29:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2249:6:16"}]},{"nodeType":"YulAssignment","src":"2297:48:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2330:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2341:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2326:3:16"},"nodeType":"YulFunctionCall","src":"2326:18:16"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2307:18:16"},"nodeType":"YulFunctionCall","src":"2307:38:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2297:6:16"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2136:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2147:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2159:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2167:6:16","type":""}],"src":"2091:260:16"},{"body":{"nodeType":"YulBlock","src":"2411:325:16","statements":[{"nodeType":"YulAssignment","src":"2421:22:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2435:1:16","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"2438:4:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2431:3:16"},"nodeType":"YulFunctionCall","src":"2431:12:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2421:6:16"}]},{"nodeType":"YulVariableDeclaration","src":"2452:38:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2482:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"2488:1:16","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2478:3:16"},"nodeType":"YulFunctionCall","src":"2478:12:16"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"2456:18:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"2529:31:16","statements":[{"nodeType":"YulAssignment","src":"2531:27:16","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2545:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"2553:4:16","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2541:3:16"},"nodeType":"YulFunctionCall","src":"2541:17:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2531:6:16"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2509:18:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2502:6:16"},"nodeType":"YulFunctionCall","src":"2502:26:16"},"nodeType":"YulIf","src":"2499:61:16"},{"body":{"nodeType":"YulBlock","src":"2619:111:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2640:1:16","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2647:3:16","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2652:10:16","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2643:3:16"},"nodeType":"YulFunctionCall","src":"2643:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2633:6:16"},"nodeType":"YulFunctionCall","src":"2633:31:16"},"nodeType":"YulExpressionStatement","src":"2633:31:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2684:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2687:4:16","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2677:6:16"},"nodeType":"YulFunctionCall","src":"2677:15:16"},"nodeType":"YulExpressionStatement","src":"2677:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2712:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2715:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2705:6:16"},"nodeType":"YulFunctionCall","src":"2705:15:16"},"nodeType":"YulExpressionStatement","src":"2705:15:16"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2575:18:16"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2598:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"2606:2:16","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2595:2:16"},"nodeType":"YulFunctionCall","src":"2595:14:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2572:2:16"},"nodeType":"YulFunctionCall","src":"2572:38:16"},"nodeType":"YulIf","src":"2569:161:16"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2391:4:16","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"2400:6:16","type":""}],"src":"2356:380:16"},{"body":{"nodeType":"YulBlock","src":"2898:188:16","statements":[{"nodeType":"YulAssignment","src":"2908:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2920:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2931:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2916:3:16"},"nodeType":"YulFunctionCall","src":"2916:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2908:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2950:9:16"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2965:6:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2981:3:16","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2986:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2977:3:16"},"nodeType":"YulFunctionCall","src":"2977:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"2990:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2973:3:16"},"nodeType":"YulFunctionCall","src":"2973:19:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2961:3:16"},"nodeType":"YulFunctionCall","src":"2961:32:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2943:6:16"},"nodeType":"YulFunctionCall","src":"2943:51:16"},"nodeType":"YulExpressionStatement","src":"2943:51:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3014:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3025:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3010:3:16"},"nodeType":"YulFunctionCall","src":"3010:18:16"},{"name":"value1","nodeType":"YulIdentifier","src":"3030:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3003:6:16"},"nodeType":"YulFunctionCall","src":"3003:34:16"},"nodeType":"YulExpressionStatement","src":"3003:34:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3057:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3068:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3053:3:16"},"nodeType":"YulFunctionCall","src":"3053:18:16"},{"name":"value2","nodeType":"YulIdentifier","src":"3073:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3046:6:16"},"nodeType":"YulFunctionCall","src":"3046:34:16"},"nodeType":"YulExpressionStatement","src":"3046:34:16"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2851:9:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2862:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2870:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2878:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2889:4:16","type":""}],"src":"2741:345:16"},{"body":{"nodeType":"YulBlock","src":"3192:102:16","statements":[{"nodeType":"YulAssignment","src":"3202:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3214:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3225:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3210:3:16"},"nodeType":"YulFunctionCall","src":"3210:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3202:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3244:9:16"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3259:6:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3275:3:16","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"3280:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3271:3:16"},"nodeType":"YulFunctionCall","src":"3271:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"3284:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3267:3:16"},"nodeType":"YulFunctionCall","src":"3267:19:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3255:3:16"},"nodeType":"YulFunctionCall","src":"3255:32:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3237:6:16"},"nodeType":"YulFunctionCall","src":"3237:51:16"},"nodeType":"YulExpressionStatement","src":"3237:51:16"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3161:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3172:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3183:4:16","type":""}],"src":"3091:203:16"},{"body":{"nodeType":"YulBlock","src":"3347:174:16","statements":[{"nodeType":"YulAssignment","src":"3357:16:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3368:1:16"},{"name":"y","nodeType":"YulIdentifier","src":"3371:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3364:3:16"},"nodeType":"YulFunctionCall","src":"3364:9:16"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"3357:3:16"}]},{"body":{"nodeType":"YulBlock","src":"3404:111:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3425:1:16","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3432:3:16","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3437:10:16","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3428:3:16"},"nodeType":"YulFunctionCall","src":"3428:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3418:6:16"},"nodeType":"YulFunctionCall","src":"3418:31:16"},"nodeType":"YulExpressionStatement","src":"3418:31:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3469:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3472:4:16","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3462:6:16"},"nodeType":"YulFunctionCall","src":"3462:15:16"},"nodeType":"YulExpressionStatement","src":"3462:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3497:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3500:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3490:6:16"},"nodeType":"YulFunctionCall","src":"3490:15:16"},"nodeType":"YulExpressionStatement","src":"3490:15:16"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3388:1:16"},{"name":"sum","nodeType":"YulIdentifier","src":"3391:3:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3385:2:16"},"nodeType":"YulFunctionCall","src":"3385:10:16"},"nodeType":"YulIf","src":"3382:133:16"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"3330:1:16","type":""},{"name":"y","nodeType":"YulTypedName","src":"3333:1:16","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"3339:3:16","type":""}],"src":"3299:222:16"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n}","id":16,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100935760003560e01c8063313ce56711610066578063313ce567146100fe57806370a082311461010d57806395d89b4114610136578063a9059cbb1461013e578063dd62ed3e1461015157600080fd5b806306fdde0314610098578063095ea7b3146100b657806318160ddd146100d957806323b872dd146100eb575b600080fd5b6100a061018a565b6040516100ad919061056b565b60405180910390f35b6100c96100c43660046105d5565b61021c565b60405190151581526020016100ad565b6002545b6040519081526020016100ad565b6100c96100f93660046105ff565b610236565b604051601281526020016100ad565b6100dd61011b36600461063b565b6001600160a01b031660009081526020819052604090205490565b6100a061025a565b6100c961014c3660046105d5565b610269565b6100dd61015f36600461065d565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60606003805461019990610690565b80601f01602080910402602001604051908101604052809291908181526020018280546101c590610690565b80156102125780601f106101e757610100808354040283529160200191610212565b820191906000526020600020905b8154815290600101906020018083116101f557829003601f168201915b5050505050905090565b60003361022a818585610277565b60019150505b92915050565b600033610244858285610289565b61024f85858561030d565b506001949350505050565b60606004805461019990610690565b60003361022a81858561030d565b610284838383600161036c565b505050565b6001600160a01b0383811660009081526001602090815260408083209386168352929052205460001981101561030757818110156102f857604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064015b60405180910390fd5b6103078484848403600061036c565b50505050565b6001600160a01b03831661033757604051634b637e8f60e11b8152600060048201526024016102ef565b6001600160a01b0382166103615760405163ec442f0560e01b8152600060048201526024016102ef565b610284838383610441565b6001600160a01b0384166103965760405163e602df0560e01b8152600060048201526024016102ef565b6001600160a01b0383166103c057604051634a1406b160e11b8152600060048201526024016102ef565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561030757826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161043391815260200190565b60405180910390a350505050565b6001600160a01b03831661046c57806002600082825461046191906106ca565b909155506104de9050565b6001600160a01b038316600090815260208190526040902054818110156104bf5760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016102ef565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166104fa57600280548290039055610519565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161055e91815260200190565b60405180910390a3505050565b600060208083528351808285015260005b818110156105985785810183015185820160400152820161057c565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146105d057600080fd5b919050565b600080604083850312156105e857600080fd5b6105f1836105b9565b946020939093013593505050565b60008060006060848603121561061457600080fd5b61061d846105b9565b925061062b602085016105b9565b9150604084013590509250925092565b60006020828403121561064d57600080fd5b610656826105b9565b9392505050565b6000806040838503121561067057600080fd5b610679836105b9565b9150610687602084016105b9565b90509250929050565b600181811c908216806106a457607f821691505b6020821081036106c457634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561023057634e487b7160e01b600052601160045260246000fdfea26469706673582212201bec8b242e5c02405398e4fbf42717c8cc160082cddb3e98e278f75356b9785764736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0xFE JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x13E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x151 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xD9 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xEB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x18A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x56B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC9 PUSH2 0xC4 CALLDATASIZE PUSH1 0x4 PUSH2 0x5D5 JUMP JUMPDEST PUSH2 0x21C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAD JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAD JUMP JUMPDEST PUSH2 0xC9 PUSH2 0xF9 CALLDATASIZE PUSH1 0x4 PUSH2 0x5FF JUMP JUMPDEST PUSH2 0x236 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAD JUMP JUMPDEST PUSH2 0xDD PUSH2 0x11B CALLDATASIZE PUSH1 0x4 PUSH2 0x63B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xA0 PUSH2 0x25A JUMP JUMPDEST PUSH2 0xC9 PUSH2 0x14C CALLDATASIZE PUSH1 0x4 PUSH2 0x5D5 JUMP JUMPDEST PUSH2 0x269 JUMP JUMPDEST PUSH2 0xDD PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0x65D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x199 SWAP1 PUSH2 0x690 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1C5 SWAP1 PUSH2 0x690 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x212 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1E7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x212 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1F5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x22A DUP2 DUP6 DUP6 PUSH2 0x277 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x244 DUP6 DUP3 DUP6 PUSH2 0x289 JUMP JUMPDEST PUSH2 0x24F DUP6 DUP6 DUP6 PUSH2 0x30D JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x199 SWAP1 PUSH2 0x690 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x22A DUP2 DUP6 DUP6 PUSH2 0x30D JUMP JUMPDEST PUSH2 0x284 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x36C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 LT ISZERO PUSH2 0x307 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x2F8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x307 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x36C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x337 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2EF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x361 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2EF JUMP JUMPDEST PUSH2 0x284 DUP4 DUP4 DUP4 PUSH2 0x441 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x396 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2EF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3C0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2EF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x307 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x433 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x46C JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x461 SWAP2 SWAP1 PUSH2 0x6CA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x4DE SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x4BF JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x2EF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4FA JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x519 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x55E SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x598 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x57C JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x5D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5F1 DUP4 PUSH2 0x5B9 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x614 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x61D DUP5 PUSH2 0x5B9 JUMP JUMPDEST SWAP3 POP PUSH2 0x62B PUSH1 0x20 DUP6 ADD PUSH2 0x5B9 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x64D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x656 DUP3 PUSH2 0x5B9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x670 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x679 DUP4 PUSH2 0x5B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x687 PUSH1 0x20 DUP5 ADD PUSH2 0x5B9 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x6A4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x6C4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x230 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHL 0xEC DUP12 0x24 0x2E 0x5C MUL BLOCKHASH MSTORE8 SWAP9 0xE4 0xFB DELEGATECALL 0x27 OR 0xC8 0xCC AND STOP DUP3 0xCD 0xDB RETURNDATACOPY SWAP9 0xE2 PUSH25 0xF75356B9785764736F6C634300081400330000000000000000 ","sourceMap":"270:384:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:16;;1162:22;1144:41;;1132:2;1117:18;3998:186:1;1004:187:16;2849:97:1;2927:12;;2849:97;;;1342:25:16;;;1330:2;1315:18;2849:97:1;1196:177:16;4776:244:1;;;;;;:::i;:::-;;:::i;2707:82::-;;;2780:2;1853:36:16;;1841:2;1826:18;2707:82:1;1711:184:16;3004:116:1;;;;;;:::i;:::-;-1:-1:-1;;;;;3095:18:1;3069:7;3095:18;;;;;;;;;;;;3004:116;1981:93;;;:::i;3315:178::-;;;;;;:::i;:::-;;:::i;3551:140::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3657:18:1;;;3631:7;3657:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3551:140;1779:89;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;735:10:4;4125:31:1;735:10:4;4141:7:1;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;;:::o;4776:244::-;4863:4;735:10:4;4919:37:1;4935:4;735:10:4;4950:5:1;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;-1:-1:-1;5009:4:1;;4776:244;-1:-1:-1;;;;4776:244:1:o;1981:93::-;2028:13;2060:7;2053:14;;;;;:::i;3315:178::-;3384:4;735:10:4;3438:27:1;735:10:4;3455:2:1;3459:5;3438:9;:27::i;8726:128::-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;10415:476::-;-1:-1:-1;;;;;3657:18:1;;;10514:24;3657:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10580:36:1;;10576:309;;;10655:5;10636:16;:24;10632:130;;;10687:60;;-1:-1:-1;;;10687:60:1;;-1:-1:-1;;;;;2961:32:16;;10687:60:1;;;2943:51:16;3010:18;;;3003:34;;;3053:18;;;3046:34;;;2916:18;;10687:60:1;;;;;;;;10632:130;10803:57;10812:5;10819:7;10847:5;10828:16;:24;10854:5;10803:8;:57::i;:::-;10504:387;10415:476;;;:::o;5393:300::-;-1:-1:-1;;;;;5476:18:1;;5472:86;;5517:30;;-1:-1:-1;;;5517:30:1;;5544:1;5517:30;;;3237:51:16;3210:18;;5517:30:1;3091:203:16;5472:86:1;-1:-1:-1;;;;;5571:16:1;;5567:86;;5610:32;;-1:-1:-1;;;5610:32:1;;5639:1;5610:32;;;3237:51:16;3210:18;;5610:32:1;3091:203:16;5567:86:1;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;9701:432::-;-1:-1:-1;;;;;9813:19:1;;9809:89;;9855:32;;-1:-1:-1;;;9855:32:1;;9884:1;9855:32;;;3237:51:16;3210:18;;9855:32:1;3091:203:16;9809:89:1;-1:-1:-1;;;;;9911:21:1;;9907:90;;9955:31;;-1:-1:-1;;;9955:31:1;;9983:1;9955:31;;;3237:51:16;3210:18;;9955:31:1;3091:203:16;9907:90:1;-1:-1:-1;;;;;10006:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10051:76;;;;10101:7;-1:-1:-1;;;;;10085:31:1;10094:5;-1:-1:-1;;;;;10085:31:1;;10110:5;10085:31;;;;1342:25:16;;1330:2;1315:18;;1196:177;10085:31:1;;;;;;;;9701:432;;;;:::o;6008:1107::-;-1:-1:-1;;;;;6097:18:1;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6093:540:1;;-1:-1:-1;6093:540:1;;-1:-1:-1;;;;;6307:15:1;;6285:19;6307:15;;;;;;;;;;;6340:19;;;6336:115;;;6386:50;;-1:-1:-1;;;6386:50:1;;-1:-1:-1;;;;;2961:32:16;;6386:50:1;;;2943:51:16;3010:18;;;3003:34;;;3053:18;;;3046:34;;;2916:18;;6386:50:1;2741:345:16;6336:115:1;-1:-1:-1;;;;;6571:15:1;;:9;:15;;;;;;;;;;6589:19;;;;6571:37;;6093:540;-1:-1:-1;;;;;6647:16:1;;6643:425;;6810:12;:21;;;;;;;6643:425;;;-1:-1:-1;;;;;7021:13:1;;:9;:13;;;;;;;;;;:22;;;;;;6643:425;7098:2;-1:-1:-1;;;;;7083:25:1;7092:4;-1:-1:-1;;;;;7083:25:1;;7102:5;7083:25;;;;1342::16;;1330:2;1315:18;;1196:177;7083:25:1;;;;;;;;6008:1107;;;:::o;14:548:16:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:16;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:16:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:186::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;2051:29;2070:9;2051:29;:::i;:::-;2041:39;1900:186;-1:-1:-1;;;1900:186:16:o;2091:260::-;2159:6;2167;2220:2;2208:9;2199:7;2195:23;2191:32;2188:52;;;2236:1;2233;2226:12;2188:52;2259:29;2278:9;2259:29;:::i;:::-;2249:39;;2307:38;2341:2;2330:9;2326:18;2307:38;:::i;:::-;2297:48;;2091:260;;;;;:::o;2356:380::-;2435:1;2431:12;;;;2478;;;2499:61;;2553:4;2545:6;2541:17;2531:27;;2499:61;2606:2;2598:6;2595:14;2575:18;2572:38;2569:161;;2652:10;2647:3;2643:20;2640:1;2633:31;2687:4;2684:1;2677:15;2715:4;2712:1;2705:15;2569:161;;2356:380;;;:::o;3299:222::-;3364:9;;;3385:10;;;3382:133;;;3437:10;3432:3;3428:20;3425:1;3418:31;3472:4;3469:1;3462:15;3500:4;3497:1;3490:15"},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NewToken.sol\":\"NewToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/NewToken.sol\":{\"keccak256\":\"0x412b655dedc457c67e769ab51421096f081e4fc96d6e0195d7369bde32ae23d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://73a506abca98388b40a6d551ef452965ccfb11416562f53195672545feecc755\",\"dweb:/ipfs/QmSm3T3URKpt18To17bTQHEtnne7uKPM9QWExUYSvSQLRS\"]}},\"version\":1}"}},"contracts/Pool.sol":{"Pool":{"abi":[{"inputs":[{"internalType":"address[]","name":"tokens_add","type":"address[]"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address[]","name":"token_add","type":"address[]"},{"indexed":false,"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"name":"AddedLiquidity","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"tokenIn","type":"address"},{"indexed":true,"internalType":"uint256","name":"amountIn","type":"uint256"},{"indexed":false,"internalType":"address","name":"tokenOut","type":"address"},{"indexed":true,"internalType":"uint256","name":"amountOut","type":"uint256"}],"name":"Swapped","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address[]","name":"token_add","type":"address[]"},{"indexed":false,"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"name":"WithdrawLiquidity","type":"event"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"INITIAL_RATIO","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"token_add","type":"address[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"name":"addLiquidity","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"factory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"address","name":"tokenOut","type":"address"}],"name":"getAmountOut","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount0","type":"uint256"}],"name":"getRequiredAmounts","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"i_tokens","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"i_tokens_addresses","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"i_tokens_map","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"address","name":"tokenOut","type":"address"}],"name":"swap","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"tokenBalances","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"token_add","type":"address[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"name":"withdrawingliquidity","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_188":{"entryPoint":null,"id":188,"parameterSlots":2,"returnSlots":0},"@_6067":{"entryPoint":null,"id":6067,"parameterSlots":2,"returnSlots":0},"@_6241":{"entryPoint":null,"id":6241,"parameterSlots":1,"returnSlots":0},"@_859":{"entryPoint":null,"id":859,"parameterSlots":0,"returnSlots":0},"abi_decode_address_fromMemory":{"entryPoint":848,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr_fromMemory":{"entryPoint":877,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":1147,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1230,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":1087,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"increment_t_uint256":{"entryPoint":1456,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x32":{"entryPoint":1434,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":826,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4417:16","statements":[{"nodeType":"YulBlock","src":"6:3:16","statements":[]},{"body":{"nodeType":"YulBlock","src":"46:95:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"63:1:16","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"70:3:16","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"75:10:16","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"66:3:16"},"nodeType":"YulFunctionCall","src":"66:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56:6:16"},"nodeType":"YulFunctionCall","src":"56:31:16"},"nodeType":"YulExpressionStatement","src":"56:31:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"106:4:16","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"96:6:16"},"nodeType":"YulFunctionCall","src":"96:15:16"},"nodeType":"YulExpressionStatement","src":"96:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"127:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"130:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"120:6:16"},"nodeType":"YulFunctionCall","src":"120:15:16"},"nodeType":"YulExpressionStatement","src":"120:15:16"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"14:127:16"},{"body":{"nodeType":"YulBlock","src":"206:117:16","statements":[{"nodeType":"YulAssignment","src":"216:22:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"231:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"225:5:16"},"nodeType":"YulFunctionCall","src":"225:13:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"216:5:16"}]},{"body":{"nodeType":"YulBlock","src":"301:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"310:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"313:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"303:6:16"},"nodeType":"YulFunctionCall","src":"303:12:16"},"nodeType":"YulExpressionStatement","src":"303:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"260:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"271:5:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"286:3:16","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"291:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"282:3:16"},"nodeType":"YulFunctionCall","src":"282:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"295:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"278:3:16"},"nodeType":"YulFunctionCall","src":"278:19:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"267:3:16"},"nodeType":"YulFunctionCall","src":"267:31:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"257:2:16"},"nodeType":"YulFunctionCall","src":"257:42:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"250:6:16"},"nodeType":"YulFunctionCall","src":"250:50:16"},"nodeType":"YulIf","src":"247:70:16"}]},"name":"abi_decode_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"185:6:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"196:5:16","type":""}],"src":"146:177:16"},{"body":{"nodeType":"YulBlock","src":"434:1023:16","statements":[{"nodeType":"YulVariableDeclaration","src":"444:12:16","value":{"kind":"number","nodeType":"YulLiteral","src":"454:2:16","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"448:2:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"501:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"510:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"513:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"503:6:16"},"nodeType":"YulFunctionCall","src":"503:12:16"},"nodeType":"YulExpressionStatement","src":"503:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"476:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"485:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"472:3:16"},"nodeType":"YulFunctionCall","src":"472:23:16"},{"name":"_1","nodeType":"YulIdentifier","src":"497:2:16"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"468:3:16"},"nodeType":"YulFunctionCall","src":"468:32:16"},"nodeType":"YulIf","src":"465:52:16"},{"nodeType":"YulVariableDeclaration","src":"526:30:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"546:9:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"540:5:16"},"nodeType":"YulFunctionCall","src":"540:16:16"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"530:6:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"565:28:16","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"583:2:16","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"587:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"579:3:16"},"nodeType":"YulFunctionCall","src":"579:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"591:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"575:3:16"},"nodeType":"YulFunctionCall","src":"575:18:16"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"569:2:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"620:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"629:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"632:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"622:6:16"},"nodeType":"YulFunctionCall","src":"622:12:16"},"nodeType":"YulExpressionStatement","src":"622:12:16"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"608:6:16"},{"name":"_2","nodeType":"YulIdentifier","src":"616:2:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"605:2:16"},"nodeType":"YulFunctionCall","src":"605:14:16"},"nodeType":"YulIf","src":"602:34:16"},{"nodeType":"YulVariableDeclaration","src":"645:32:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"659:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"670:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"655:3:16"},"nodeType":"YulFunctionCall","src":"655:22:16"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"649:2:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"725:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"734:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"737:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"727:6:16"},"nodeType":"YulFunctionCall","src":"727:12:16"},"nodeType":"YulExpressionStatement","src":"727:12:16"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"704:2:16"},{"kind":"number","nodeType":"YulLiteral","src":"708:4:16","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"700:3:16"},"nodeType":"YulFunctionCall","src":"700:13:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"715:7:16"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"696:3:16"},"nodeType":"YulFunctionCall","src":"696:27:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"689:6:16"},"nodeType":"YulFunctionCall","src":"689:35:16"},"nodeType":"YulIf","src":"686:55:16"},{"nodeType":"YulVariableDeclaration","src":"750:19:16","value":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"766:2:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"760:5:16"},"nodeType":"YulFunctionCall","src":"760:9:16"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"754:2:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"792:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"794:16:16"},"nodeType":"YulFunctionCall","src":"794:18:16"},"nodeType":"YulExpressionStatement","src":"794:18:16"}]},"condition":{"arguments":[{"name":"_4","nodeType":"YulIdentifier","src":"784:2:16"},{"name":"_2","nodeType":"YulIdentifier","src":"788:2:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"781:2:16"},"nodeType":"YulFunctionCall","src":"781:10:16"},"nodeType":"YulIf","src":"778:36:16"},{"nodeType":"YulVariableDeclaration","src":"823:20:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"837:1:16","type":"","value":"5"},{"name":"_4","nodeType":"YulIdentifier","src":"840:2:16"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"833:3:16"},"nodeType":"YulFunctionCall","src":"833:10:16"},"variables":[{"name":"_5","nodeType":"YulTypedName","src":"827:2:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"852:23:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"872:2:16","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"866:5:16"},"nodeType":"YulFunctionCall","src":"866:9:16"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"856:6:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"884:56:16","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"906:6:16"},{"arguments":[{"arguments":[{"name":"_5","nodeType":"YulIdentifier","src":"922:2:16"},{"kind":"number","nodeType":"YulLiteral","src":"926:2:16","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"918:3:16"},"nodeType":"YulFunctionCall","src":"918:11:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"935:2:16","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"931:3:16"},"nodeType":"YulFunctionCall","src":"931:7:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"914:3:16"},"nodeType":"YulFunctionCall","src":"914:25:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"902:3:16"},"nodeType":"YulFunctionCall","src":"902:38:16"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"888:10:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"999:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1001:16:16"},"nodeType":"YulFunctionCall","src":"1001:18:16"},"nodeType":"YulExpressionStatement","src":"1001:18:16"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"958:10:16"},{"name":"_2","nodeType":"YulIdentifier","src":"970:2:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"955:2:16"},"nodeType":"YulFunctionCall","src":"955:18:16"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"978:10:16"},{"name":"memPtr","nodeType":"YulIdentifier","src":"990:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"975:2:16"},"nodeType":"YulFunctionCall","src":"975:22:16"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"952:2:16"},"nodeType":"YulFunctionCall","src":"952:46:16"},"nodeType":"YulIf","src":"949:72:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1037:2:16","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1041:10:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1030:6:16"},"nodeType":"YulFunctionCall","src":"1030:22:16"},"nodeType":"YulExpressionStatement","src":"1030:22:16"},{"nodeType":"YulVariableDeclaration","src":"1061:17:16","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"1072:6:16"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"1065:3:16","type":""}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1094:6:16"},{"name":"_4","nodeType":"YulIdentifier","src":"1102:2:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1087:6:16"},"nodeType":"YulFunctionCall","src":"1087:18:16"},"nodeType":"YulExpressionStatement","src":"1087:18:16"},{"nodeType":"YulAssignment","src":"1114:22:16","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1125:6:16"},{"name":"_1","nodeType":"YulIdentifier","src":"1133:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1121:3:16"},"nodeType":"YulFunctionCall","src":"1121:15:16"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"1114:3:16"}]},{"nodeType":"YulVariableDeclaration","src":"1145:34:16","value":{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"1167:2:16"},{"name":"_5","nodeType":"YulIdentifier","src":"1171:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1163:3:16"},"nodeType":"YulFunctionCall","src":"1163:11:16"},{"name":"_1","nodeType":"YulIdentifier","src":"1176:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1159:3:16"},"nodeType":"YulFunctionCall","src":"1159:20:16"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"1149:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"1211:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1220:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1223:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1213:6:16"},"nodeType":"YulFunctionCall","src":"1213:12:16"},"nodeType":"YulExpressionStatement","src":"1213:12:16"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"1194:6:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1202:7:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1191:2:16"},"nodeType":"YulFunctionCall","src":"1191:19:16"},"nodeType":"YulIf","src":"1188:39:16"},{"nodeType":"YulVariableDeclaration","src":"1236:22:16","value":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"1251:2:16"},{"name":"_1","nodeType":"YulIdentifier","src":"1255:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1247:3:16"},"nodeType":"YulFunctionCall","src":"1247:11:16"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"1240:3:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"1323:103:16","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1344:3:16"},{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1379:3:16"}],"functionName":{"name":"abi_decode_address_fromMemory","nodeType":"YulIdentifier","src":"1349:29:16"},"nodeType":"YulFunctionCall","src":"1349:34:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1337:6:16"},"nodeType":"YulFunctionCall","src":"1337:47:16"},"nodeType":"YulExpressionStatement","src":"1337:47:16"},{"nodeType":"YulAssignment","src":"1397:19:16","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1408:3:16"},{"name":"_1","nodeType":"YulIdentifier","src":"1413:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1404:3:16"},"nodeType":"YulFunctionCall","src":"1404:12:16"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"1397:3:16"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1278:3:16"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"1283:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1275:2:16"},"nodeType":"YulFunctionCall","src":"1275:15:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1291:23:16","statements":[{"nodeType":"YulAssignment","src":"1293:19:16","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1304:3:16"},{"name":"_1","nodeType":"YulIdentifier","src":"1309:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1300:3:16"},"nodeType":"YulFunctionCall","src":"1300:12:16"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"1293:3:16"}]}]},"pre":{"nodeType":"YulBlock","src":"1271:3:16","statements":[]},"src":"1267:159:16"},{"nodeType":"YulAssignment","src":"1435:16:16","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"1445:6:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1435:6:16"}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"400:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"411:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"423:6:16","type":""}],"src":"328:1129:16"},{"body":{"nodeType":"YulBlock","src":"1517:325:16","statements":[{"nodeType":"YulAssignment","src":"1527:22:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1541:1:16","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"1544:4:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1537:3:16"},"nodeType":"YulFunctionCall","src":"1537:12:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1527:6:16"}]},{"nodeType":"YulVariableDeclaration","src":"1558:38:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1588:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"1594:1:16","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1584:3:16"},"nodeType":"YulFunctionCall","src":"1584:12:16"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"1562:18:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"1635:31:16","statements":[{"nodeType":"YulAssignment","src":"1637:27:16","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1651:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"1659:4:16","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1647:3:16"},"nodeType":"YulFunctionCall","src":"1647:17:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1637:6:16"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1615:18:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1608:6:16"},"nodeType":"YulFunctionCall","src":"1608:26:16"},"nodeType":"YulIf","src":"1605:61:16"},{"body":{"nodeType":"YulBlock","src":"1725:111:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1746:1:16","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1753:3:16","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1758:10:16","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1749:3:16"},"nodeType":"YulFunctionCall","src":"1749:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1739:6:16"},"nodeType":"YulFunctionCall","src":"1739:31:16"},"nodeType":"YulExpressionStatement","src":"1739:31:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1790:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1793:4:16","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1783:6:16"},"nodeType":"YulFunctionCall","src":"1783:15:16"},"nodeType":"YulExpressionStatement","src":"1783:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1818:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1821:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1811:6:16"},"nodeType":"YulFunctionCall","src":"1811:15:16"},"nodeType":"YulExpressionStatement","src":"1811:15:16"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1681:18:16"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1704:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"1712:2:16","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1701:2:16"},"nodeType":"YulFunctionCall","src":"1701:14:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1678:2:16"},"nodeType":"YulFunctionCall","src":"1678:38:16"},"nodeType":"YulIf","src":"1675:161:16"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1497:4:16","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1506:6:16","type":""}],"src":"1462:380:16"},{"body":{"nodeType":"YulBlock","src":"1903:65:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1920:1:16","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"1923:3:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1913:6:16"},"nodeType":"YulFunctionCall","src":"1913:14:16"},"nodeType":"YulExpressionStatement","src":"1913:14:16"},{"nodeType":"YulAssignment","src":"1936:26:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1954:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1957:4:16","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"1944:9:16"},"nodeType":"YulFunctionCall","src":"1944:18:16"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"1936:4:16"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"1886:3:16","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"1894:4:16","type":""}],"src":"1847:121:16"},{"body":{"nodeType":"YulBlock","src":"2054:464:16","statements":[{"body":{"nodeType":"YulBlock","src":"2087:425:16","statements":[{"nodeType":"YulVariableDeclaration","src":"2101:11:16","value":{"kind":"number","nodeType":"YulLiteral","src":"2111:1:16","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2105:2:16","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2132:2:16"},{"name":"array","nodeType":"YulIdentifier","src":"2136:5:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2125:6:16"},"nodeType":"YulFunctionCall","src":"2125:17:16"},"nodeType":"YulExpressionStatement","src":"2125:17:16"},{"nodeType":"YulVariableDeclaration","src":"2155:31:16","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2177:2:16"},{"kind":"number","nodeType":"YulLiteral","src":"2181:4:16","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2167:9:16"},"nodeType":"YulFunctionCall","src":"2167:19:16"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"2159:4:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2199:57:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2222:4:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2232:1:16","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2239:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"2251:2:16","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2235:3:16"},"nodeType":"YulFunctionCall","src":"2235:19:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2228:3:16"},"nodeType":"YulFunctionCall","src":"2228:27:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2218:3:16"},"nodeType":"YulFunctionCall","src":"2218:38:16"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"2203:11:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"2293:23:16","statements":[{"nodeType":"YulAssignment","src":"2295:19:16","value":{"name":"data","nodeType":"YulIdentifier","src":"2310:4:16"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"2295:11:16"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2275:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"2287:4:16","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2272:2:16"},"nodeType":"YulFunctionCall","src":"2272:20:16"},"nodeType":"YulIf","src":"2269:47:16"},{"nodeType":"YulVariableDeclaration","src":"2329:41:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2343:4:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2353:1:16","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2360:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"2365:2:16","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2356:3:16"},"nodeType":"YulFunctionCall","src":"2356:12:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2349:3:16"},"nodeType":"YulFunctionCall","src":"2349:20:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2339:3:16"},"nodeType":"YulFunctionCall","src":"2339:31:16"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"2333:2:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2383:24:16","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"2396:11:16"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"2387:5:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"2481:21:16","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2490:5:16"},{"name":"_1","nodeType":"YulIdentifier","src":"2497:2:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2483:6:16"},"nodeType":"YulFunctionCall","src":"2483:17:16"},"nodeType":"YulExpressionStatement","src":"2483:17:16"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2431:5:16"},{"name":"_2","nodeType":"YulIdentifier","src":"2438:2:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2428:2:16"},"nodeType":"YulFunctionCall","src":"2428:13:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2442:26:16","statements":[{"nodeType":"YulAssignment","src":"2444:22:16","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2457:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"2464:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2453:3:16"},"nodeType":"YulFunctionCall","src":"2453:13:16"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"2444:5:16"}]}]},"pre":{"nodeType":"YulBlock","src":"2424:3:16","statements":[]},"src":"2420:82:16"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2070:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"2075:2:16","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2067:2:16"},"nodeType":"YulFunctionCall","src":"2067:11:16"},"nodeType":"YulIf","src":"2064:448:16"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"2026:5:16","type":""},{"name":"len","nodeType":"YulTypedName","src":"2033:3:16","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"2038:10:16","type":""}],"src":"1973:545:16"},{"body":{"nodeType":"YulBlock","src":"2608:81:16","statements":[{"nodeType":"YulAssignment","src":"2618:65:16","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2633:4:16"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2651:1:16","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"2654:3:16"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2647:3:16"},"nodeType":"YulFunctionCall","src":"2647:11:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2664:1:16","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2660:3:16"},"nodeType":"YulFunctionCall","src":"2660:6:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2643:3:16"},"nodeType":"YulFunctionCall","src":"2643:24:16"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2639:3:16"},"nodeType":"YulFunctionCall","src":"2639:29:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2629:3:16"},"nodeType":"YulFunctionCall","src":"2629:40:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2675:1:16","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"2678:3:16"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2671:3:16"},"nodeType":"YulFunctionCall","src":"2671:11:16"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2626:2:16"},"nodeType":"YulFunctionCall","src":"2626:57:16"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"2618:4:16"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2585:4:16","type":""},{"name":"len","nodeType":"YulTypedName","src":"2591:3:16","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"2599:4:16","type":""}],"src":"2523:166:16"},{"body":{"nodeType":"YulBlock","src":"2790:1256:16","statements":[{"nodeType":"YulVariableDeclaration","src":"2800:24:16","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2820:3:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2814:5:16"},"nodeType":"YulFunctionCall","src":"2814:10:16"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"2804:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"2867:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2869:16:16"},"nodeType":"YulFunctionCall","src":"2869:18:16"},"nodeType":"YulExpressionStatement","src":"2869:18:16"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"2839:6:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2855:2:16","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"2859:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2851:3:16"},"nodeType":"YulFunctionCall","src":"2851:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"2863:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2847:3:16"},"nodeType":"YulFunctionCall","src":"2847:18:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2836:2:16"},"nodeType":"YulFunctionCall","src":"2836:30:16"},"nodeType":"YulIf","src":"2833:56:16"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2942:4:16"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2980:4:16"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"2974:5:16"},"nodeType":"YulFunctionCall","src":"2974:11:16"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"2948:25:16"},"nodeType":"YulFunctionCall","src":"2948:38:16"},{"name":"newLen","nodeType":"YulIdentifier","src":"2988:6:16"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"2898:43:16"},"nodeType":"YulFunctionCall","src":"2898:97:16"},"nodeType":"YulExpressionStatement","src":"2898:97:16"},{"nodeType":"YulVariableDeclaration","src":"3004:18:16","value":{"kind":"number","nodeType":"YulLiteral","src":"3021:1:16","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"3008:9:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3031:23:16","value":{"kind":"number","nodeType":"YulLiteral","src":"3050:4:16","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"3035:11:16","type":""}]},{"nodeType":"YulAssignment","src":"3063:24:16","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3076:11:16"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3063:9:16"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"3133:656:16","statements":[{"nodeType":"YulVariableDeclaration","src":"3147:35:16","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"3166:6:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3178:2:16","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3174:3:16"},"nodeType":"YulFunctionCall","src":"3174:7:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3162:3:16"},"nodeType":"YulFunctionCall","src":"3162:20:16"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"3151:7:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3195:49:16","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3239:4:16"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"3209:29:16"},"nodeType":"YulFunctionCall","src":"3209:35:16"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"3199:6:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3257:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"3266:1:16","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3261:1:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"3344:172:16","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3369:6:16"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3387:3:16"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"3392:9:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3383:3:16"},"nodeType":"YulFunctionCall","src":"3383:19:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3377:5:16"},"nodeType":"YulFunctionCall","src":"3377:26:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3362:6:16"},"nodeType":"YulFunctionCall","src":"3362:42:16"},"nodeType":"YulExpressionStatement","src":"3362:42:16"},{"nodeType":"YulAssignment","src":"3421:24:16","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3435:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"3443:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3431:3:16"},"nodeType":"YulFunctionCall","src":"3431:14:16"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3421:6:16"}]},{"nodeType":"YulAssignment","src":"3462:40:16","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3479:9:16"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3490:11:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3475:3:16"},"nodeType":"YulFunctionCall","src":"3475:27:16"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3462:9:16"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3291:1:16"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"3294:7:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3288:2:16"},"nodeType":"YulFunctionCall","src":"3288:14:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3303:28:16","statements":[{"nodeType":"YulAssignment","src":"3305:24:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3314:1:16"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3317:11:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3310:3:16"},"nodeType":"YulFunctionCall","src":"3310:19:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3305:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"3284:3:16","statements":[]},"src":"3280:236:16"},{"body":{"nodeType":"YulBlock","src":"3564:166:16","statements":[{"nodeType":"YulVariableDeclaration","src":"3582:43:16","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3609:3:16"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"3614:9:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3605:3:16"},"nodeType":"YulFunctionCall","src":"3605:19:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3599:5:16"},"nodeType":"YulFunctionCall","src":"3599:26:16"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"3586:9:16","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3649:6:16"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"3661:9:16"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3688:1:16","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"3691:6:16"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3684:3:16"},"nodeType":"YulFunctionCall","src":"3684:14:16"},{"kind":"number","nodeType":"YulLiteral","src":"3700:3:16","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3680:3:16"},"nodeType":"YulFunctionCall","src":"3680:24:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3710:1:16","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3706:3:16"},"nodeType":"YulFunctionCall","src":"3706:6:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3676:3:16"},"nodeType":"YulFunctionCall","src":"3676:37:16"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3672:3:16"},"nodeType":"YulFunctionCall","src":"3672:42:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3657:3:16"},"nodeType":"YulFunctionCall","src":"3657:58:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3642:6:16"},"nodeType":"YulFunctionCall","src":"3642:74:16"},"nodeType":"YulExpressionStatement","src":"3642:74:16"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"3535:7:16"},{"name":"newLen","nodeType":"YulIdentifier","src":"3544:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3532:2:16"},"nodeType":"YulFunctionCall","src":"3532:19:16"},"nodeType":"YulIf","src":"3529:201:16"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3750:4:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3764:1:16","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"3767:6:16"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3760:3:16"},"nodeType":"YulFunctionCall","src":"3760:14:16"},{"kind":"number","nodeType":"YulLiteral","src":"3776:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3756:3:16"},"nodeType":"YulFunctionCall","src":"3756:22:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3743:6:16"},"nodeType":"YulFunctionCall","src":"3743:36:16"},"nodeType":"YulExpressionStatement","src":"3743:36:16"}]},"nodeType":"YulCase","src":"3126:663:16","value":{"kind":"number","nodeType":"YulLiteral","src":"3131:1:16","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"3806:234:16","statements":[{"nodeType":"YulVariableDeclaration","src":"3820:14:16","value":{"kind":"number","nodeType":"YulLiteral","src":"3833:1:16","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3824:5:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"3869:67:16","statements":[{"nodeType":"YulAssignment","src":"3887:35:16","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3906:3:16"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"3911:9:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3902:3:16"},"nodeType":"YulFunctionCall","src":"3902:19:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3896:5:16"},"nodeType":"YulFunctionCall","src":"3896:26:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3887:5:16"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"3850:6:16"},"nodeType":"YulIf","src":"3847:89:16"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3956:4:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4015:5:16"},{"name":"newLen","nodeType":"YulIdentifier","src":"4022:6:16"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"3962:52:16"},"nodeType":"YulFunctionCall","src":"3962:67:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3949:6:16"},"nodeType":"YulFunctionCall","src":"3949:81:16"},"nodeType":"YulExpressionStatement","src":"3949:81:16"}]},"nodeType":"YulCase","src":"3798:242:16","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"3106:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"3114:2:16","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3103:2:16"},"nodeType":"YulFunctionCall","src":"3103:14:16"},"nodeType":"YulSwitch","src":"3096:944:16"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"2775:4:16","type":""},{"name":"src","nodeType":"YulTypedName","src":"2781:3:16","type":""}],"src":"2694:1352:16"},{"body":{"nodeType":"YulBlock","src":"4083:95:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4100:1:16","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4107:3:16","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"4112:10:16","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4103:3:16"},"nodeType":"YulFunctionCall","src":"4103:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4093:6:16"},"nodeType":"YulFunctionCall","src":"4093:31:16"},"nodeType":"YulExpressionStatement","src":"4093:31:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4140:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4143:4:16","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4133:6:16"},"nodeType":"YulFunctionCall","src":"4133:15:16"},"nodeType":"YulExpressionStatement","src":"4133:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4164:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4167:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4157:6:16"},"nodeType":"YulFunctionCall","src":"4157:15:16"},"nodeType":"YulExpressionStatement","src":"4157:15:16"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"4051:127:16"},{"body":{"nodeType":"YulBlock","src":"4230:185:16","statements":[{"body":{"nodeType":"YulBlock","src":"4269:111:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4290:1:16","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4297:3:16","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"4302:10:16","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4293:3:16"},"nodeType":"YulFunctionCall","src":"4293:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4283:6:16"},"nodeType":"YulFunctionCall","src":"4283:31:16"},"nodeType":"YulExpressionStatement","src":"4283:31:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4334:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4337:4:16","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4327:6:16"},"nodeType":"YulFunctionCall","src":"4327:15:16"},"nodeType":"YulExpressionStatement","src":"4327:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4362:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4365:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4355:6:16"},"nodeType":"YulFunctionCall","src":"4355:15:16"},"nodeType":"YulExpressionStatement","src":"4355:15:16"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4246:5:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4257:1:16","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4253:3:16"},"nodeType":"YulFunctionCall","src":"4253:6:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4243:2:16"},"nodeType":"YulFunctionCall","src":"4243:17:16"},"nodeType":"YulIf","src":"4240:140:16"},{"nodeType":"YulAssignment","src":"4389:20:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4400:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"4407:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4396:3:16"},"nodeType":"YulFunctionCall","src":"4396:13:16"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"4389:3:16"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4212:5:16","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"4222:3:16","type":""}],"src":"4183:232:16"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := mload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := shl(5, _4)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(_5, 63), not(31)))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        let dst := memPtr\n        mstore(memPtr, _4)\n        dst := add(memPtr, _1)\n        let srcEnd := add(add(_3, _5), _1)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_3, _1)\n        for { } lt(src, srcEnd) { src := add(src, _1) }\n        {\n            mstore(dst, abi_decode_address_fromMemory(src))\n            dst := add(dst, _1)\n        }\n        value0 := memPtr\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        ret := add(value, 1)\n    }\n}","id":16,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60e060405260016080908152600260a052600360c08190526200002591600a9162000276565b503480156200003357600080fd5b5060405162001e8438038062001e8483398101604081905262000056916200036d565b6040518060400160405280600781526020016626282a37b5b2b760c91b8152506040518060400160405280600381526020016213141560ea1b81525081818160039081620000a59190620004ce565b506004620000b48282620004ce565b505060016005555050600980546001600160a01b03191633179055508051806001600160401b03811115620000ed57620000ed6200033a565b60405190808252806020026020018201604052801562000117578160200160208202803683370190505b5080516200012e91600691602090910190620002cb565b50806001600160401b038111156200014a576200014a6200033a565b60405190808252806020026020018201604052801562000174578160200160208202803683370190505b5080516200018b91600791602090910190620002cb565b5060005b818110156200026d576000838281518110620001af57620001af6200059a565b602002602001015190508060068381548110620001d057620001d06200059a565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555080600783815481106200021557620002156200059a565b600091825260208083209190910180546001600160a01b0319166001600160a01b03948516179055929091168152600882526040808220849055600b90925290812055806200026481620005b0565b9150506200018f565b505050620005d8565b828054828255906000526020600020908101928215620002b9579160200282015b82811115620002b9578251829060ff1690559160200191906001019062000297565b50620002c792915062000323565b5090565b828054828255906000526020600020908101928215620002b9579160200282015b82811115620002b957825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190620002ec565b5b80821115620002c7576000815560010162000324565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b03811681146200036857600080fd5b919050565b600060208083850312156200038157600080fd5b82516001600160401b03808211156200039957600080fd5b818501915085601f830112620003ae57600080fd5b815181811115620003c357620003c36200033a565b8060051b604051601f19603f83011681018181108582111715620003eb57620003eb6200033a565b6040529182528482019250838101850191888311156200040a57600080fd5b938501935b828510156200043357620004238562000350565b845293850193928501926200040f565b98975050505050505050565b600181811c908216806200045457607f821691505b6020821081036200047557634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620004c957600081815260208120601f850160051c81016020861015620004a45750805b601f850160051c820191505b81811015620004c557828155600101620004b0565b5050505b505050565b81516001600160401b03811115620004ea57620004ea6200033a565b6200050281620004fb84546200043f565b846200047b565b602080601f8311600181146200053a5760008415620005215750858301515b600019600386901b1c1916600185901b178555620004c5565b600085815260208120601f198616915b828110156200056b578886015182559484019460019091019084016200054a565b50858210156200058a5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052603260045260246000fd5b600060018201620005d157634e487b7160e01b600052601160045260246000fd5b5060010190565b61189c80620005e86000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c806370a08231116100ad578063d5b271f511610071578063d5b271f5146102a3578063dd62ed3e146102c3578063e5a86833146102fc578063eaa91a3d1461030f578063ff9c8ac61461032257600080fd5b806370a082311461023957806395d89b4114610262578063a9059cbb1461026a578063c45a01551461027d578063cbd01fa41461029057600080fd5b806323b872dd116100f457806323b872dd146101b9578063313ce567146101cc578063345f5557146101db578063523fba7f146102065780636d069a671461022657600080fd5b806306fdde0314610131578063095ea7b31461014f5780631371a9571461017257806318160ddd146101925780631d978bd2146101a4575b600080fd5b610139610335565b6040516101469190611358565b60405180910390f35b61016261015d3660046113c2565b6103c7565b6040519015158152602001610146565b6101856101803660046113ec565b6103e1565b6040516101469190611440565b6002545b604051908152602001610146565b6101b76101b2366004611530565b610563565b005b6101626101c73660046115f0565b610863565b60405160128152602001610146565b6101ee6101e93660046113ec565b610887565b6040516001600160a01b039091168152602001610146565b61019661021436600461162c565b600b6020526000908152604090205481565b6101b7610234366004611647565b6108b1565b61019661024736600461162c565b6001600160a01b031660009081526020819052604090205490565b610139610c31565b6101626102783660046113c2565b610c40565b6009546101ee906001600160a01b031681565b61019661029e3660046113ec565b610c4e565b6101966102b136600461162c565b60086020526000908152604090205481565b6101966102d1366004611683565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6101b761030a366004611530565b610c6f565b6101ee61031d3660046113ec565b610f78565b610196610330366004611647565b610f88565b606060038054610344906116b6565b80601f0160208091040260200160405190810160405280929190818152602001828054610370906116b6565b80156103bd5780601f10610392576101008083540402835291602001916103bd565b820191906000526020600020905b8154815290600101906020018083116103a057829003601f168201915b5050505050905090565b6000336103d5818585610fd8565b60019150505b92915050565b60075460609060008167ffffffffffffffff8111156104025761040261145a565b60405190808252806020026020018201604052801561042b578160200160208202803683370190505b5090506000600b60006007600081548110610448576104486116f0565b60009182526020808320909101546001600160a01b03168352820192909252604001902054905060015b8381101561053b5760006007828154811061048f5761048f6116f0565b60009182526020808320909101546001600160a01b0316808352600b9091526040822054909250908181036104ee57600a84815481106104d1576104d16116f0565b9060005260206000200154896104e7919061171c565b9050610506565b816104f9868b61171c565b6105039190611733565b90505b80868581518110610519576105196116f0565b602002602001018181525050505050808061053390611755565b915050610472565b508482600081518110610550576105506116f0565b6020908102919091010152509392505050565b805182511461058d5760405162461bcd60e51b81526004016105849061176e565b60405180910390fd5b60008061059960025490565b111561061b57600b600060076000815481106105b7576105b76116f0565b60009182526020808320909101546001600160a01b031683528201929092526040019020546105e560025490565b836000815181106105f8576105f86116f0565b602002602001015161060a919061171c565b6106149190611733565b9050610639565b8160008151811061062e5761062e6116f0565b602002602001015190505b6106433382610fe5565b825160005b81811015610823576000858281518110610664576106646116f0565b60200260200101519050600060086000836001600160a01b03166001600160a01b031681526020019081526020016000205490506000600682815481106106ad576106ad6116f0565b9060005260206000200160009054906101000a90046001600160a01b03169050806001600160a01b03166323b872dd33308a88815181106106f0576106f06116f0565b60209081029190910101516040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015260448201526064016020604051808303816000875af115801561074f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077391906117be565b6107b85760405162461bcd60e51b8152602060048201526016602482015275151c985b9cd9995c881d1bdad95b8c0819985a5b195960521b6044820152606401610584565b8684815181106107ca576107ca6116f0565b6020026020010151600b6000856001600160a01b03166001600160a01b03168152602001908152602001600020600082825461080691906117e0565b92505081905550505050808061081b90611755565b915050610648565b507f7f63fc1ab7d4b22633cca91cd87319f6e7b3229ace7baa90f114b15f33e847ae84846040516108559291906117f3565b60405180910390a150505050565b60003361087185828561101b565b61087c85858561109a565b506001949350505050565b6006818154811061089757600080fd5b6000918252602090912001546001600160a01b0316905081565b6108b96110f9565b806001600160a01b0316836001600160a01b0316036109085760405162461bcd60e51b815260206004820152600b60248201526a53616d6520746f6b656e7360a81b6044820152606401610584565b6001600160a01b038316600090815260086020526040812054900361096f5760405162461bcd60e51b815260206004820152601b60248201527f746f6b656e496e206e6f7420696e20695f746f6b656e735f6d617000000000006044820152606401610584565b6001600160a01b03811660009081526008602052604081205490036109d65760405162461bcd60e51b815260206004820152601c60248201527f746f6b656e4f7574206e6f7420696e20695f746f6b656e735f6d6170000000006044820152606401610584565b60008211610a145760405162461bcd60e51b815260206004820152600b60248201526a16995c9bc8185b5bdd5b9d60aa1b6044820152606401610584565b6000610a21848484610f88565b6040516323b872dd60e01b8152336004820152306024820152604481018590529091506001600160a01b038516906323b872dd906064016020604051808303816000875af1158015610a77573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9b91906117be565b610ad55760405162461bcd60e51b815260206004820152600b60248201526a14ddd85c0811985a5b195960aa1b6044820152606401610584565b60405163a9059cbb60e01b8152336004820152602481018290526001600160a01b0383169063a9059cbb906044016020604051808303816000875af1158015610b22573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b4691906117be565b610b805760405162461bcd60e51b815260206004820152600b60248201526a14ddd85c0811985a5b195960aa1b6044820152606401610584565b6001600160a01b0384166000908152600b602052604081208054859290610ba8908490611853565b90915550506001600160a01b0382166000908152600b602052604081208054839290610bd59084906117e0565b9091555050604080516001600160a01b03808716825284166020820152829185917fdb587d878116df0bdd4fe154699aa2c5f439da001cc811dfd05d9f589fc5a8ee910160405180910390a350610c2c6001600555565b505050565b606060048054610344906116b6565b6000336103d581858561109a565b600a8181548110610c5e57600080fd5b600091825260209091200154905081565b610c776110f9565b8051825114610c985760405162461bcd60e51b81526004016105849061176e565b600080610ca460025490565b1115610d2657600b60006007600081548110610cc257610cc26116f0565b60009182526020808320909101546001600160a01b03168352820192909252604001902054610cf060025490565b83600081518110610d0357610d036116f0565b6020026020010151610d15919061171c565b610d1f9190611733565b9050610d44565b81600081518110610d3957610d396116f0565b602002602001015190505b610d4e3382611123565b825160005b81811015610f2e576000858281518110610d6f57610d6f6116f0565b60200260200101519050600060086000836001600160a01b03166001600160a01b03168152602001908152602001600020549050600060068281548110610db857610db86116f0565b9060005260206000200160009054906101000a90046001600160a01b03169050806001600160a01b03166323b872dd33308a8881518110610dfb57610dfb6116f0565b60209081029190910101516040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015260448201526064016020604051808303816000875af1158015610e5a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e7e91906117be565b610ec35760405162461bcd60e51b8152602060048201526016602482015275151c985b9cd9995c881d1bdad95b8c0819985a5b195960521b6044820152606401610584565b868481518110610ed557610ed56116f0565b6020026020010151600b6000856001600160a01b03166001600160a01b031681526020019081526020016000206000828254610f119190611853565b925050819055505050508080610f2690611755565b915050610d53565b507fb1b40d6e24db4f4144d860844c12ef0cee735402334d5e8682124a4c03bce4c78484604051610f609291906117f3565b60405180910390a15050610f746001600555565b5050565b6007818154811061089757600080fd5b6001600160a01b038082166000908152600b602052604080822054928616825281205490919082610fb98683611853565b610fc3878561171c565b610fcd9190611733565b979650505050505050565b610c2c8383836001611159565b6001600160a01b03821661100f57604051634b637e8f60e11b815260006004820152602401610584565b610f748260008361122e565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811015611094578181101561108557604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610584565b61109484848484036000611159565b50505050565b6001600160a01b0383166110c457604051634b637e8f60e11b815260006004820152602401610584565b6001600160a01b0382166110ee5760405163ec442f0560e01b815260006004820152602401610584565b610c2c83838361122e565b60026005540361111c57604051633ee5aeb560e01b815260040160405180910390fd5b6002600555565b6001600160a01b03821661114d5760405163ec442f0560e01b815260006004820152602401610584565b610f746000838361122e565b6001600160a01b0384166111835760405163e602df0560e01b815260006004820152602401610584565b6001600160a01b0383166111ad57604051634a1406b160e11b815260006004820152602401610584565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561109457826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161122091815260200190565b60405180910390a350505050565b6001600160a01b03831661125957806002600082825461124e9190611853565b909155506112cb9050565b6001600160a01b038316600090815260208190526040902054818110156112ac5760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610584565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166112e757600280548290039055611306565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161134b91815260200190565b60405180910390a3505050565b600060208083528351808285015260005b8181101561138557858101830151858201604001528201611369565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146113bd57600080fd5b919050565b600080604083850312156113d557600080fd5b6113de836113a6565b946020939093013593505050565b6000602082840312156113fe57600080fd5b5035919050565b600081518084526020808501945080840160005b8381101561143557815187529582019590820190600101611419565b509495945050505050565b6020815260006114536020830184611405565b9392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156114995761149961145a565b604052919050565b600067ffffffffffffffff8211156114bb576114bb61145a565b5060051b60200190565b600082601f8301126114d657600080fd5b813560206114eb6114e6836114a1565b611470565b82815260059290921b8401810191818101908684111561150a57600080fd5b8286015b84811015611525578035835291830191830161150e565b509695505050505050565b6000806040838503121561154357600080fd5b823567ffffffffffffffff8082111561155b57600080fd5b818501915085601f83011261156f57600080fd5b8135602061157f6114e6836114a1565b82815260059290921b8401810191818101908984111561159e57600080fd5b948201945b838610156115c3576115b4866113a6565b825294820194908201906115a3565b965050860135925050808211156115d957600080fd5b506115e6858286016114c5565b9150509250929050565b60008060006060848603121561160557600080fd5b61160e846113a6565b925061161c602085016113a6565b9150604084013590509250925092565b60006020828403121561163e57600080fd5b611453826113a6565b60008060006060848603121561165c57600080fd5b611665846113a6565b92506020840135915061167a604085016113a6565b90509250925092565b6000806040838503121561169657600080fd5b61169f836113a6565b91506116ad602084016113a6565b90509250929050565b600181811c908216806116ca57607f821691505b6020821081036116ea57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176103db576103db611706565b60008261175057634e487b7160e01b600052601260045260246000fd5b500490565b60006001820161176757611767611706565b5060010190565b60208082526030908201527f746865206c656e73206f6620616d6f756e7420616e6420746f6b656e5f61646460408201526f081cda1bdd5b1908189948195c5d585b60821b606082015260800190565b6000602082840312156117d057600080fd5b8151801515811461145357600080fd5b818103818111156103db576103db611706565b604080825283519082018190526000906020906060840190828701845b828110156118355781516001600160a01b031684529284019290840190600101611810565b505050838103828501526118498186611405565b9695505050505050565b808201808211156103db576103db61170656fea2646970667358221220c7ed7a53e7a7fcfdc1042d914bbababd5040a014f69d4fb7894bce403d5c904c64736f6c63430008140033","opcodes":"PUSH1 0xE0 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x80 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0xA0 MSTORE PUSH1 0x3 PUSH1 0xC0 DUP2 SWAP1 MSTORE PUSH3 0x25 SWAP2 PUSH1 0xA SWAP2 PUSH3 0x276 JUMP JUMPDEST POP CALLVALUE DUP1 ISZERO PUSH3 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1E84 CODESIZE SUB DUP1 PUSH3 0x1E84 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x56 SWAP2 PUSH3 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH7 0x26282A37B5B2B7 PUSH1 0xC9 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x131415 PUSH1 0xEA SHL DUP2 MSTORE POP DUP2 DUP2 DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0xA5 SWAP2 SWAP1 PUSH3 0x4CE JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0xB4 DUP3 DUP3 PUSH3 0x4CE JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x5 SSTORE POP POP PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE POP DUP1 MLOAD DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0xED JUMPI PUSH3 0xED PUSH3 0x33A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH3 0x117 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP1 MLOAD PUSH3 0x12E SWAP2 PUSH1 0x6 SWAP2 PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH3 0x2CB JUMP JUMPDEST POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x14A JUMPI PUSH3 0x14A PUSH3 0x33A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH3 0x174 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP1 MLOAD PUSH3 0x18B SWAP2 PUSH1 0x7 SWAP2 PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH3 0x2CB JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x26D JUMPI PUSH1 0x0 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH3 0x1AF JUMPI PUSH3 0x1AF PUSH3 0x59A JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP1 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH3 0x1D0 JUMPI PUSH3 0x1D0 PUSH3 0x59A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x7 DUP4 DUP2 SLOAD DUP2 LT PUSH3 0x215 JUMPI PUSH3 0x215 PUSH3 0x59A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND OR SWAP1 SSTORE SWAP3 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x8 DUP3 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP5 SWAP1 SSTORE PUSH1 0xB SWAP1 SWAP3 MSTORE SWAP1 DUP2 KECCAK256 SSTORE DUP1 PUSH3 0x264 DUP2 PUSH3 0x5B0 JUMP JUMPDEST SWAP2 POP POP PUSH3 0x18F JUMP JUMPDEST POP POP POP PUSH3 0x5D8 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH3 0x2B9 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x2B9 JUMPI DUP3 MLOAD DUP3 SWAP1 PUSH1 0xFF AND SWAP1 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x297 JUMP JUMPDEST POP PUSH3 0x2C7 SWAP3 SWAP2 POP PUSH3 0x323 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH3 0x2B9 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x2B9 JUMPI DUP3 MLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH3 0x2EC JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x2C7 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x324 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x368 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x381 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x399 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x3AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH3 0x3C3 JUMPI PUSH3 0x3C3 PUSH3 0x33A JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH3 0x3EB JUMPI PUSH3 0x3EB PUSH3 0x33A JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE DUP5 DUP3 ADD SWAP3 POP DUP4 DUP2 ADD DUP6 ADD SWAP2 DUP9 DUP4 GT ISZERO PUSH3 0x40A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP3 DUP6 LT ISZERO PUSH3 0x433 JUMPI PUSH3 0x423 DUP6 PUSH3 0x350 JUMP JUMPDEST DUP5 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP3 DUP6 ADD SWAP3 PUSH3 0x40F JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x454 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x475 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x4C9 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x4A4 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x4C5 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x4B0 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x4EA JUMPI PUSH3 0x4EA PUSH3 0x33A JUMP JUMPDEST PUSH3 0x502 DUP2 PUSH3 0x4FB DUP5 SLOAD PUSH3 0x43F JUMP JUMPDEST DUP5 PUSH3 0x47B JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x53A JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x521 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x4C5 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x56B JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x54A JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x58A JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH3 0x5D1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0x189C DUP1 PUSH3 0x5E8 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xD5B271F5 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD5B271F5 EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2C3 JUMPI DUP1 PUSH4 0xE5A86833 EQ PUSH2 0x2FC JUMPI DUP1 PUSH4 0xEAA91A3D EQ PUSH2 0x30F JUMPI DUP1 PUSH4 0xFF9C8AC6 EQ PUSH2 0x322 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x262 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x27D JUMPI DUP1 PUSH4 0xCBD01FA4 EQ PUSH2 0x290 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B9 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1CC JUMPI DUP1 PUSH4 0x345F5557 EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x523FBA7F EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x6D069A67 EQ PUSH2 0x226 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x1371A957 EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0x1D978BD2 EQ PUSH2 0x1A4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x139 PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x1358 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x162 PUSH2 0x15D CALLDATASIZE PUSH1 0x4 PUSH2 0x13C2 JUMP JUMPDEST PUSH2 0x3C7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x146 JUMP JUMPDEST PUSH2 0x185 PUSH2 0x180 CALLDATASIZE PUSH1 0x4 PUSH2 0x13EC JUMP JUMPDEST PUSH2 0x3E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x1440 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x146 JUMP JUMPDEST PUSH2 0x1B7 PUSH2 0x1B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1530 JUMP JUMPDEST PUSH2 0x563 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x162 PUSH2 0x1C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x15F0 JUMP JUMPDEST PUSH2 0x863 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x146 JUMP JUMPDEST PUSH2 0x1EE PUSH2 0x1E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x13EC JUMP JUMPDEST PUSH2 0x887 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x146 JUMP JUMPDEST PUSH2 0x196 PUSH2 0x214 CALLDATASIZE PUSH1 0x4 PUSH2 0x162C JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1B7 PUSH2 0x234 CALLDATASIZE PUSH1 0x4 PUSH2 0x1647 JUMP JUMPDEST PUSH2 0x8B1 JUMP JUMPDEST PUSH2 0x196 PUSH2 0x247 CALLDATASIZE PUSH1 0x4 PUSH2 0x162C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x139 PUSH2 0xC31 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x278 CALLDATASIZE PUSH1 0x4 PUSH2 0x13C2 JUMP JUMPDEST PUSH2 0xC40 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x1EE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x196 PUSH2 0x29E CALLDATASIZE PUSH1 0x4 PUSH2 0x13EC JUMP JUMPDEST PUSH2 0xC4E JUMP JUMPDEST PUSH2 0x196 PUSH2 0x2B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x162C JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x196 PUSH2 0x2D1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1683 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1B7 PUSH2 0x30A CALLDATASIZE PUSH1 0x4 PUSH2 0x1530 JUMP JUMPDEST PUSH2 0xC6F JUMP JUMPDEST PUSH2 0x1EE PUSH2 0x31D CALLDATASIZE PUSH1 0x4 PUSH2 0x13EC JUMP JUMPDEST PUSH2 0xF78 JUMP JUMPDEST PUSH2 0x196 PUSH2 0x330 CALLDATASIZE PUSH1 0x4 PUSH2 0x1647 JUMP JUMPDEST PUSH2 0xF88 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x344 SWAP1 PUSH2 0x16B6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x370 SWAP1 PUSH2 0x16B6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3BD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x392 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3BD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3A0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x3D5 DUP2 DUP6 DUP6 PUSH2 0xFD8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x402 JUMPI PUSH2 0x402 PUSH2 0x145A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x42B JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 PUSH1 0xB PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0x448 JUMPI PUSH2 0x448 PUSH2 0x16F0 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD SWAP1 POP PUSH1 0x1 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x53B JUMPI PUSH1 0x0 PUSH1 0x7 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x48F JUMPI PUSH2 0x48F PUSH2 0x16F0 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 DUP4 MSTORE PUSH1 0xB SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD SWAP1 SWAP3 POP SWAP1 DUP2 DUP2 SUB PUSH2 0x4EE JUMPI PUSH1 0xA DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x4D1 JUMPI PUSH2 0x4D1 PUSH2 0x16F0 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP10 PUSH2 0x4E7 SWAP2 SWAP1 PUSH2 0x171C JUMP JUMPDEST SWAP1 POP PUSH2 0x506 JUMP JUMPDEST DUP2 PUSH2 0x4F9 DUP7 DUP12 PUSH2 0x171C JUMP JUMPDEST PUSH2 0x503 SWAP2 SWAP1 PUSH2 0x1733 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP1 DUP7 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x519 JUMPI PUSH2 0x519 PUSH2 0x16F0 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP POP POP POP DUP1 DUP1 PUSH2 0x533 SWAP1 PUSH2 0x1755 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x472 JUMP JUMPDEST POP DUP5 DUP3 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x550 JUMPI PUSH2 0x550 PUSH2 0x16F0 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x58D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x584 SWAP1 PUSH2 0x176E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x599 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST GT ISZERO PUSH2 0x61B JUMPI PUSH1 0xB PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0x5B7 JUMPI PUSH2 0x5B7 PUSH2 0x16F0 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD PUSH2 0x5E5 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST DUP4 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x5F8 JUMPI PUSH2 0x5F8 PUSH2 0x16F0 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x60A SWAP2 SWAP1 PUSH2 0x171C JUMP JUMPDEST PUSH2 0x614 SWAP2 SWAP1 PUSH2 0x1733 JUMP JUMPDEST SWAP1 POP PUSH2 0x639 JUMP JUMPDEST DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x62E JUMPI PUSH2 0x62E PUSH2 0x16F0 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x643 CALLER DUP3 PUSH2 0xFE5 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x823 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x664 JUMPI PUSH2 0x664 PUSH2 0x16F0 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x6AD JUMPI PUSH2 0x6AD PUSH2 0x16F0 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD CALLER ADDRESS DUP11 DUP9 DUP2 MLOAD DUP2 LT PUSH2 0x6F0 JUMPI PUSH2 0x6F0 PUSH2 0x16F0 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP7 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x74F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x773 SWAP2 SWAP1 PUSH2 0x17BE JUMP JUMPDEST PUSH2 0x7B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x151C985B9CD9995C881D1BDAD95B8C0819985A5B1959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x584 JUMP JUMPDEST DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x7CA JUMPI PUSH2 0x7CA PUSH2 0x16F0 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xB PUSH1 0x0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x806 SWAP2 SWAP1 PUSH2 0x17E0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 DUP1 PUSH2 0x81B SWAP1 PUSH2 0x1755 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x648 JUMP JUMPDEST POP PUSH32 0x7F63FC1AB7D4B22633CCA91CD87319F6E7B3229ACE7BAA90F114B15F33E847AE DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x855 SWAP3 SWAP2 SWAP1 PUSH2 0x17F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x871 DUP6 DUP3 DUP6 PUSH2 0x101B JUMP JUMPDEST PUSH2 0x87C DUP6 DUP6 DUP6 PUSH2 0x109A JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x897 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH2 0x8B9 PUSH2 0x10F9 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x908 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x53616D6520746F6B656E73 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x584 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x96F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x746F6B656E496E206E6F7420696E20695F746F6B656E735F6D61700000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x584 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x9D6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x746F6B656E4F7574206E6F7420696E20695F746F6B656E735F6D617000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x584 JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0xA14 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x16995C9BC8185B5BDD5B9D PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x584 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA21 DUP5 DUP5 DUP5 PUSH2 0xF88 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA77 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA9B SWAP2 SWAP1 PUSH2 0x17BE JUMP JUMPDEST PUSH2 0xAD5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x14DDD85C0811985A5B1959 PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x584 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB22 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB46 SWAP2 SWAP1 PUSH2 0x17BE JUMP JUMPDEST PUSH2 0xB80 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x14DDD85C0811985A5B1959 PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x584 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0xBA8 SWAP1 DUP5 SWAP1 PUSH2 0x1853 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xBD5 SWAP1 DUP5 SWAP1 PUSH2 0x17E0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE DUP3 SWAP2 DUP6 SWAP2 PUSH32 0xDB587D878116DF0BDD4FE154699AA2C5F439DA001CC811DFD05D9F589FC5A8EE SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH2 0xC2C PUSH1 0x1 PUSH1 0x5 SSTORE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x344 SWAP1 PUSH2 0x16B6 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x3D5 DUP2 DUP6 DUP6 PUSH2 0x109A JUMP JUMPDEST PUSH1 0xA DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xC5E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH2 0xC77 PUSH2 0x10F9 JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0xC98 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x584 SWAP1 PUSH2 0x176E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xCA4 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST GT ISZERO PUSH2 0xD26 JUMPI PUSH1 0xB PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0xCC2 JUMPI PUSH2 0xCC2 PUSH2 0x16F0 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD PUSH2 0xCF0 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST DUP4 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xD03 JUMPI PUSH2 0xD03 PUSH2 0x16F0 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0xD15 SWAP2 SWAP1 PUSH2 0x171C JUMP JUMPDEST PUSH2 0xD1F SWAP2 SWAP1 PUSH2 0x1733 JUMP JUMPDEST SWAP1 POP PUSH2 0xD44 JUMP JUMPDEST DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xD39 JUMPI PUSH2 0xD39 PUSH2 0x16F0 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0xD4E CALLER DUP3 PUSH2 0x1123 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xF2E JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xD6F JUMPI PUSH2 0xD6F PUSH2 0x16F0 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xDB8 JUMPI PUSH2 0xDB8 PUSH2 0x16F0 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD CALLER ADDRESS DUP11 DUP9 DUP2 MLOAD DUP2 LT PUSH2 0xDFB JUMPI PUSH2 0xDFB PUSH2 0x16F0 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP7 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE5A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE7E SWAP2 SWAP1 PUSH2 0x17BE JUMP JUMPDEST PUSH2 0xEC3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x151C985B9CD9995C881D1BDAD95B8C0819985A5B1959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x584 JUMP JUMPDEST DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xED5 JUMPI PUSH2 0xED5 PUSH2 0x16F0 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xB PUSH1 0x0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xF11 SWAP2 SWAP1 PUSH2 0x1853 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 DUP1 PUSH2 0xF26 SWAP1 PUSH2 0x1755 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xD53 JUMP JUMPDEST POP PUSH32 0xB1B40D6E24DB4F4144D860844C12EF0CEE735402334D5E8682124A4C03BCE4C7 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0xF60 SWAP3 SWAP2 SWAP1 PUSH2 0x17F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP PUSH2 0xF74 PUSH1 0x1 PUSH1 0x5 SSTORE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x7 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x897 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD SWAP3 DUP7 AND DUP3 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP3 PUSH2 0xFB9 DUP7 DUP4 PUSH2 0x1853 JUMP JUMPDEST PUSH2 0xFC3 DUP8 DUP6 PUSH2 0x171C JUMP JUMPDEST PUSH2 0xFCD SWAP2 SWAP1 PUSH2 0x1733 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xC2C DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1159 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x100F JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x584 JUMP JUMPDEST PUSH2 0xF74 DUP3 PUSH1 0x0 DUP4 PUSH2 0x122E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 LT ISZERO PUSH2 0x1094 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1085 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x584 JUMP JUMPDEST PUSH2 0x1094 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x1159 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x10C4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x584 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x10EE JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x584 JUMP JUMPDEST PUSH2 0xC2C DUP4 DUP4 DUP4 PUSH2 0x122E JUMP JUMPDEST PUSH1 0x2 PUSH1 0x5 SLOAD SUB PUSH2 0x111C JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x114D JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x584 JUMP JUMPDEST PUSH2 0xF74 PUSH1 0x0 DUP4 DUP4 PUSH2 0x122E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1183 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x584 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x11AD JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x584 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x1094 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1220 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1259 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x124E SWAP2 SWAP1 PUSH2 0x1853 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x12CB SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x12AC JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x584 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x12E7 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x1306 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x134B SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1385 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x1369 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x13BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13DE DUP4 PUSH2 0x13A6 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1435 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1419 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1453 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1405 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1499 JUMPI PUSH2 0x1499 PUSH2 0x145A JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x14BB JUMPI PUSH2 0x14BB PUSH2 0x145A JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x14D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x14EB PUSH2 0x14E6 DUP4 PUSH2 0x14A1 JUMP JUMPDEST PUSH2 0x1470 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x150A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x1525 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x150E JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1543 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x155B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x156F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x157F PUSH2 0x14E6 DUP4 PUSH2 0x14A1 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP10 DUP5 GT ISZERO PUSH2 0x159E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x15C3 JUMPI PUSH2 0x15B4 DUP7 PUSH2 0x13A6 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0x15A3 JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x15D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15E6 DUP6 DUP3 DUP7 ADD PUSH2 0x14C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1605 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x160E DUP5 PUSH2 0x13A6 JUMP JUMPDEST SWAP3 POP PUSH2 0x161C PUSH1 0x20 DUP6 ADD PUSH2 0x13A6 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x163E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1453 DUP3 PUSH2 0x13A6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x165C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1665 DUP5 PUSH2 0x13A6 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH2 0x167A PUSH1 0x40 DUP6 ADD PUSH2 0x13A6 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1696 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x169F DUP4 PUSH2 0x13A6 JUMP JUMPDEST SWAP2 POP PUSH2 0x16AD PUSH1 0x20 DUP5 ADD PUSH2 0x13A6 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x16CA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x16EA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x3DB JUMPI PUSH2 0x3DB PUSH2 0x1706 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1750 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1767 JUMPI PUSH2 0x1767 PUSH2 0x1706 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x30 SWAP1 DUP3 ADD MSTORE PUSH32 0x746865206C656E73206F6620616D6F756E7420616E6420746F6B656E5F616464 PUSH1 0x40 DUP3 ADD MSTORE PUSH16 0x81CDA1BDD5B1908189948195C5D585B PUSH1 0x82 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1453 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x3DB JUMPI PUSH2 0x3DB PUSH2 0x1706 JUMP JUMPDEST PUSH1 0x40 DUP1 DUP3 MSTORE DUP4 MLOAD SWAP1 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x20 SWAP1 PUSH1 0x60 DUP5 ADD SWAP1 DUP3 DUP8 ADD DUP5 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1835 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1810 JUMP JUMPDEST POP POP POP DUP4 DUP2 SUB DUP3 DUP6 ADD MSTORE PUSH2 0x1849 DUP2 DUP7 PUSH2 0x1405 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x3DB JUMPI PUSH2 0x3DB PUSH2 0x1706 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 0xED PUSH27 0x53E7A7FCFDC1042D914BBABABD5040A014F69D4FB7894BCE403D5C SWAP1 0x4C PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"1122:42:14:-:0;463:8248;1122:42;1157:1;463:8248;1122:42;;;1160:1;1122:42;;1162:1;1122:42;;;;;;;;;:::i;:::-;;1956:650;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;370:76:12;;;;;;;;;;;;;-1:-1:-1;;;370:76:12;;;;;;;;;;;;;;;;-1:-1:-1;;;370:76:12;;;430:4;436:6;1675:5:1;1667;:13;;;;;;:::i;:::-;-1:-1:-1;1690:7:1;:17;1700:7;1690;:17;:::i;:::-;-1:-1:-1;;1857:1:6;2061:7;:21;-1:-1:-1;;2034:7:14::1;:20:::0;;-1:-1:-1;;;;;;2034:20:14::1;2044:10;2034:20;::::0;;-1:-1:-1;2125:17:14;;;-1:-1:-1;;;;;2164:20:14;::::1;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;2164:20:14::1;-1:-1:-1::0;2153:31:14;;::::1;::::0;:8:::1;::::0;:31:::1;::::0;;::::1;::::0;::::1;:::i;:::-;;2230:6;-1:-1:-1::0;;;;;2216:21:14::1;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;2216:21:14::1;-1:-1:-1::0;2195:42:14;;::::1;::::0;:18:::1;::::0;:42:::1;::::0;;::::1;::::0;::::1;:::i;:::-;;2255:9;2250:349;2274:6;2270:1;:10;2250:349;;;2316:17;2336:10;2347:1;2336:13;;;;;;;;:::i;:::-;;;;;;;2316:33;;2441:9;2419:8;2428:1;2419:11;;;;;;;;:::i;:::-;;;;;;;;;:33;;;;;-1:-1:-1::0;;;;;2419:33:14::1;;;;;-1:-1:-1::0;;;;;2419:33:14::1;;;;;;2492:9;2467:18;2486:1;2467:21;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;;;::::1;:35:::0;;-1:-1:-1;;;;;;2467:35:14::1;-1:-1:-1::0;;;;;2467:35:14;;::::1;;::::0;;2517:23;;;::::1;::::0;;:12:::1;:23:::0;;;;;;:27;;;2559:13:::1;:24:::0;;;;;;:28;2517:27;2282:3:::1;2517:27:::0;2282:3:::1;:::i;:::-;;;;2250:349;;;;2023:583;1956:650:::0;463:8248;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;463:8248:14;;;-1:-1:-1;463:8248:14;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;463:8248:14;-1:-1:-1;;;;;463:8248:14;;;;;;;;;;;-1:-1:-1;463:8248:14;;;;;;;;;;;;;;;;;;;;;14:127:16;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:177;225:13;;-1:-1:-1;;;;;267:31:16;;257:42;;247:70;;313:1;310;303:12;247:70;146:177;;;:::o;328:1129::-;423:6;454:2;497;485:9;476:7;472:23;468:32;465:52;;;513:1;510;503:12;465:52;540:16;;-1:-1:-1;;;;;605:14:16;;;602:34;;;632:1;629;622:12;602:34;670:6;659:9;655:22;645:32;;715:7;708:4;704:2;700:13;696:27;686:55;;737:1;734;727:12;686:55;766:2;760:9;788:2;784;781:10;778:36;;;794:18;;:::i;:::-;840:2;837:1;833:10;872:2;866:9;935:2;931:7;926:2;922;918:11;914:25;906:6;902:38;990:6;978:10;975:22;970:2;958:10;955:18;952:46;949:72;;;1001:18;;:::i;:::-;1037:2;1030:22;1087:18;;;1121:15;;;;-1:-1:-1;1163:11:16;;;1159:20;;;1191:19;;;1188:39;;;1223:1;1220;1213:12;1188:39;1247:11;;;;1267:159;1283:6;1278:3;1275:15;1267:159;;;1349:34;1379:3;1349:34;:::i;:::-;1337:47;;1300:12;;;;1404;;;;1267:159;;;1445:6;328:1129;-1:-1:-1;;;;;;;;328:1129:16:o;1462:380::-;1541:1;1537:12;;;;1584;;;1605:61;;1659:4;1651:6;1647:17;1637:27;;1605:61;1712:2;1704:6;1701:14;1681:18;1678:38;1675:161;;1758:10;1753:3;1749:20;1746:1;1739:31;1793:4;1790:1;1783:15;1821:4;1818:1;1811:15;1675:161;;1462:380;;;:::o;1973:545::-;2075:2;2070:3;2067:11;2064:448;;;2111:1;2136:5;2132:2;2125:17;2181:4;2177:2;2167:19;2251:2;2239:10;2235:19;2232:1;2228:27;2222:4;2218:38;2287:4;2275:10;2272:20;2269:47;;;-1:-1:-1;2310:4:16;2269:47;2365:2;2360:3;2356:12;2353:1;2349:20;2343:4;2339:31;2329:41;;2420:82;2438:2;2431:5;2428:13;2420:82;;;2483:17;;;2464:1;2453:13;2420:82;;;2424:3;;;2064:448;1973:545;;;:::o;2694:1352::-;2814:10;;-1:-1:-1;;;;;2836:30:16;;2833:56;;;2869:18;;:::i;:::-;2898:97;2988:6;2948:38;2980:4;2974:11;2948:38;:::i;:::-;2942:4;2898:97;:::i;:::-;3050:4;;3114:2;3103:14;;3131:1;3126:663;;;;3833:1;3850:6;3847:89;;;-1:-1:-1;3902:19:16;;;3896:26;3847:89;-1:-1:-1;;2651:1:16;2647:11;;;2643:24;2639:29;2629:40;2675:1;2671:11;;;2626:57;3949:81;;3096:944;;3126:663;1920:1;1913:14;;;1957:4;1944:18;;-1:-1:-1;;3162:20:16;;;3280:236;3294:7;3291:1;3288:14;3280:236;;;3383:19;;;3377:26;3362:42;;3475:27;;;;3443:1;3431:14;;;;3310:19;;3280:236;;;3284:3;3544:6;3535:7;3532:19;3529:201;;;3605:19;;;3599:26;-1:-1:-1;;3688:1:16;3684:14;;;3700:3;3680:24;3676:37;3672:42;3657:58;3642:74;;3529:201;-1:-1:-1;;;;;3776:1:16;3760:14;;;3756:22;3743:36;;-1:-1:-1;2694:1352:16:o;4051:127::-;4112:10;4107:3;4103:20;4100:1;4093:31;4143:4;4140:1;4133:15;4167:4;4164:1;4157:15;4183:232;4222:3;4243:17;;;4240:140;;4302:10;4297:3;4293:20;4290:1;4283:31;4337:4;4334:1;4327:15;4365:4;4362:1;4355:15;4240:140;-1:-1:-1;4407:1:16;4396:13;;4183:232::o;:::-;463:8248:14;;;;;;"},"deployedBytecode":{"functionDebugData":{"@INITIAL_RATIO_6127":{"entryPoint":3150,"id":6127,"parameterSlots":0,"returnSlots":0},"@_approve_542":{"entryPoint":4056,"id":542,"parameterSlots":3,"returnSlots":0},"@_approve_602":{"entryPoint":4441,"id":602,"parameterSlots":4,"returnSlots":0},"@_burn_524":{"entryPoint":4069,"id":524,"parameterSlots":2,"returnSlots":0},"@_mint_491":{"entryPoint":4387,"id":491,"parameterSlots":2,"returnSlots":0},"@_msgSender_767":{"entryPoint":null,"id":767,"parameterSlots":0,"returnSlots":1},"@_nonReentrantAfter_894":{"entryPoint":null,"id":894,"parameterSlots":0,"returnSlots":0},"@_nonReentrantBefore_886":{"entryPoint":4345,"id":886,"parameterSlots":0,"returnSlots":0},"@_spendAllowance_650":{"entryPoint":4123,"id":650,"parameterSlots":3,"returnSlots":0},"@_transfer_381":{"entryPoint":4250,"id":381,"parameterSlots":3,"returnSlots":0},"@_update_458":{"entryPoint":4654,"id":458,"parameterSlots":3,"returnSlots":0},"@addLiquidity_6599":{"entryPoint":3183,"id":6599,"parameterSlots":2,"returnSlots":0},"@allowance_278":{"entryPoint":null,"id":278,"parameterSlots":2,"returnSlots":1},"@approve_302":{"entryPoint":967,"id":302,"parameterSlots":2,"returnSlots":1},"@balanceOf_237":{"entryPoint":null,"id":237,"parameterSlots":1,"returnSlots":1},"@decimals_215":{"entryPoint":null,"id":215,"parameterSlots":0,"returnSlots":1},"@factory_6120":{"entryPoint":null,"id":6120,"parameterSlots":0,"returnSlots":0},"@getAmountOut_6279":{"entryPoint":3976,"id":6279,"parameterSlots":3,"returnSlots":1},"@getRequiredAmounts_6475":{"entryPoint":993,"id":6475,"parameterSlots":1,"returnSlots":1},"@i_tokens_6111":{"entryPoint":2183,"id":6111,"parameterSlots":0,"returnSlots":0},"@i_tokens_addresses_6114":{"entryPoint":3960,"id":6114,"parameterSlots":0,"returnSlots":0},"@i_tokens_map_6118":{"entryPoint":null,"id":6118,"parameterSlots":0,"returnSlots":0},"@name_197":{"entryPoint":821,"id":197,"parameterSlots":0,"returnSlots":1},"@swap_6378":{"entryPoint":2225,"id":6378,"parameterSlots":3,"returnSlots":0},"@symbol_206":{"entryPoint":3121,"id":206,"parameterSlots":0,"returnSlots":1},"@tokenBalances_6131":{"entryPoint":null,"id":6131,"parameterSlots":0,"returnSlots":0},"@totalSupply_224":{"entryPoint":null,"id":224,"parameterSlots":0,"returnSlots":1},"@transferFrom_334":{"entryPoint":2147,"id":334,"parameterSlots":3,"returnSlots":1},"@transfer_261":{"entryPoint":3136,"id":261,"parameterSlots":2,"returnSlots":1},"@withdrawingliquidity_6721":{"entryPoint":1379,"id":6721,"parameterSlots":2,"returnSlots":0},"abi_decode_address":{"entryPoint":5030,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_array_uint256_dyn":{"entryPoint":5317,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":5676,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":5763,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":5616,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":5058,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256t_address":{"entryPoint":5703,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":5424,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":6078,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":5100,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_uint256_dyn":{"entryPoint":5125,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":6131,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":5184,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IERC20_$729__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4952,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_027a4645d52999467d532b08294cf4ab88552e8e8054f1574513efbdd121a3e3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3dcfaa7b26cd9b2e7d0bcb018b106caeaeb81724fcb90f6955e6b49805c7b7c1__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_499f3f4b0ad3588aa1eb6e198be77bff643a4218ffbf2bef1370e58aadea5df4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_56a242703b1539558b0d109cfcb28b8a34a30bc5a66436384a025ef1b35eb3dd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_80501303dea0e00b4f0fdd2002f8e97e93d67534e40aed39444d7f3d32212699__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a33b7e37ceeda7c914335f861b2f9f6b02bcf2d319b05a9ff35d5b6ba6af4bfb__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5998,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c26370c748e399efe4c5a302d20f1fe22da5300fc60bdab39924790733506945__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":5232,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_array_address_dyn":{"entryPoint":5281,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":6227,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":5939,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":5916,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":6112,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":5814,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":5973,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":5894,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":5872,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":5210,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:12810:16","statements":[{"nodeType":"YulBlock","src":"6:3:16","statements":[]},{"body":{"nodeType":"YulBlock","src":"135:427:16","statements":[{"nodeType":"YulVariableDeclaration","src":"145:12:16","value":{"kind":"number","nodeType":"YulLiteral","src":"155:2:16","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"149:2:16","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"173:9:16"},{"name":"_1","nodeType":"YulIdentifier","src":"184:2:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"166:6:16"},"nodeType":"YulFunctionCall","src":"166:21:16"},"nodeType":"YulExpressionStatement","src":"166:21:16"},{"nodeType":"YulVariableDeclaration","src":"196:27:16","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"216:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"210:5:16"},"nodeType":"YulFunctionCall","src":"210:13:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"200:6:16","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"243:9:16"},{"name":"_1","nodeType":"YulIdentifier","src":"254:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"239:3:16"},"nodeType":"YulFunctionCall","src":"239:18:16"},{"name":"length","nodeType":"YulIdentifier","src":"259:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"232:6:16"},"nodeType":"YulFunctionCall","src":"232:34:16"},"nodeType":"YulExpressionStatement","src":"232:34:16"},{"nodeType":"YulVariableDeclaration","src":"275:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"284:1:16","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"279:1:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"344:90:16","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"373:9:16"},{"name":"i","nodeType":"YulIdentifier","src":"384:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"369:3:16"},"nodeType":"YulFunctionCall","src":"369:17:16"},{"kind":"number","nodeType":"YulLiteral","src":"388:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"365:3:16"},"nodeType":"YulFunctionCall","src":"365:26:16"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"407:6:16"},{"name":"i","nodeType":"YulIdentifier","src":"415:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"403:3:16"},"nodeType":"YulFunctionCall","src":"403:14:16"},{"name":"_1","nodeType":"YulIdentifier","src":"419:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"399:3:16"},"nodeType":"YulFunctionCall","src":"399:23:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"393:5:16"},"nodeType":"YulFunctionCall","src":"393:30:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"358:6:16"},"nodeType":"YulFunctionCall","src":"358:66:16"},"nodeType":"YulExpressionStatement","src":"358:66:16"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"305:1:16"},{"name":"length","nodeType":"YulIdentifier","src":"308:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"302:2:16"},"nodeType":"YulFunctionCall","src":"302:13:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"316:19:16","statements":[{"nodeType":"YulAssignment","src":"318:15:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"327:1:16"},{"name":"_1","nodeType":"YulIdentifier","src":"330:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"323:3:16"},"nodeType":"YulFunctionCall","src":"323:10:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"318:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"298:3:16","statements":[]},"src":"294:140:16"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"458:9:16"},{"name":"length","nodeType":"YulIdentifier","src":"469:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"454:3:16"},"nodeType":"YulFunctionCall","src":"454:22:16"},{"kind":"number","nodeType":"YulLiteral","src":"478:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"450:3:16"},"nodeType":"YulFunctionCall","src":"450:31:16"},{"kind":"number","nodeType":"YulLiteral","src":"483:1:16","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"443:6:16"},"nodeType":"YulFunctionCall","src":"443:42:16"},"nodeType":"YulExpressionStatement","src":"443:42:16"},{"nodeType":"YulAssignment","src":"494:62:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"510:9:16"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"529:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"537:2:16","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"525:3:16"},"nodeType":"YulFunctionCall","src":"525:15:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"546:2:16","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"542:3:16"},"nodeType":"YulFunctionCall","src":"542:7:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"521:3:16"},"nodeType":"YulFunctionCall","src":"521:29:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"506:3:16"},"nodeType":"YulFunctionCall","src":"506:45:16"},{"kind":"number","nodeType":"YulLiteral","src":"553:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"502:3:16"},"nodeType":"YulFunctionCall","src":"502:54:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"494:4:16"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"104:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"115:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"126:4:16","type":""}],"src":"14:548:16"},{"body":{"nodeType":"YulBlock","src":"616:124:16","statements":[{"nodeType":"YulAssignment","src":"626:29:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"648:6:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"635:12:16"},"nodeType":"YulFunctionCall","src":"635:20:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"626:5:16"}]},{"body":{"nodeType":"YulBlock","src":"718:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"727:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"730:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"720:6:16"},"nodeType":"YulFunctionCall","src":"720:12:16"},"nodeType":"YulExpressionStatement","src":"720:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"677:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"688:5:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"703:3:16","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"708:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"699:3:16"},"nodeType":"YulFunctionCall","src":"699:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"712:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"695:3:16"},"nodeType":"YulFunctionCall","src":"695:19:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"684:3:16"},"nodeType":"YulFunctionCall","src":"684:31:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"674:2:16"},"nodeType":"YulFunctionCall","src":"674:42:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"667:6:16"},"nodeType":"YulFunctionCall","src":"667:50:16"},"nodeType":"YulIf","src":"664:70:16"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"595:6:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"606:5:16","type":""}],"src":"567:173:16"},{"body":{"nodeType":"YulBlock","src":"832:167:16","statements":[{"body":{"nodeType":"YulBlock","src":"878:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"887:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"890:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"880:6:16"},"nodeType":"YulFunctionCall","src":"880:12:16"},"nodeType":"YulExpressionStatement","src":"880:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"853:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"862:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"849:3:16"},"nodeType":"YulFunctionCall","src":"849:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"874:2:16","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"845:3:16"},"nodeType":"YulFunctionCall","src":"845:32:16"},"nodeType":"YulIf","src":"842:52:16"},{"nodeType":"YulAssignment","src":"903:39:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"932:9:16"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"913:18:16"},"nodeType":"YulFunctionCall","src":"913:29:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"903:6:16"}]},{"nodeType":"YulAssignment","src":"951:42:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"978:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"989:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"974:3:16"},"nodeType":"YulFunctionCall","src":"974:18:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"961:12:16"},"nodeType":"YulFunctionCall","src":"961:32:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"951:6:16"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"790:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"801:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"813:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"821:6:16","type":""}],"src":"745:254:16"},{"body":{"nodeType":"YulBlock","src":"1099:92:16","statements":[{"nodeType":"YulAssignment","src":"1109:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1121:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1132:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1117:3:16"},"nodeType":"YulFunctionCall","src":"1117:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1109:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1151:9:16"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1176:6:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1169:6:16"},"nodeType":"YulFunctionCall","src":"1169:14:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1162:6:16"},"nodeType":"YulFunctionCall","src":"1162:22:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1144:6:16"},"nodeType":"YulFunctionCall","src":"1144:41:16"},"nodeType":"YulExpressionStatement","src":"1144:41:16"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1068:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1079:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1090:4:16","type":""}],"src":"1004:187:16"},{"body":{"nodeType":"YulBlock","src":"1266:110:16","statements":[{"body":{"nodeType":"YulBlock","src":"1312:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1321:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1324:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1314:6:16"},"nodeType":"YulFunctionCall","src":"1314:12:16"},"nodeType":"YulExpressionStatement","src":"1314:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1287:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"1296:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1283:3:16"},"nodeType":"YulFunctionCall","src":"1283:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"1308:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1279:3:16"},"nodeType":"YulFunctionCall","src":"1279:32:16"},"nodeType":"YulIf","src":"1276:52:16"},{"nodeType":"YulAssignment","src":"1337:33:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1360:9:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1347:12:16"},"nodeType":"YulFunctionCall","src":"1347:23:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1337:6:16"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1232:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1243:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1255:6:16","type":""}],"src":"1196:180:16"},{"body":{"nodeType":"YulBlock","src":"1442:374:16","statements":[{"nodeType":"YulVariableDeclaration","src":"1452:26:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1472:5:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1466:5:16"},"nodeType":"YulFunctionCall","src":"1466:12:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1456:6:16","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1494:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"1499:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1487:6:16"},"nodeType":"YulFunctionCall","src":"1487:19:16"},"nodeType":"YulExpressionStatement","src":"1487:19:16"},{"nodeType":"YulVariableDeclaration","src":"1515:14:16","value":{"kind":"number","nodeType":"YulLiteral","src":"1525:4:16","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1519:2:16","type":""}]},{"nodeType":"YulAssignment","src":"1538:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1549:3:16"},{"name":"_1","nodeType":"YulIdentifier","src":"1554:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1545:3:16"},"nodeType":"YulFunctionCall","src":"1545:12:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"1538:3:16"}]},{"nodeType":"YulVariableDeclaration","src":"1566:28:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1584:5:16"},{"name":"_1","nodeType":"YulIdentifier","src":"1591:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1580:3:16"},"nodeType":"YulFunctionCall","src":"1580:14:16"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"1570:6:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1603:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"1612:1:16","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1607:1:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"1671:120:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1692:3:16"},{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"1703:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1697:5:16"},"nodeType":"YulFunctionCall","src":"1697:13:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1685:6:16"},"nodeType":"YulFunctionCall","src":"1685:26:16"},"nodeType":"YulExpressionStatement","src":"1685:26:16"},{"nodeType":"YulAssignment","src":"1724:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1735:3:16"},{"name":"_1","nodeType":"YulIdentifier","src":"1740:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1731:3:16"},"nodeType":"YulFunctionCall","src":"1731:12:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"1724:3:16"}]},{"nodeType":"YulAssignment","src":"1756:25:16","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"1770:6:16"},{"name":"_1","nodeType":"YulIdentifier","src":"1778:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1766:3:16"},"nodeType":"YulFunctionCall","src":"1766:15:16"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"1756:6:16"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1633:1:16"},{"name":"length","nodeType":"YulIdentifier","src":"1636:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1630:2:16"},"nodeType":"YulFunctionCall","src":"1630:13:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1644:18:16","statements":[{"nodeType":"YulAssignment","src":"1646:14:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1655:1:16"},{"kind":"number","nodeType":"YulLiteral","src":"1658:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1651:3:16"},"nodeType":"YulFunctionCall","src":"1651:9:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1646:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"1626:3:16","statements":[]},"src":"1622:169:16"},{"nodeType":"YulAssignment","src":"1800:10:16","value":{"name":"pos","nodeType":"YulIdentifier","src":"1807:3:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1800:3:16"}]}]},"name":"abi_encode_array_uint256_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1419:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1426:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"1434:3:16","type":""}],"src":"1381:435:16"},{"body":{"nodeType":"YulBlock","src":"1972:110:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1989:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2000:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1982:6:16"},"nodeType":"YulFunctionCall","src":"1982:21:16"},"nodeType":"YulExpressionStatement","src":"1982:21:16"},{"nodeType":"YulAssignment","src":"2012:64:16","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2049:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2061:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2072:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2057:3:16"},"nodeType":"YulFunctionCall","src":"2057:18:16"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"2020:28:16"},"nodeType":"YulFunctionCall","src":"2020:56:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2012:4:16"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1941:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1952:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1963:4:16","type":""}],"src":"1821:261:16"},{"body":{"nodeType":"YulBlock","src":"2188:76:16","statements":[{"nodeType":"YulAssignment","src":"2198:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2210:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2221:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2206:3:16"},"nodeType":"YulFunctionCall","src":"2206:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2198:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2240:9:16"},{"name":"value0","nodeType":"YulIdentifier","src":"2251:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2233:6:16"},"nodeType":"YulFunctionCall","src":"2233:25:16"},"nodeType":"YulExpressionStatement","src":"2233:25:16"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2157:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2168:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2179:4:16","type":""}],"src":"2087:177:16"},{"body":{"nodeType":"YulBlock","src":"2301:95:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2318:1:16","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2325:3:16","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2330:10:16","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2321:3:16"},"nodeType":"YulFunctionCall","src":"2321:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2311:6:16"},"nodeType":"YulFunctionCall","src":"2311:31:16"},"nodeType":"YulExpressionStatement","src":"2311:31:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2358:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2361:4:16","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2351:6:16"},"nodeType":"YulFunctionCall","src":"2351:15:16"},"nodeType":"YulExpressionStatement","src":"2351:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2382:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2385:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2375:6:16"},"nodeType":"YulFunctionCall","src":"2375:15:16"},"nodeType":"YulExpressionStatement","src":"2375:15:16"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"2269:127:16"},{"body":{"nodeType":"YulBlock","src":"2446:230:16","statements":[{"nodeType":"YulAssignment","src":"2456:19:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2472:2:16","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2466:5:16"},"nodeType":"YulFunctionCall","src":"2466:9:16"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2456:6:16"}]},{"nodeType":"YulVariableDeclaration","src":"2484:58:16","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2506:6:16"},{"arguments":[{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"2522:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"2528:2:16","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2518:3:16"},"nodeType":"YulFunctionCall","src":"2518:13:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2537:2:16","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2533:3:16"},"nodeType":"YulFunctionCall","src":"2533:7:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2514:3:16"},"nodeType":"YulFunctionCall","src":"2514:27:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2502:3:16"},"nodeType":"YulFunctionCall","src":"2502:40:16"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"2488:10:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"2617:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2619:16:16"},"nodeType":"YulFunctionCall","src":"2619:18:16"},"nodeType":"YulExpressionStatement","src":"2619:18:16"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2560:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"2572:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2557:2:16"},"nodeType":"YulFunctionCall","src":"2557:34:16"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2596:10:16"},{"name":"memPtr","nodeType":"YulIdentifier","src":"2608:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2593:2:16"},"nodeType":"YulFunctionCall","src":"2593:22:16"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2554:2:16"},"nodeType":"YulFunctionCall","src":"2554:62:16"},"nodeType":"YulIf","src":"2551:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2655:2:16","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2659:10:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2648:6:16"},"nodeType":"YulFunctionCall","src":"2648:22:16"},"nodeType":"YulExpressionStatement","src":"2648:22:16"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"2426:4:16","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"2435:6:16","type":""}],"src":"2401:275:16"},{"body":{"nodeType":"YulBlock","src":"2750:114:16","statements":[{"body":{"nodeType":"YulBlock","src":"2794:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2796:16:16"},"nodeType":"YulFunctionCall","src":"2796:18:16"},"nodeType":"YulExpressionStatement","src":"2796:18:16"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2766:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"2774:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2763:2:16"},"nodeType":"YulFunctionCall","src":"2763:30:16"},"nodeType":"YulIf","src":"2760:56:16"},{"nodeType":"YulAssignment","src":"2825:33:16","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2841:1:16","type":"","value":"5"},{"name":"length","nodeType":"YulIdentifier","src":"2844:6:16"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2837:3:16"},"nodeType":"YulFunctionCall","src":"2837:14:16"},{"kind":"number","nodeType":"YulLiteral","src":"2853:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2833:3:16"},"nodeType":"YulFunctionCall","src":"2833:25:16"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"2825:4:16"}]}]},"name":"array_allocation_size_array_address_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"2730:6:16","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"2741:4:16","type":""}],"src":"2681:183:16"},{"body":{"nodeType":"YulBlock","src":"2933:598:16","statements":[{"body":{"nodeType":"YulBlock","src":"2982:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2991:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2994:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2984:6:16"},"nodeType":"YulFunctionCall","src":"2984:12:16"},"nodeType":"YulExpressionStatement","src":"2984:12:16"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2961:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"2969:4:16","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2957:3:16"},"nodeType":"YulFunctionCall","src":"2957:17:16"},{"name":"end","nodeType":"YulIdentifier","src":"2976:3:16"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2953:3:16"},"nodeType":"YulFunctionCall","src":"2953:27:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2946:6:16"},"nodeType":"YulFunctionCall","src":"2946:35:16"},"nodeType":"YulIf","src":"2943:55:16"},{"nodeType":"YulVariableDeclaration","src":"3007:30:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3030:6:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3017:12:16"},"nodeType":"YulFunctionCall","src":"3017:20:16"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3011:2:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3046:14:16","value":{"kind":"number","nodeType":"YulLiteral","src":"3056:4:16","type":"","value":"0x20"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"3050:2:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3069:71:16","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"3136:2:16"}],"functionName":{"name":"array_allocation_size_array_address_dyn","nodeType":"YulIdentifier","src":"3096:39:16"},"nodeType":"YulFunctionCall","src":"3096:43:16"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"3080:15:16"},"nodeType":"YulFunctionCall","src":"3080:60:16"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"3073:3:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3149:16:16","value":{"name":"dst","nodeType":"YulIdentifier","src":"3162:3:16"},"variables":[{"name":"dst_1","nodeType":"YulTypedName","src":"3153:5:16","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3181:3:16"},{"name":"_1","nodeType":"YulIdentifier","src":"3186:2:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3174:6:16"},"nodeType":"YulFunctionCall","src":"3174:15:16"},"nodeType":"YulExpressionStatement","src":"3174:15:16"},{"nodeType":"YulAssignment","src":"3198:19:16","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3209:3:16"},{"name":"_2","nodeType":"YulIdentifier","src":"3214:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3205:3:16"},"nodeType":"YulFunctionCall","src":"3205:12:16"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"3198:3:16"}]},{"nodeType":"YulVariableDeclaration","src":"3226:46:16","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3248:6:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3260:1:16","type":"","value":"5"},{"name":"_1","nodeType":"YulIdentifier","src":"3263:2:16"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3256:3:16"},"nodeType":"YulFunctionCall","src":"3256:10:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3244:3:16"},"nodeType":"YulFunctionCall","src":"3244:23:16"},{"name":"_2","nodeType":"YulIdentifier","src":"3269:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3240:3:16"},"nodeType":"YulFunctionCall","src":"3240:32:16"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"3230:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"3300:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3309:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3312:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3302:6:16"},"nodeType":"YulFunctionCall","src":"3302:12:16"},"nodeType":"YulExpressionStatement","src":"3302:12:16"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"3287:6:16"},{"name":"end","nodeType":"YulIdentifier","src":"3295:3:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3284:2:16"},"nodeType":"YulFunctionCall","src":"3284:15:16"},"nodeType":"YulIf","src":"3281:35:16"},{"nodeType":"YulVariableDeclaration","src":"3325:26:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3340:6:16"},{"name":"_2","nodeType":"YulIdentifier","src":"3348:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3336:3:16"},"nodeType":"YulFunctionCall","src":"3336:15:16"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"3329:3:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"3416:86:16","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3437:3:16"},{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3455:3:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3442:12:16"},"nodeType":"YulFunctionCall","src":"3442:17:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3430:6:16"},"nodeType":"YulFunctionCall","src":"3430:30:16"},"nodeType":"YulExpressionStatement","src":"3430:30:16"},{"nodeType":"YulAssignment","src":"3473:19:16","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3484:3:16"},{"name":"_2","nodeType":"YulIdentifier","src":"3489:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3480:3:16"},"nodeType":"YulFunctionCall","src":"3480:12:16"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"3473:3:16"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3371:3:16"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"3376:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3368:2:16"},"nodeType":"YulFunctionCall","src":"3368:15:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3384:23:16","statements":[{"nodeType":"YulAssignment","src":"3386:19:16","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3397:3:16"},{"name":"_2","nodeType":"YulIdentifier","src":"3402:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3393:3:16"},"nodeType":"YulFunctionCall","src":"3393:12:16"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"3386:3:16"}]}]},"pre":{"nodeType":"YulBlock","src":"3364:3:16","statements":[]},"src":"3360:142:16"},{"nodeType":"YulAssignment","src":"3511:14:16","value":{"name":"dst_1","nodeType":"YulIdentifier","src":"3520:5:16"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"3511:5:16"}]}]},"name":"abi_decode_array_uint256_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2907:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"2915:3:16","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2923:5:16","type":""}],"src":"2869:662:16"},{"body":{"nodeType":"YulBlock","src":"3673:1009:16","statements":[{"body":{"nodeType":"YulBlock","src":"3719:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3728:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3731:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3721:6:16"},"nodeType":"YulFunctionCall","src":"3721:12:16"},"nodeType":"YulExpressionStatement","src":"3721:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3694:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"3703:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3690:3:16"},"nodeType":"YulFunctionCall","src":"3690:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"3715:2:16","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3686:3:16"},"nodeType":"YulFunctionCall","src":"3686:32:16"},"nodeType":"YulIf","src":"3683:52:16"},{"nodeType":"YulVariableDeclaration","src":"3744:37:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3771:9:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3758:12:16"},"nodeType":"YulFunctionCall","src":"3758:23:16"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3748:6:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3790:28:16","value":{"kind":"number","nodeType":"YulLiteral","src":"3800:18:16","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3794:2:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"3845:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3854:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3857:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3847:6:16"},"nodeType":"YulFunctionCall","src":"3847:12:16"},"nodeType":"YulExpressionStatement","src":"3847:12:16"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3833:6:16"},{"name":"_1","nodeType":"YulIdentifier","src":"3841:2:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3830:2:16"},"nodeType":"YulFunctionCall","src":"3830:14:16"},"nodeType":"YulIf","src":"3827:34:16"},{"nodeType":"YulVariableDeclaration","src":"3870:32:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3884:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"3895:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3880:3:16"},"nodeType":"YulFunctionCall","src":"3880:22:16"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"3874:2:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"3950:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3959:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3962:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3952:6:16"},"nodeType":"YulFunctionCall","src":"3952:12:16"},"nodeType":"YulExpressionStatement","src":"3952:12:16"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"3929:2:16"},{"kind":"number","nodeType":"YulLiteral","src":"3933:4:16","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3925:3:16"},"nodeType":"YulFunctionCall","src":"3925:13:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3940:7:16"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3921:3:16"},"nodeType":"YulFunctionCall","src":"3921:27:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3914:6:16"},"nodeType":"YulFunctionCall","src":"3914:35:16"},"nodeType":"YulIf","src":"3911:55:16"},{"nodeType":"YulVariableDeclaration","src":"3975:26:16","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"3998:2:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3985:12:16"},"nodeType":"YulFunctionCall","src":"3985:16:16"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"3979:2:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4010:14:16","value":{"kind":"number","nodeType":"YulLiteral","src":"4020:4:16","type":"","value":"0x20"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"4014:2:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4033:71:16","value":{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"4100:2:16"}],"functionName":{"name":"array_allocation_size_array_address_dyn","nodeType":"YulIdentifier","src":"4060:39:16"},"nodeType":"YulFunctionCall","src":"4060:43:16"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"4044:15:16"},"nodeType":"YulFunctionCall","src":"4044:60:16"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"4037:3:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4113:16:16","value":{"name":"dst","nodeType":"YulIdentifier","src":"4126:3:16"},"variables":[{"name":"dst_1","nodeType":"YulTypedName","src":"4117:5:16","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4145:3:16"},{"name":"_3","nodeType":"YulIdentifier","src":"4150:2:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4138:6:16"},"nodeType":"YulFunctionCall","src":"4138:15:16"},"nodeType":"YulExpressionStatement","src":"4138:15:16"},{"nodeType":"YulAssignment","src":"4162:19:16","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4173:3:16"},{"name":"_4","nodeType":"YulIdentifier","src":"4178:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4169:3:16"},"nodeType":"YulFunctionCall","src":"4169:12:16"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"4162:3:16"}]},{"nodeType":"YulVariableDeclaration","src":"4190:42:16","value":{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"4212:2:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4220:1:16","type":"","value":"5"},{"name":"_3","nodeType":"YulIdentifier","src":"4223:2:16"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4216:3:16"},"nodeType":"YulFunctionCall","src":"4216:10:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4208:3:16"},"nodeType":"YulFunctionCall","src":"4208:19:16"},{"name":"_4","nodeType":"YulIdentifier","src":"4229:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4204:3:16"},"nodeType":"YulFunctionCall","src":"4204:28:16"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"4194:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"4264:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4273:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4276:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4266:6:16"},"nodeType":"YulFunctionCall","src":"4266:12:16"},"nodeType":"YulExpressionStatement","src":"4266:12:16"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"4247:6:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4255:7:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4244:2:16"},"nodeType":"YulFunctionCall","src":"4244:19:16"},"nodeType":"YulIf","src":"4241:39:16"},{"nodeType":"YulVariableDeclaration","src":"4289:22:16","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"4304:2:16"},{"name":"_4","nodeType":"YulIdentifier","src":"4308:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4300:3:16"},"nodeType":"YulFunctionCall","src":"4300:11:16"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"4293:3:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"4376:92:16","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4397:3:16"},{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4421:3:16"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"4402:18:16"},"nodeType":"YulFunctionCall","src":"4402:23:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4390:6:16"},"nodeType":"YulFunctionCall","src":"4390:36:16"},"nodeType":"YulExpressionStatement","src":"4390:36:16"},{"nodeType":"YulAssignment","src":"4439:19:16","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4450:3:16"},{"name":"_4","nodeType":"YulIdentifier","src":"4455:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4446:3:16"},"nodeType":"YulFunctionCall","src":"4446:12:16"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"4439:3:16"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4331:3:16"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"4336:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4328:2:16"},"nodeType":"YulFunctionCall","src":"4328:15:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4344:23:16","statements":[{"nodeType":"YulAssignment","src":"4346:19:16","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4357:3:16"},{"name":"_4","nodeType":"YulIdentifier","src":"4362:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4353:3:16"},"nodeType":"YulFunctionCall","src":"4353:12:16"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"4346:3:16"}]}]},"pre":{"nodeType":"YulBlock","src":"4324:3:16","statements":[]},"src":"4320:148:16"},{"nodeType":"YulAssignment","src":"4477:15:16","value":{"name":"dst_1","nodeType":"YulIdentifier","src":"4487:5:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4477:6:16"}]},{"nodeType":"YulVariableDeclaration","src":"4501:48:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4534:9:16"},{"name":"_4","nodeType":"YulIdentifier","src":"4545:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4530:3:16"},"nodeType":"YulFunctionCall","src":"4530:18:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4517:12:16"},"nodeType":"YulFunctionCall","src":"4517:32:16"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"4505:8:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"4578:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4587:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4590:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4580:6:16"},"nodeType":"YulFunctionCall","src":"4580:12:16"},"nodeType":"YulExpressionStatement","src":"4580:12:16"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"4564:8:16"},{"name":"_1","nodeType":"YulIdentifier","src":"4574:2:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4561:2:16"},"nodeType":"YulFunctionCall","src":"4561:16:16"},"nodeType":"YulIf","src":"4558:36:16"},{"nodeType":"YulAssignment","src":"4603:73:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4646:9:16"},{"name":"offset_1","nodeType":"YulIdentifier","src":"4657:8:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4642:3:16"},"nodeType":"YulFunctionCall","src":"4642:24:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4668:7:16"}],"functionName":{"name":"abi_decode_array_uint256_dyn","nodeType":"YulIdentifier","src":"4613:28:16"},"nodeType":"YulFunctionCall","src":"4613:63:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4603:6:16"}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3631:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3642:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3654:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3662:6:16","type":""}],"src":"3536:1146:16"},{"body":{"nodeType":"YulBlock","src":"4791:224:16","statements":[{"body":{"nodeType":"YulBlock","src":"4837:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4846:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4849:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4839:6:16"},"nodeType":"YulFunctionCall","src":"4839:12:16"},"nodeType":"YulExpressionStatement","src":"4839:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4812:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"4821:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4808:3:16"},"nodeType":"YulFunctionCall","src":"4808:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"4833:2:16","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4804:3:16"},"nodeType":"YulFunctionCall","src":"4804:32:16"},"nodeType":"YulIf","src":"4801:52:16"},{"nodeType":"YulAssignment","src":"4862:39:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4891:9:16"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"4872:18:16"},"nodeType":"YulFunctionCall","src":"4872:29:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4862:6:16"}]},{"nodeType":"YulAssignment","src":"4910:48:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4943:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4954:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4939:3:16"},"nodeType":"YulFunctionCall","src":"4939:18:16"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"4920:18:16"},"nodeType":"YulFunctionCall","src":"4920:38:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4910:6:16"}]},{"nodeType":"YulAssignment","src":"4967:42:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4994:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"5005:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4990:3:16"},"nodeType":"YulFunctionCall","src":"4990:18:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4977:12:16"},"nodeType":"YulFunctionCall","src":"4977:32:16"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4967:6:16"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4741:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4752:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4764:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4772:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4780:6:16","type":""}],"src":"4687:328:16"},{"body":{"nodeType":"YulBlock","src":"5117:87:16","statements":[{"nodeType":"YulAssignment","src":"5127:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5139:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"5150:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5135:3:16"},"nodeType":"YulFunctionCall","src":"5135:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5127:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5169:9:16"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5184:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"5192:4:16","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5180:3:16"},"nodeType":"YulFunctionCall","src":"5180:17:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5162:6:16"},"nodeType":"YulFunctionCall","src":"5162:36:16"},"nodeType":"YulExpressionStatement","src":"5162:36:16"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5086:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5097:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5108:4:16","type":""}],"src":"5020:184:16"},{"body":{"nodeType":"YulBlock","src":"5324:102:16","statements":[{"nodeType":"YulAssignment","src":"5334:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5346:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"5357:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5342:3:16"},"nodeType":"YulFunctionCall","src":"5342:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5334:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5376:9:16"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5391:6:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5407:3:16","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"5412:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5403:3:16"},"nodeType":"YulFunctionCall","src":"5403:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"5416:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5399:3:16"},"nodeType":"YulFunctionCall","src":"5399:19:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5387:3:16"},"nodeType":"YulFunctionCall","src":"5387:32:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5369:6:16"},"nodeType":"YulFunctionCall","src":"5369:51:16"},"nodeType":"YulExpressionStatement","src":"5369:51:16"}]},"name":"abi_encode_tuple_t_contract$_IERC20_$729__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5293:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5304:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5315:4:16","type":""}],"src":"5209:217:16"},{"body":{"nodeType":"YulBlock","src":"5501:116:16","statements":[{"body":{"nodeType":"YulBlock","src":"5547:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5556:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5559:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5549:6:16"},"nodeType":"YulFunctionCall","src":"5549:12:16"},"nodeType":"YulExpressionStatement","src":"5549:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5522:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"5531:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5518:3:16"},"nodeType":"YulFunctionCall","src":"5518:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"5543:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5514:3:16"},"nodeType":"YulFunctionCall","src":"5514:32:16"},"nodeType":"YulIf","src":"5511:52:16"},{"nodeType":"YulAssignment","src":"5572:39:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5601:9:16"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"5582:18:16"},"nodeType":"YulFunctionCall","src":"5582:29:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5572:6:16"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5467:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5478:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5490:6:16","type":""}],"src":"5431:186:16"},{"body":{"nodeType":"YulBlock","src":"5726:224:16","statements":[{"body":{"nodeType":"YulBlock","src":"5772:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5781:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5784:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5774:6:16"},"nodeType":"YulFunctionCall","src":"5774:12:16"},"nodeType":"YulExpressionStatement","src":"5774:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5747:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"5756:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5743:3:16"},"nodeType":"YulFunctionCall","src":"5743:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"5768:2:16","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5739:3:16"},"nodeType":"YulFunctionCall","src":"5739:32:16"},"nodeType":"YulIf","src":"5736:52:16"},{"nodeType":"YulAssignment","src":"5797:39:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5826:9:16"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"5807:18:16"},"nodeType":"YulFunctionCall","src":"5807:29:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5797:6:16"}]},{"nodeType":"YulAssignment","src":"5845:42:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5872:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"5883:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5868:3:16"},"nodeType":"YulFunctionCall","src":"5868:18:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5855:12:16"},"nodeType":"YulFunctionCall","src":"5855:32:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5845:6:16"}]},{"nodeType":"YulAssignment","src":"5896:48:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5929:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"5940:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5925:3:16"},"nodeType":"YulFunctionCall","src":"5925:18:16"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"5906:18:16"},"nodeType":"YulFunctionCall","src":"5906:38:16"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5896:6:16"}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5676:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5687:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5699:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5707:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5715:6:16","type":""}],"src":"5622:328:16"},{"body":{"nodeType":"YulBlock","src":"6056:102:16","statements":[{"nodeType":"YulAssignment","src":"6066:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6078:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6089:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6074:3:16"},"nodeType":"YulFunctionCall","src":"6074:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6066:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6108:9:16"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6123:6:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6139:3:16","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"6144:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6135:3:16"},"nodeType":"YulFunctionCall","src":"6135:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"6148:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6131:3:16"},"nodeType":"YulFunctionCall","src":"6131:19:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6119:3:16"},"nodeType":"YulFunctionCall","src":"6119:32:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6101:6:16"},"nodeType":"YulFunctionCall","src":"6101:51:16"},"nodeType":"YulExpressionStatement","src":"6101:51:16"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6025:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6036:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6047:4:16","type":""}],"src":"5955:203:16"},{"body":{"nodeType":"YulBlock","src":"6250:173:16","statements":[{"body":{"nodeType":"YulBlock","src":"6296:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6305:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6308:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6298:6:16"},"nodeType":"YulFunctionCall","src":"6298:12:16"},"nodeType":"YulExpressionStatement","src":"6298:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6271:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"6280:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6267:3:16"},"nodeType":"YulFunctionCall","src":"6267:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"6292:2:16","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6263:3:16"},"nodeType":"YulFunctionCall","src":"6263:32:16"},"nodeType":"YulIf","src":"6260:52:16"},{"nodeType":"YulAssignment","src":"6321:39:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6350:9:16"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"6331:18:16"},"nodeType":"YulFunctionCall","src":"6331:29:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6321:6:16"}]},{"nodeType":"YulAssignment","src":"6369:48:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6402:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6413:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6398:3:16"},"nodeType":"YulFunctionCall","src":"6398:18:16"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"6379:18:16"},"nodeType":"YulFunctionCall","src":"6379:38:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6369:6:16"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6208:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6219:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6231:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6239:6:16","type":""}],"src":"6163:260:16"},{"body":{"nodeType":"YulBlock","src":"6483:325:16","statements":[{"nodeType":"YulAssignment","src":"6493:22:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6507:1:16","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"6510:4:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6503:3:16"},"nodeType":"YulFunctionCall","src":"6503:12:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6493:6:16"}]},{"nodeType":"YulVariableDeclaration","src":"6524:38:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6554:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"6560:1:16","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6550:3:16"},"nodeType":"YulFunctionCall","src":"6550:12:16"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"6528:18:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"6601:31:16","statements":[{"nodeType":"YulAssignment","src":"6603:27:16","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6617:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"6625:4:16","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6613:3:16"},"nodeType":"YulFunctionCall","src":"6613:17:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6603:6:16"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6581:18:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6574:6:16"},"nodeType":"YulFunctionCall","src":"6574:26:16"},"nodeType":"YulIf","src":"6571:61:16"},{"body":{"nodeType":"YulBlock","src":"6691:111:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6712:1:16","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6719:3:16","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"6724:10:16","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6715:3:16"},"nodeType":"YulFunctionCall","src":"6715:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6705:6:16"},"nodeType":"YulFunctionCall","src":"6705:31:16"},"nodeType":"YulExpressionStatement","src":"6705:31:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6756:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6759:4:16","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6749:6:16"},"nodeType":"YulFunctionCall","src":"6749:15:16"},"nodeType":"YulExpressionStatement","src":"6749:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6784:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6787:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6777:6:16"},"nodeType":"YulFunctionCall","src":"6777:15:16"},"nodeType":"YulExpressionStatement","src":"6777:15:16"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6647:18:16"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6670:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"6678:2:16","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6667:2:16"},"nodeType":"YulFunctionCall","src":"6667:14:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6644:2:16"},"nodeType":"YulFunctionCall","src":"6644:38:16"},"nodeType":"YulIf","src":"6641:161:16"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"6463:4:16","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"6472:6:16","type":""}],"src":"6428:380:16"},{"body":{"nodeType":"YulBlock","src":"6845:95:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6862:1:16","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6869:3:16","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"6874:10:16","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6865:3:16"},"nodeType":"YulFunctionCall","src":"6865:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6855:6:16"},"nodeType":"YulFunctionCall","src":"6855:31:16"},"nodeType":"YulExpressionStatement","src":"6855:31:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6902:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6905:4:16","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6895:6:16"},"nodeType":"YulFunctionCall","src":"6895:15:16"},"nodeType":"YulExpressionStatement","src":"6895:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6926:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6929:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6919:6:16"},"nodeType":"YulFunctionCall","src":"6919:15:16"},"nodeType":"YulExpressionStatement","src":"6919:15:16"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"6813:127:16"},{"body":{"nodeType":"YulBlock","src":"6977:95:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6994:1:16","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7001:3:16","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"7006:10:16","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6997:3:16"},"nodeType":"YulFunctionCall","src":"6997:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6987:6:16"},"nodeType":"YulFunctionCall","src":"6987:31:16"},"nodeType":"YulExpressionStatement","src":"6987:31:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7034:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7037:4:16","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7027:6:16"},"nodeType":"YulFunctionCall","src":"7027:15:16"},"nodeType":"YulExpressionStatement","src":"7027:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7058:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7061:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7051:6:16"},"nodeType":"YulFunctionCall","src":"7051:15:16"},"nodeType":"YulExpressionStatement","src":"7051:15:16"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"6945:127:16"},{"body":{"nodeType":"YulBlock","src":"7129:116:16","statements":[{"nodeType":"YulAssignment","src":"7139:20:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7154:1:16"},{"name":"y","nodeType":"YulIdentifier","src":"7157:1:16"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7150:3:16"},"nodeType":"YulFunctionCall","src":"7150:9:16"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"7139:7:16"}]},{"body":{"nodeType":"YulBlock","src":"7217:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"7219:16:16"},"nodeType":"YulFunctionCall","src":"7219:18:16"},"nodeType":"YulExpressionStatement","src":"7219:18:16"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7188:1:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7181:6:16"},"nodeType":"YulFunctionCall","src":"7181:9:16"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"7195:1:16"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"7202:7:16"},{"name":"x","nodeType":"YulIdentifier","src":"7211:1:16"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7198:3:16"},"nodeType":"YulFunctionCall","src":"7198:15:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7192:2:16"},"nodeType":"YulFunctionCall","src":"7192:22:16"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7178:2:16"},"nodeType":"YulFunctionCall","src":"7178:37:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7171:6:16"},"nodeType":"YulFunctionCall","src":"7171:45:16"},"nodeType":"YulIf","src":"7168:71:16"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"7108:1:16","type":""},{"name":"y","nodeType":"YulTypedName","src":"7111:1:16","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"7117:7:16","type":""}],"src":"7077:168:16"},{"body":{"nodeType":"YulBlock","src":"7296:171:16","statements":[{"body":{"nodeType":"YulBlock","src":"7327:111:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7348:1:16","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7355:3:16","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"7360:10:16","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7351:3:16"},"nodeType":"YulFunctionCall","src":"7351:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7341:6:16"},"nodeType":"YulFunctionCall","src":"7341:31:16"},"nodeType":"YulExpressionStatement","src":"7341:31:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7392:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7395:4:16","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7385:6:16"},"nodeType":"YulFunctionCall","src":"7385:15:16"},"nodeType":"YulExpressionStatement","src":"7385:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7420:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7423:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7413:6:16"},"nodeType":"YulFunctionCall","src":"7413:15:16"},"nodeType":"YulExpressionStatement","src":"7413:15:16"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"7316:1:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7309:6:16"},"nodeType":"YulFunctionCall","src":"7309:9:16"},"nodeType":"YulIf","src":"7306:132:16"},{"nodeType":"YulAssignment","src":"7447:14:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7456:1:16"},{"name":"y","nodeType":"YulIdentifier","src":"7459:1:16"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7452:3:16"},"nodeType":"YulFunctionCall","src":"7452:9:16"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"7447:1:16"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"7281:1:16","type":""},{"name":"y","nodeType":"YulTypedName","src":"7284:1:16","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"7290:1:16","type":""}],"src":"7250:217:16"},{"body":{"nodeType":"YulBlock","src":"7519:88:16","statements":[{"body":{"nodeType":"YulBlock","src":"7550:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"7552:16:16"},"nodeType":"YulFunctionCall","src":"7552:18:16"},"nodeType":"YulExpressionStatement","src":"7552:18:16"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7535:5:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7546:1:16","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7542:3:16"},"nodeType":"YulFunctionCall","src":"7542:6:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7532:2:16"},"nodeType":"YulFunctionCall","src":"7532:17:16"},"nodeType":"YulIf","src":"7529:43:16"},{"nodeType":"YulAssignment","src":"7581:20:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7592:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"7599:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7588:3:16"},"nodeType":"YulFunctionCall","src":"7588:13:16"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"7581:3:16"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7501:5:16","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"7511:3:16","type":""}],"src":"7472:135:16"},{"body":{"nodeType":"YulBlock","src":"7786:238:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7803:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"7814:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7796:6:16"},"nodeType":"YulFunctionCall","src":"7796:21:16"},"nodeType":"YulExpressionStatement","src":"7796:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7837:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"7848:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7833:3:16"},"nodeType":"YulFunctionCall","src":"7833:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"7853:2:16","type":"","value":"48"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7826:6:16"},"nodeType":"YulFunctionCall","src":"7826:30:16"},"nodeType":"YulExpressionStatement","src":"7826:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7876:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"7887:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7872:3:16"},"nodeType":"YulFunctionCall","src":"7872:18:16"},{"hexValue":"746865206c656e73206f6620616d6f756e7420616e6420746f6b656e5f616464","kind":"string","nodeType":"YulLiteral","src":"7892:34:16","type":"","value":"the lens of amount and token_add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7865:6:16"},"nodeType":"YulFunctionCall","src":"7865:62:16"},"nodeType":"YulExpressionStatement","src":"7865:62:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7947:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"7958:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7943:3:16"},"nodeType":"YulFunctionCall","src":"7943:18:16"},{"hexValue":"2073686f756c6420626520657175616c","kind":"string","nodeType":"YulLiteral","src":"7963:18:16","type":"","value":" should be equal"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7936:6:16"},"nodeType":"YulFunctionCall","src":"7936:46:16"},"nodeType":"YulExpressionStatement","src":"7936:46:16"},{"nodeType":"YulAssignment","src":"7991:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8003:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"8014:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7999:3:16"},"nodeType":"YulFunctionCall","src":"7999:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7991:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_a33b7e37ceeda7c914335f861b2f9f6b02bcf2d319b05a9ff35d5b6ba6af4bfb__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7763:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7777:4:16","type":""}],"src":"7612:412:16"},{"body":{"nodeType":"YulBlock","src":"8186:218:16","statements":[{"nodeType":"YulAssignment","src":"8196:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8208:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"8219:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8204:3:16"},"nodeType":"YulFunctionCall","src":"8204:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8196:4:16"}]},{"nodeType":"YulVariableDeclaration","src":"8231:29:16","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8249:3:16","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"8254:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8245:3:16"},"nodeType":"YulFunctionCall","src":"8245:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"8258:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8241:3:16"},"nodeType":"YulFunctionCall","src":"8241:19:16"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"8235:2:16","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8276:9:16"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8291:6:16"},{"name":"_1","nodeType":"YulIdentifier","src":"8299:2:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8287:3:16"},"nodeType":"YulFunctionCall","src":"8287:15:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8269:6:16"},"nodeType":"YulFunctionCall","src":"8269:34:16"},"nodeType":"YulExpressionStatement","src":"8269:34:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8323:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"8334:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8319:3:16"},"nodeType":"YulFunctionCall","src":"8319:18:16"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"8343:6:16"},{"name":"_1","nodeType":"YulIdentifier","src":"8351:2:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8339:3:16"},"nodeType":"YulFunctionCall","src":"8339:15:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8312:6:16"},"nodeType":"YulFunctionCall","src":"8312:43:16"},"nodeType":"YulExpressionStatement","src":"8312:43:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8375:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"8386:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8371:3:16"},"nodeType":"YulFunctionCall","src":"8371:18:16"},{"name":"value2","nodeType":"YulIdentifier","src":"8391:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8364:6:16"},"nodeType":"YulFunctionCall","src":"8364:34:16"},"nodeType":"YulExpressionStatement","src":"8364:34:16"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8139:9:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8150:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8158:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8166:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8177:4:16","type":""}],"src":"8029:375:16"},{"body":{"nodeType":"YulBlock","src":"8487:199:16","statements":[{"body":{"nodeType":"YulBlock","src":"8533:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8542:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8545:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8535:6:16"},"nodeType":"YulFunctionCall","src":"8535:12:16"},"nodeType":"YulExpressionStatement","src":"8535:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8508:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"8517:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8504:3:16"},"nodeType":"YulFunctionCall","src":"8504:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"8529:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8500:3:16"},"nodeType":"YulFunctionCall","src":"8500:32:16"},"nodeType":"YulIf","src":"8497:52:16"},{"nodeType":"YulVariableDeclaration","src":"8558:29:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8577:9:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8571:5:16"},"nodeType":"YulFunctionCall","src":"8571:16:16"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"8562:5:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"8640:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8649:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8652:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8642:6:16"},"nodeType":"YulFunctionCall","src":"8642:12:16"},"nodeType":"YulExpressionStatement","src":"8642:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8609:5:16"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8630:5:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8623:6:16"},"nodeType":"YulFunctionCall","src":"8623:13:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8616:6:16"},"nodeType":"YulFunctionCall","src":"8616:21:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8606:2:16"},"nodeType":"YulFunctionCall","src":"8606:32:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8599:6:16"},"nodeType":"YulFunctionCall","src":"8599:40:16"},"nodeType":"YulIf","src":"8596:60:16"},{"nodeType":"YulAssignment","src":"8665:15:16","value":{"name":"value","nodeType":"YulIdentifier","src":"8675:5:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8665:6:16"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8453:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8464:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8476:6:16","type":""}],"src":"8409:277:16"},{"body":{"nodeType":"YulBlock","src":"8865:172:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8882:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"8893:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8875:6:16"},"nodeType":"YulFunctionCall","src":"8875:21:16"},"nodeType":"YulExpressionStatement","src":"8875:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8916:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"8927:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8912:3:16"},"nodeType":"YulFunctionCall","src":"8912:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"8932:2:16","type":"","value":"22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8905:6:16"},"nodeType":"YulFunctionCall","src":"8905:30:16"},"nodeType":"YulExpressionStatement","src":"8905:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8955:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"8966:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8951:3:16"},"nodeType":"YulFunctionCall","src":"8951:18:16"},{"hexValue":"5472616e7366657220746f6b656e30206661696c6564","kind":"string","nodeType":"YulLiteral","src":"8971:24:16","type":"","value":"Transfer token0 failed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8944:6:16"},"nodeType":"YulFunctionCall","src":"8944:52:16"},"nodeType":"YulExpressionStatement","src":"8944:52:16"},{"nodeType":"YulAssignment","src":"9005:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9017:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"9028:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9013:3:16"},"nodeType":"YulFunctionCall","src":"9013:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9005:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_3dcfaa7b26cd9b2e7d0bcb018b106caeaeb81724fcb90f6955e6b49805c7b7c1__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8842:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8856:4:16","type":""}],"src":"8691:346:16"},{"body":{"nodeType":"YulBlock","src":"9091:79:16","statements":[{"nodeType":"YulAssignment","src":"9101:17:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9113:1:16"},{"name":"y","nodeType":"YulIdentifier","src":"9116:1:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9109:3:16"},"nodeType":"YulFunctionCall","src":"9109:9:16"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"9101:4:16"}]},{"body":{"nodeType":"YulBlock","src":"9142:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"9144:16:16"},"nodeType":"YulFunctionCall","src":"9144:18:16"},"nodeType":"YulExpressionStatement","src":"9144:18:16"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"9133:4:16"},{"name":"x","nodeType":"YulIdentifier","src":"9139:1:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9130:2:16"},"nodeType":"YulFunctionCall","src":"9130:11:16"},"nodeType":"YulIf","src":"9127:37:16"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"9073:1:16","type":""},{"name":"y","nodeType":"YulTypedName","src":"9076:1:16","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"9082:4:16","type":""}],"src":"9042:128:16"},{"body":{"nodeType":"YulBlock","src":"9404:603:16","statements":[{"nodeType":"YulVariableDeclaration","src":"9414:32:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9432:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"9443:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9428:3:16"},"nodeType":"YulFunctionCall","src":"9428:18:16"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"9418:6:16","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9462:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"9473:2:16","type":"","value":"64"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9455:6:16"},"nodeType":"YulFunctionCall","src":"9455:21:16"},"nodeType":"YulExpressionStatement","src":"9455:21:16"},{"nodeType":"YulVariableDeclaration","src":"9485:17:16","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"9496:6:16"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"9489:3:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9511:27:16","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9531:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9525:5:16"},"nodeType":"YulFunctionCall","src":"9525:13:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"9515:6:16","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"9554:6:16"},{"name":"length","nodeType":"YulIdentifier","src":"9562:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9547:6:16"},"nodeType":"YulFunctionCall","src":"9547:22:16"},"nodeType":"YulExpressionStatement","src":"9547:22:16"},{"nodeType":"YulAssignment","src":"9578:25:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9589:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"9600:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9585:3:16"},"nodeType":"YulFunctionCall","src":"9585:18:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9578:3:16"}]},{"nodeType":"YulVariableDeclaration","src":"9612:14:16","value":{"kind":"number","nodeType":"YulLiteral","src":"9622:4:16","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"9616:2:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9635:29:16","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9653:6:16"},{"name":"_1","nodeType":"YulIdentifier","src":"9661:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9649:3:16"},"nodeType":"YulFunctionCall","src":"9649:15:16"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"9639:6:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9673:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"9682:1:16","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"9677:1:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"9741:146:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9762:3:16"},{"arguments":[{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"9777:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9771:5:16"},"nodeType":"YulFunctionCall","src":"9771:13:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9794:3:16","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"9799:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9790:3:16"},"nodeType":"YulFunctionCall","src":"9790:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"9803:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9786:3:16"},"nodeType":"YulFunctionCall","src":"9786:19:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9767:3:16"},"nodeType":"YulFunctionCall","src":"9767:39:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9755:6:16"},"nodeType":"YulFunctionCall","src":"9755:52:16"},"nodeType":"YulExpressionStatement","src":"9755:52:16"},{"nodeType":"YulAssignment","src":"9820:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9831:3:16"},{"name":"_1","nodeType":"YulIdentifier","src":"9836:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9827:3:16"},"nodeType":"YulFunctionCall","src":"9827:12:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9820:3:16"}]},{"nodeType":"YulAssignment","src":"9852:25:16","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"9866:6:16"},{"name":"_1","nodeType":"YulIdentifier","src":"9874:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9862:3:16"},"nodeType":"YulFunctionCall","src":"9862:15:16"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"9852:6:16"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"9703:1:16"},{"name":"length","nodeType":"YulIdentifier","src":"9706:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9700:2:16"},"nodeType":"YulFunctionCall","src":"9700:13:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"9714:18:16","statements":[{"nodeType":"YulAssignment","src":"9716:14:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"9725:1:16"},{"kind":"number","nodeType":"YulLiteral","src":"9728:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9721:3:16"},"nodeType":"YulFunctionCall","src":"9721:9:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"9716:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"9696:3:16","statements":[]},"src":"9692:195:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9907:9:16"},{"name":"_1","nodeType":"YulIdentifier","src":"9918:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9903:3:16"},"nodeType":"YulFunctionCall","src":"9903:18:16"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9927:3:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"9932:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9923:3:16"},"nodeType":"YulFunctionCall","src":"9923:19:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9896:6:16"},"nodeType":"YulFunctionCall","src":"9896:47:16"},"nodeType":"YulExpressionStatement","src":"9896:47:16"},{"nodeType":"YulAssignment","src":"9952:49:16","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"9989:6:16"},{"name":"pos","nodeType":"YulIdentifier","src":"9997:3:16"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"9960:28:16"},"nodeType":"YulFunctionCall","src":"9960:41:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9952:4:16"}]}]},"name":"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9365:9:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9376:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9384:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9395:4:16","type":""}],"src":"9175:832:16"},{"body":{"nodeType":"YulBlock","src":"10186:161:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10203:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"10214:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10196:6:16"},"nodeType":"YulFunctionCall","src":"10196:21:16"},"nodeType":"YulExpressionStatement","src":"10196:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10237:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"10248:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10233:3:16"},"nodeType":"YulFunctionCall","src":"10233:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"10253:2:16","type":"","value":"11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10226:6:16"},"nodeType":"YulFunctionCall","src":"10226:30:16"},"nodeType":"YulExpressionStatement","src":"10226:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10276:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"10287:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10272:3:16"},"nodeType":"YulFunctionCall","src":"10272:18:16"},{"hexValue":"53616d6520746f6b656e73","kind":"string","nodeType":"YulLiteral","src":"10292:13:16","type":"","value":"Same tokens"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10265:6:16"},"nodeType":"YulFunctionCall","src":"10265:41:16"},"nodeType":"YulExpressionStatement","src":"10265:41:16"},{"nodeType":"YulAssignment","src":"10315:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10327:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"10338:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10323:3:16"},"nodeType":"YulFunctionCall","src":"10323:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10315:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_027a4645d52999467d532b08294cf4ab88552e8e8054f1574513efbdd121a3e3__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10163:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10177:4:16","type":""}],"src":"10012:335:16"},{"body":{"nodeType":"YulBlock","src":"10526:177:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10543:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"10554:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10536:6:16"},"nodeType":"YulFunctionCall","src":"10536:21:16"},"nodeType":"YulExpressionStatement","src":"10536:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10577:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"10588:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10573:3:16"},"nodeType":"YulFunctionCall","src":"10573:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"10593:2:16","type":"","value":"27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10566:6:16"},"nodeType":"YulFunctionCall","src":"10566:30:16"},"nodeType":"YulExpressionStatement","src":"10566:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10616:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"10627:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10612:3:16"},"nodeType":"YulFunctionCall","src":"10612:18:16"},{"hexValue":"746f6b656e496e206e6f7420696e20695f746f6b656e735f6d6170","kind":"string","nodeType":"YulLiteral","src":"10632:29:16","type":"","value":"tokenIn not in i_tokens_map"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10605:6:16"},"nodeType":"YulFunctionCall","src":"10605:57:16"},"nodeType":"YulExpressionStatement","src":"10605:57:16"},{"nodeType":"YulAssignment","src":"10671:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10683:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"10694:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10679:3:16"},"nodeType":"YulFunctionCall","src":"10679:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10671:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_56a242703b1539558b0d109cfcb28b8a34a30bc5a66436384a025ef1b35eb3dd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10503:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10517:4:16","type":""}],"src":"10352:351:16"},{"body":{"nodeType":"YulBlock","src":"10882:178:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10899:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"10910:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10892:6:16"},"nodeType":"YulFunctionCall","src":"10892:21:16"},"nodeType":"YulExpressionStatement","src":"10892:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10933:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"10944:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10929:3:16"},"nodeType":"YulFunctionCall","src":"10929:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"10949:2:16","type":"","value":"28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10922:6:16"},"nodeType":"YulFunctionCall","src":"10922:30:16"},"nodeType":"YulExpressionStatement","src":"10922:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10972:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"10983:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10968:3:16"},"nodeType":"YulFunctionCall","src":"10968:18:16"},{"hexValue":"746f6b656e4f7574206e6f7420696e20695f746f6b656e735f6d6170","kind":"string","nodeType":"YulLiteral","src":"10988:30:16","type":"","value":"tokenOut not in i_tokens_map"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10961:6:16"},"nodeType":"YulFunctionCall","src":"10961:58:16"},"nodeType":"YulExpressionStatement","src":"10961:58:16"},{"nodeType":"YulAssignment","src":"11028:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11040:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"11051:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11036:3:16"},"nodeType":"YulFunctionCall","src":"11036:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11028:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_80501303dea0e00b4f0fdd2002f8e97e93d67534e40aed39444d7f3d32212699__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10859:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10873:4:16","type":""}],"src":"10708:352:16"},{"body":{"nodeType":"YulBlock","src":"11239:161:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11256:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"11267:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11249:6:16"},"nodeType":"YulFunctionCall","src":"11249:21:16"},"nodeType":"YulExpressionStatement","src":"11249:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11290:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"11301:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11286:3:16"},"nodeType":"YulFunctionCall","src":"11286:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"11306:2:16","type":"","value":"11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11279:6:16"},"nodeType":"YulFunctionCall","src":"11279:30:16"},"nodeType":"YulExpressionStatement","src":"11279:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11329:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"11340:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11325:3:16"},"nodeType":"YulFunctionCall","src":"11325:18:16"},{"hexValue":"5a65726f20616d6f756e74","kind":"string","nodeType":"YulLiteral","src":"11345:13:16","type":"","value":"Zero amount"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11318:6:16"},"nodeType":"YulFunctionCall","src":"11318:41:16"},"nodeType":"YulExpressionStatement","src":"11318:41:16"},{"nodeType":"YulAssignment","src":"11368:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11380:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"11391:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11376:3:16"},"nodeType":"YulFunctionCall","src":"11376:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11368:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_499f3f4b0ad3588aa1eb6e198be77bff643a4218ffbf2bef1370e58aadea5df4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11216:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11230:4:16","type":""}],"src":"11065:335:16"},{"body":{"nodeType":"YulBlock","src":"11579:161:16","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11596:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"11607:2:16","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11589:6:16"},"nodeType":"YulFunctionCall","src":"11589:21:16"},"nodeType":"YulExpressionStatement","src":"11589:21:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11630:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"11641:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11626:3:16"},"nodeType":"YulFunctionCall","src":"11626:18:16"},{"kind":"number","nodeType":"YulLiteral","src":"11646:2:16","type":"","value":"11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11619:6:16"},"nodeType":"YulFunctionCall","src":"11619:30:16"},"nodeType":"YulExpressionStatement","src":"11619:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11669:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"11680:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11665:3:16"},"nodeType":"YulFunctionCall","src":"11665:18:16"},{"hexValue":"53776170204661696c6564","kind":"string","nodeType":"YulLiteral","src":"11685:13:16","type":"","value":"Swap Failed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11658:6:16"},"nodeType":"YulFunctionCall","src":"11658:41:16"},"nodeType":"YulExpressionStatement","src":"11658:41:16"},{"nodeType":"YulAssignment","src":"11708:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11720:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"11731:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11716:3:16"},"nodeType":"YulFunctionCall","src":"11716:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11708:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_c26370c748e399efe4c5a302d20f1fe22da5300fc60bdab39924790733506945__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11556:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11570:4:16","type":""}],"src":"11405:335:16"},{"body":{"nodeType":"YulBlock","src":"11874:145:16","statements":[{"nodeType":"YulAssignment","src":"11884:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11896:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"11907:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11892:3:16"},"nodeType":"YulFunctionCall","src":"11892:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11884:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11926:9:16"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11941:6:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11957:3:16","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"11962:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"11953:3:16"},"nodeType":"YulFunctionCall","src":"11953:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"11966:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11949:3:16"},"nodeType":"YulFunctionCall","src":"11949:19:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11937:3:16"},"nodeType":"YulFunctionCall","src":"11937:32:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11919:6:16"},"nodeType":"YulFunctionCall","src":"11919:51:16"},"nodeType":"YulExpressionStatement","src":"11919:51:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11990:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"12001:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11986:3:16"},"nodeType":"YulFunctionCall","src":"11986:18:16"},{"name":"value1","nodeType":"YulIdentifier","src":"12006:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11979:6:16"},"nodeType":"YulFunctionCall","src":"11979:34:16"},"nodeType":"YulExpressionStatement","src":"11979:34:16"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11835:9:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11846:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11854:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11865:4:16","type":""}],"src":"11745:274:16"},{"body":{"nodeType":"YulBlock","src":"12072:77:16","statements":[{"nodeType":"YulAssignment","src":"12082:16:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"12093:1:16"},{"name":"y","nodeType":"YulIdentifier","src":"12096:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12089:3:16"},"nodeType":"YulFunctionCall","src":"12089:9:16"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"12082:3:16"}]},{"body":{"nodeType":"YulBlock","src":"12121:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"12123:16:16"},"nodeType":"YulFunctionCall","src":"12123:18:16"},"nodeType":"YulExpressionStatement","src":"12123:18:16"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"12113:1:16"},{"name":"sum","nodeType":"YulIdentifier","src":"12116:3:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12110:2:16"},"nodeType":"YulFunctionCall","src":"12110:10:16"},"nodeType":"YulIf","src":"12107:36:16"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"12055:1:16","type":""},{"name":"y","nodeType":"YulTypedName","src":"12058:1:16","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"12064:3:16","type":""}],"src":"12024:125:16"},{"body":{"nodeType":"YulBlock","src":"12283:175:16","statements":[{"nodeType":"YulAssignment","src":"12293:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12305:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"12316:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12301:3:16"},"nodeType":"YulFunctionCall","src":"12301:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12293:4:16"}]},{"nodeType":"YulVariableDeclaration","src":"12328:29:16","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12346:3:16","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"12351:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"12342:3:16"},"nodeType":"YulFunctionCall","src":"12342:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"12355:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12338:3:16"},"nodeType":"YulFunctionCall","src":"12338:19:16"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"12332:2:16","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12373:9:16"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12388:6:16"},{"name":"_1","nodeType":"YulIdentifier","src":"12396:2:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12384:3:16"},"nodeType":"YulFunctionCall","src":"12384:15:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12366:6:16"},"nodeType":"YulFunctionCall","src":"12366:34:16"},"nodeType":"YulExpressionStatement","src":"12366:34:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12420:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"12431:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12416:3:16"},"nodeType":"YulFunctionCall","src":"12416:18:16"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"12440:6:16"},{"name":"_1","nodeType":"YulIdentifier","src":"12448:2:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12436:3:16"},"nodeType":"YulFunctionCall","src":"12436:15:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12409:6:16"},"nodeType":"YulFunctionCall","src":"12409:43:16"},"nodeType":"YulExpressionStatement","src":"12409:43:16"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12244:9:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12255:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12263:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12274:4:16","type":""}],"src":"12154:304:16"},{"body":{"nodeType":"YulBlock","src":"12620:188:16","statements":[{"nodeType":"YulAssignment","src":"12630:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12642:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"12653:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12638:3:16"},"nodeType":"YulFunctionCall","src":"12638:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12630:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12672:9:16"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12687:6:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12703:3:16","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"12708:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"12699:3:16"},"nodeType":"YulFunctionCall","src":"12699:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"12712:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12695:3:16"},"nodeType":"YulFunctionCall","src":"12695:19:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12683:3:16"},"nodeType":"YulFunctionCall","src":"12683:32:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12665:6:16"},"nodeType":"YulFunctionCall","src":"12665:51:16"},"nodeType":"YulExpressionStatement","src":"12665:51:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12736:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"12747:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12732:3:16"},"nodeType":"YulFunctionCall","src":"12732:18:16"},{"name":"value1","nodeType":"YulIdentifier","src":"12752:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12725:6:16"},"nodeType":"YulFunctionCall","src":"12725:34:16"},"nodeType":"YulExpressionStatement","src":"12725:34:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12779:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"12790:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12775:3:16"},"nodeType":"YulFunctionCall","src":"12775:18:16"},{"name":"value2","nodeType":"YulIdentifier","src":"12795:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12768:6:16"},"nodeType":"YulFunctionCall","src":"12768:34:16"},"nodeType":"YulExpressionStatement","src":"12768:34:16"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12573:9:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"12584:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12592:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12600:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12611:4:16","type":""}],"src":"12463:345:16"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_array_uint256_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_array_uint256_dyn(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_array_address_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function abi_decode_array_uint256_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let srcEnd := add(add(offset, shl(5, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        let _4 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_3))\n        let dst_1 := dst\n        mstore(dst, _3)\n        dst := add(dst, _4)\n        let srcEnd := add(add(_2, shl(5, _3)), _4)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_2, _4)\n        for { } lt(src, srcEnd) { src := add(src, _4) }\n        {\n            mstore(dst, abi_decode_address(src))\n            dst := add(dst, _4)\n        }\n        value0 := dst_1\n        let offset_1 := calldataload(add(headStart, _4))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$729__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_uint256t_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := abi_decode_address(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_a33b7e37ceeda7c914335f861b2f9f6b02bcf2d319b05a9ff35d5b6ba6af4bfb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 48)\n        mstore(add(headStart, 64), \"the lens of amount and token_add\")\n        mstore(add(headStart, 96), \" should be equal\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_3dcfaa7b26cd9b2e7d0bcb018b106caeaeb81724fcb90f6955e6b49805c7b7c1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Transfer token0 failed\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        let tail_1 := add(headStart, 64)\n        mstore(headStart, 64)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 96)\n        let _1 := 0x20\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        mstore(add(headStart, _1), sub(pos, headStart))\n        tail := abi_encode_array_uint256_dyn(value1, pos)\n    }\n    function abi_encode_tuple_t_stringliteral_027a4645d52999467d532b08294cf4ab88552e8e8054f1574513efbdd121a3e3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 11)\n        mstore(add(headStart, 64), \"Same tokens\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_56a242703b1539558b0d109cfcb28b8a34a30bc5a66436384a025ef1b35eb3dd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"tokenIn not in i_tokens_map\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_80501303dea0e00b4f0fdd2002f8e97e93d67534e40aed39444d7f3d32212699__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"tokenOut not in i_tokens_map\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_499f3f4b0ad3588aa1eb6e198be77bff643a4218ffbf2bef1370e58aadea5df4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 11)\n        mstore(add(headStart, 64), \"Zero amount\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c26370c748e399efe4c5a302d20f1fe22da5300fc60bdab39924790733506945__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 11)\n        mstore(add(headStart, 64), \"Swap Failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n}","id":16,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061012c5760003560e01c806370a08231116100ad578063d5b271f511610071578063d5b271f5146102a3578063dd62ed3e146102c3578063e5a86833146102fc578063eaa91a3d1461030f578063ff9c8ac61461032257600080fd5b806370a082311461023957806395d89b4114610262578063a9059cbb1461026a578063c45a01551461027d578063cbd01fa41461029057600080fd5b806323b872dd116100f457806323b872dd146101b9578063313ce567146101cc578063345f5557146101db578063523fba7f146102065780636d069a671461022657600080fd5b806306fdde0314610131578063095ea7b31461014f5780631371a9571461017257806318160ddd146101925780631d978bd2146101a4575b600080fd5b610139610335565b6040516101469190611358565b60405180910390f35b61016261015d3660046113c2565b6103c7565b6040519015158152602001610146565b6101856101803660046113ec565b6103e1565b6040516101469190611440565b6002545b604051908152602001610146565b6101b76101b2366004611530565b610563565b005b6101626101c73660046115f0565b610863565b60405160128152602001610146565b6101ee6101e93660046113ec565b610887565b6040516001600160a01b039091168152602001610146565b61019661021436600461162c565b600b6020526000908152604090205481565b6101b7610234366004611647565b6108b1565b61019661024736600461162c565b6001600160a01b031660009081526020819052604090205490565b610139610c31565b6101626102783660046113c2565b610c40565b6009546101ee906001600160a01b031681565b61019661029e3660046113ec565b610c4e565b6101966102b136600461162c565b60086020526000908152604090205481565b6101966102d1366004611683565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6101b761030a366004611530565b610c6f565b6101ee61031d3660046113ec565b610f78565b610196610330366004611647565b610f88565b606060038054610344906116b6565b80601f0160208091040260200160405190810160405280929190818152602001828054610370906116b6565b80156103bd5780601f10610392576101008083540402835291602001916103bd565b820191906000526020600020905b8154815290600101906020018083116103a057829003601f168201915b5050505050905090565b6000336103d5818585610fd8565b60019150505b92915050565b60075460609060008167ffffffffffffffff8111156104025761040261145a565b60405190808252806020026020018201604052801561042b578160200160208202803683370190505b5090506000600b60006007600081548110610448576104486116f0565b60009182526020808320909101546001600160a01b03168352820192909252604001902054905060015b8381101561053b5760006007828154811061048f5761048f6116f0565b60009182526020808320909101546001600160a01b0316808352600b9091526040822054909250908181036104ee57600a84815481106104d1576104d16116f0565b9060005260206000200154896104e7919061171c565b9050610506565b816104f9868b61171c565b6105039190611733565b90505b80868581518110610519576105196116f0565b602002602001018181525050505050808061053390611755565b915050610472565b508482600081518110610550576105506116f0565b6020908102919091010152509392505050565b805182511461058d5760405162461bcd60e51b81526004016105849061176e565b60405180910390fd5b60008061059960025490565b111561061b57600b600060076000815481106105b7576105b76116f0565b60009182526020808320909101546001600160a01b031683528201929092526040019020546105e560025490565b836000815181106105f8576105f86116f0565b602002602001015161060a919061171c565b6106149190611733565b9050610639565b8160008151811061062e5761062e6116f0565b602002602001015190505b6106433382610fe5565b825160005b81811015610823576000858281518110610664576106646116f0565b60200260200101519050600060086000836001600160a01b03166001600160a01b031681526020019081526020016000205490506000600682815481106106ad576106ad6116f0565b9060005260206000200160009054906101000a90046001600160a01b03169050806001600160a01b03166323b872dd33308a88815181106106f0576106f06116f0565b60209081029190910101516040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015260448201526064016020604051808303816000875af115801561074f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077391906117be565b6107b85760405162461bcd60e51b8152602060048201526016602482015275151c985b9cd9995c881d1bdad95b8c0819985a5b195960521b6044820152606401610584565b8684815181106107ca576107ca6116f0565b6020026020010151600b6000856001600160a01b03166001600160a01b03168152602001908152602001600020600082825461080691906117e0565b92505081905550505050808061081b90611755565b915050610648565b507f7f63fc1ab7d4b22633cca91cd87319f6e7b3229ace7baa90f114b15f33e847ae84846040516108559291906117f3565b60405180910390a150505050565b60003361087185828561101b565b61087c85858561109a565b506001949350505050565b6006818154811061089757600080fd5b6000918252602090912001546001600160a01b0316905081565b6108b96110f9565b806001600160a01b0316836001600160a01b0316036109085760405162461bcd60e51b815260206004820152600b60248201526a53616d6520746f6b656e7360a81b6044820152606401610584565b6001600160a01b038316600090815260086020526040812054900361096f5760405162461bcd60e51b815260206004820152601b60248201527f746f6b656e496e206e6f7420696e20695f746f6b656e735f6d617000000000006044820152606401610584565b6001600160a01b03811660009081526008602052604081205490036109d65760405162461bcd60e51b815260206004820152601c60248201527f746f6b656e4f7574206e6f7420696e20695f746f6b656e735f6d6170000000006044820152606401610584565b60008211610a145760405162461bcd60e51b815260206004820152600b60248201526a16995c9bc8185b5bdd5b9d60aa1b6044820152606401610584565b6000610a21848484610f88565b6040516323b872dd60e01b8152336004820152306024820152604481018590529091506001600160a01b038516906323b872dd906064016020604051808303816000875af1158015610a77573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9b91906117be565b610ad55760405162461bcd60e51b815260206004820152600b60248201526a14ddd85c0811985a5b195960aa1b6044820152606401610584565b60405163a9059cbb60e01b8152336004820152602481018290526001600160a01b0383169063a9059cbb906044016020604051808303816000875af1158015610b22573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b4691906117be565b610b805760405162461bcd60e51b815260206004820152600b60248201526a14ddd85c0811985a5b195960aa1b6044820152606401610584565b6001600160a01b0384166000908152600b602052604081208054859290610ba8908490611853565b90915550506001600160a01b0382166000908152600b602052604081208054839290610bd59084906117e0565b9091555050604080516001600160a01b03808716825284166020820152829185917fdb587d878116df0bdd4fe154699aa2c5f439da001cc811dfd05d9f589fc5a8ee910160405180910390a350610c2c6001600555565b505050565b606060048054610344906116b6565b6000336103d581858561109a565b600a8181548110610c5e57600080fd5b600091825260209091200154905081565b610c776110f9565b8051825114610c985760405162461bcd60e51b81526004016105849061176e565b600080610ca460025490565b1115610d2657600b60006007600081548110610cc257610cc26116f0565b60009182526020808320909101546001600160a01b03168352820192909252604001902054610cf060025490565b83600081518110610d0357610d036116f0565b6020026020010151610d15919061171c565b610d1f9190611733565b9050610d44565b81600081518110610d3957610d396116f0565b602002602001015190505b610d4e3382611123565b825160005b81811015610f2e576000858281518110610d6f57610d6f6116f0565b60200260200101519050600060086000836001600160a01b03166001600160a01b03168152602001908152602001600020549050600060068281548110610db857610db86116f0565b9060005260206000200160009054906101000a90046001600160a01b03169050806001600160a01b03166323b872dd33308a8881518110610dfb57610dfb6116f0565b60209081029190910101516040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015260448201526064016020604051808303816000875af1158015610e5a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e7e91906117be565b610ec35760405162461bcd60e51b8152602060048201526016602482015275151c985b9cd9995c881d1bdad95b8c0819985a5b195960521b6044820152606401610584565b868481518110610ed557610ed56116f0565b6020026020010151600b6000856001600160a01b03166001600160a01b031681526020019081526020016000206000828254610f119190611853565b925050819055505050508080610f2690611755565b915050610d53565b507fb1b40d6e24db4f4144d860844c12ef0cee735402334d5e8682124a4c03bce4c78484604051610f609291906117f3565b60405180910390a15050610f746001600555565b5050565b6007818154811061089757600080fd5b6001600160a01b038082166000908152600b602052604080822054928616825281205490919082610fb98683611853565b610fc3878561171c565b610fcd9190611733565b979650505050505050565b610c2c8383836001611159565b6001600160a01b03821661100f57604051634b637e8f60e11b815260006004820152602401610584565b610f748260008361122e565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811015611094578181101561108557604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610584565b61109484848484036000611159565b50505050565b6001600160a01b0383166110c457604051634b637e8f60e11b815260006004820152602401610584565b6001600160a01b0382166110ee5760405163ec442f0560e01b815260006004820152602401610584565b610c2c83838361122e565b60026005540361111c57604051633ee5aeb560e01b815260040160405180910390fd5b6002600555565b6001600160a01b03821661114d5760405163ec442f0560e01b815260006004820152602401610584565b610f746000838361122e565b6001600160a01b0384166111835760405163e602df0560e01b815260006004820152602401610584565b6001600160a01b0383166111ad57604051634a1406b160e11b815260006004820152602401610584565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561109457826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161122091815260200190565b60405180910390a350505050565b6001600160a01b03831661125957806002600082825461124e9190611853565b909155506112cb9050565b6001600160a01b038316600090815260208190526040902054818110156112ac5760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610584565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166112e757600280548290039055611306565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161134b91815260200190565b60405180910390a3505050565b600060208083528351808285015260005b8181101561138557858101830151858201604001528201611369565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146113bd57600080fd5b919050565b600080604083850312156113d557600080fd5b6113de836113a6565b946020939093013593505050565b6000602082840312156113fe57600080fd5b5035919050565b600081518084526020808501945080840160005b8381101561143557815187529582019590820190600101611419565b509495945050505050565b6020815260006114536020830184611405565b9392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156114995761149961145a565b604052919050565b600067ffffffffffffffff8211156114bb576114bb61145a565b5060051b60200190565b600082601f8301126114d657600080fd5b813560206114eb6114e6836114a1565b611470565b82815260059290921b8401810191818101908684111561150a57600080fd5b8286015b84811015611525578035835291830191830161150e565b509695505050505050565b6000806040838503121561154357600080fd5b823567ffffffffffffffff8082111561155b57600080fd5b818501915085601f83011261156f57600080fd5b8135602061157f6114e6836114a1565b82815260059290921b8401810191818101908984111561159e57600080fd5b948201945b838610156115c3576115b4866113a6565b825294820194908201906115a3565b965050860135925050808211156115d957600080fd5b506115e6858286016114c5565b9150509250929050565b60008060006060848603121561160557600080fd5b61160e846113a6565b925061161c602085016113a6565b9150604084013590509250925092565b60006020828403121561163e57600080fd5b611453826113a6565b60008060006060848603121561165c57600080fd5b611665846113a6565b92506020840135915061167a604085016113a6565b90509250925092565b6000806040838503121561169657600080fd5b61169f836113a6565b91506116ad602084016113a6565b90509250929050565b600181811c908216806116ca57607f821691505b6020821081036116ea57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176103db576103db611706565b60008261175057634e487b7160e01b600052601260045260246000fd5b500490565b60006001820161176757611767611706565b5060010190565b60208082526030908201527f746865206c656e73206f6620616d6f756e7420616e6420746f6b656e5f61646460408201526f081cda1bdd5b1908189948195c5d585b60821b606082015260800190565b6000602082840312156117d057600080fd5b8151801515811461145357600080fd5b818103818111156103db576103db611706565b604080825283519082018190526000906020906060840190828701845b828110156118355781516001600160a01b031684529284019290840190600101611810565b505050838103828501526118498186611405565b9695505050505050565b808201808211156103db576103db61170656fea2646970667358221220c7ed7a53e7a7fcfdc1042d914bbababd5040a014f69d4fb7894bce403d5c904c64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xD5B271F5 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD5B271F5 EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2C3 JUMPI DUP1 PUSH4 0xE5A86833 EQ PUSH2 0x2FC JUMPI DUP1 PUSH4 0xEAA91A3D EQ PUSH2 0x30F JUMPI DUP1 PUSH4 0xFF9C8AC6 EQ PUSH2 0x322 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x262 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x27D JUMPI DUP1 PUSH4 0xCBD01FA4 EQ PUSH2 0x290 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B9 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1CC JUMPI DUP1 PUSH4 0x345F5557 EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x523FBA7F EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x6D069A67 EQ PUSH2 0x226 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x1371A957 EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0x1D978BD2 EQ PUSH2 0x1A4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x139 PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x1358 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x162 PUSH2 0x15D CALLDATASIZE PUSH1 0x4 PUSH2 0x13C2 JUMP JUMPDEST PUSH2 0x3C7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x146 JUMP JUMPDEST PUSH2 0x185 PUSH2 0x180 CALLDATASIZE PUSH1 0x4 PUSH2 0x13EC JUMP JUMPDEST PUSH2 0x3E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x1440 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x146 JUMP JUMPDEST PUSH2 0x1B7 PUSH2 0x1B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1530 JUMP JUMPDEST PUSH2 0x563 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x162 PUSH2 0x1C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x15F0 JUMP JUMPDEST PUSH2 0x863 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x146 JUMP JUMPDEST PUSH2 0x1EE PUSH2 0x1E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x13EC JUMP JUMPDEST PUSH2 0x887 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x146 JUMP JUMPDEST PUSH2 0x196 PUSH2 0x214 CALLDATASIZE PUSH1 0x4 PUSH2 0x162C JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1B7 PUSH2 0x234 CALLDATASIZE PUSH1 0x4 PUSH2 0x1647 JUMP JUMPDEST PUSH2 0x8B1 JUMP JUMPDEST PUSH2 0x196 PUSH2 0x247 CALLDATASIZE PUSH1 0x4 PUSH2 0x162C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x139 PUSH2 0xC31 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x278 CALLDATASIZE PUSH1 0x4 PUSH2 0x13C2 JUMP JUMPDEST PUSH2 0xC40 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x1EE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x196 PUSH2 0x29E CALLDATASIZE PUSH1 0x4 PUSH2 0x13EC JUMP JUMPDEST PUSH2 0xC4E JUMP JUMPDEST PUSH2 0x196 PUSH2 0x2B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x162C JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x196 PUSH2 0x2D1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1683 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1B7 PUSH2 0x30A CALLDATASIZE PUSH1 0x4 PUSH2 0x1530 JUMP JUMPDEST PUSH2 0xC6F JUMP JUMPDEST PUSH2 0x1EE PUSH2 0x31D CALLDATASIZE PUSH1 0x4 PUSH2 0x13EC JUMP JUMPDEST PUSH2 0xF78 JUMP JUMPDEST PUSH2 0x196 PUSH2 0x330 CALLDATASIZE PUSH1 0x4 PUSH2 0x1647 JUMP JUMPDEST PUSH2 0xF88 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x344 SWAP1 PUSH2 0x16B6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x370 SWAP1 PUSH2 0x16B6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3BD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x392 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3BD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3A0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x3D5 DUP2 DUP6 DUP6 PUSH2 0xFD8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x402 JUMPI PUSH2 0x402 PUSH2 0x145A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x42B JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 PUSH1 0xB PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0x448 JUMPI PUSH2 0x448 PUSH2 0x16F0 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD SWAP1 POP PUSH1 0x1 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x53B JUMPI PUSH1 0x0 PUSH1 0x7 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x48F JUMPI PUSH2 0x48F PUSH2 0x16F0 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 DUP4 MSTORE PUSH1 0xB SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD SWAP1 SWAP3 POP SWAP1 DUP2 DUP2 SUB PUSH2 0x4EE JUMPI PUSH1 0xA DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x4D1 JUMPI PUSH2 0x4D1 PUSH2 0x16F0 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP10 PUSH2 0x4E7 SWAP2 SWAP1 PUSH2 0x171C JUMP JUMPDEST SWAP1 POP PUSH2 0x506 JUMP JUMPDEST DUP2 PUSH2 0x4F9 DUP7 DUP12 PUSH2 0x171C JUMP JUMPDEST PUSH2 0x503 SWAP2 SWAP1 PUSH2 0x1733 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP1 DUP7 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x519 JUMPI PUSH2 0x519 PUSH2 0x16F0 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP POP POP POP DUP1 DUP1 PUSH2 0x533 SWAP1 PUSH2 0x1755 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x472 JUMP JUMPDEST POP DUP5 DUP3 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x550 JUMPI PUSH2 0x550 PUSH2 0x16F0 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x58D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x584 SWAP1 PUSH2 0x176E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x599 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST GT ISZERO PUSH2 0x61B JUMPI PUSH1 0xB PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0x5B7 JUMPI PUSH2 0x5B7 PUSH2 0x16F0 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD PUSH2 0x5E5 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST DUP4 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x5F8 JUMPI PUSH2 0x5F8 PUSH2 0x16F0 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x60A SWAP2 SWAP1 PUSH2 0x171C JUMP JUMPDEST PUSH2 0x614 SWAP2 SWAP1 PUSH2 0x1733 JUMP JUMPDEST SWAP1 POP PUSH2 0x639 JUMP JUMPDEST DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x62E JUMPI PUSH2 0x62E PUSH2 0x16F0 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x643 CALLER DUP3 PUSH2 0xFE5 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x823 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x664 JUMPI PUSH2 0x664 PUSH2 0x16F0 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x6AD JUMPI PUSH2 0x6AD PUSH2 0x16F0 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD CALLER ADDRESS DUP11 DUP9 DUP2 MLOAD DUP2 LT PUSH2 0x6F0 JUMPI PUSH2 0x6F0 PUSH2 0x16F0 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP7 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x74F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x773 SWAP2 SWAP1 PUSH2 0x17BE JUMP JUMPDEST PUSH2 0x7B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x151C985B9CD9995C881D1BDAD95B8C0819985A5B1959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x584 JUMP JUMPDEST DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x7CA JUMPI PUSH2 0x7CA PUSH2 0x16F0 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xB PUSH1 0x0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x806 SWAP2 SWAP1 PUSH2 0x17E0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 DUP1 PUSH2 0x81B SWAP1 PUSH2 0x1755 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x648 JUMP JUMPDEST POP PUSH32 0x7F63FC1AB7D4B22633CCA91CD87319F6E7B3229ACE7BAA90F114B15F33E847AE DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x855 SWAP3 SWAP2 SWAP1 PUSH2 0x17F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x871 DUP6 DUP3 DUP6 PUSH2 0x101B JUMP JUMPDEST PUSH2 0x87C DUP6 DUP6 DUP6 PUSH2 0x109A JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x897 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH2 0x8B9 PUSH2 0x10F9 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x908 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x53616D6520746F6B656E73 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x584 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x96F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x746F6B656E496E206E6F7420696E20695F746F6B656E735F6D61700000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x584 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x9D6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x746F6B656E4F7574206E6F7420696E20695F746F6B656E735F6D617000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x584 JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0xA14 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x16995C9BC8185B5BDD5B9D PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x584 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA21 DUP5 DUP5 DUP5 PUSH2 0xF88 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA77 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA9B SWAP2 SWAP1 PUSH2 0x17BE JUMP JUMPDEST PUSH2 0xAD5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x14DDD85C0811985A5B1959 PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x584 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB22 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB46 SWAP2 SWAP1 PUSH2 0x17BE JUMP JUMPDEST PUSH2 0xB80 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x14DDD85C0811985A5B1959 PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x584 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0xBA8 SWAP1 DUP5 SWAP1 PUSH2 0x1853 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xBD5 SWAP1 DUP5 SWAP1 PUSH2 0x17E0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE DUP3 SWAP2 DUP6 SWAP2 PUSH32 0xDB587D878116DF0BDD4FE154699AA2C5F439DA001CC811DFD05D9F589FC5A8EE SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH2 0xC2C PUSH1 0x1 PUSH1 0x5 SSTORE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x344 SWAP1 PUSH2 0x16B6 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x3D5 DUP2 DUP6 DUP6 PUSH2 0x109A JUMP JUMPDEST PUSH1 0xA DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xC5E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH2 0xC77 PUSH2 0x10F9 JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0xC98 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x584 SWAP1 PUSH2 0x176E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xCA4 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST GT ISZERO PUSH2 0xD26 JUMPI PUSH1 0xB PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0xCC2 JUMPI PUSH2 0xCC2 PUSH2 0x16F0 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD PUSH2 0xCF0 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST DUP4 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xD03 JUMPI PUSH2 0xD03 PUSH2 0x16F0 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0xD15 SWAP2 SWAP1 PUSH2 0x171C JUMP JUMPDEST PUSH2 0xD1F SWAP2 SWAP1 PUSH2 0x1733 JUMP JUMPDEST SWAP1 POP PUSH2 0xD44 JUMP JUMPDEST DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xD39 JUMPI PUSH2 0xD39 PUSH2 0x16F0 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0xD4E CALLER DUP3 PUSH2 0x1123 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xF2E JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xD6F JUMPI PUSH2 0xD6F PUSH2 0x16F0 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xDB8 JUMPI PUSH2 0xDB8 PUSH2 0x16F0 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD CALLER ADDRESS DUP11 DUP9 DUP2 MLOAD DUP2 LT PUSH2 0xDFB JUMPI PUSH2 0xDFB PUSH2 0x16F0 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP7 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE5A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE7E SWAP2 SWAP1 PUSH2 0x17BE JUMP JUMPDEST PUSH2 0xEC3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x151C985B9CD9995C881D1BDAD95B8C0819985A5B1959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x584 JUMP JUMPDEST DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xED5 JUMPI PUSH2 0xED5 PUSH2 0x16F0 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xB PUSH1 0x0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xF11 SWAP2 SWAP1 PUSH2 0x1853 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 DUP1 PUSH2 0xF26 SWAP1 PUSH2 0x1755 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xD53 JUMP JUMPDEST POP PUSH32 0xB1B40D6E24DB4F4144D860844C12EF0CEE735402334D5E8682124A4C03BCE4C7 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0xF60 SWAP3 SWAP2 SWAP1 PUSH2 0x17F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP PUSH2 0xF74 PUSH1 0x1 PUSH1 0x5 SSTORE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x7 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x897 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD SWAP3 DUP7 AND DUP3 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP3 PUSH2 0xFB9 DUP7 DUP4 PUSH2 0x1853 JUMP JUMPDEST PUSH2 0xFC3 DUP8 DUP6 PUSH2 0x171C JUMP JUMPDEST PUSH2 0xFCD SWAP2 SWAP1 PUSH2 0x1733 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xC2C DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1159 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x100F JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x584 JUMP JUMPDEST PUSH2 0xF74 DUP3 PUSH1 0x0 DUP4 PUSH2 0x122E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 LT ISZERO PUSH2 0x1094 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1085 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x584 JUMP JUMPDEST PUSH2 0x1094 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x1159 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x10C4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x584 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x10EE JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x584 JUMP JUMPDEST PUSH2 0xC2C DUP4 DUP4 DUP4 PUSH2 0x122E JUMP JUMPDEST PUSH1 0x2 PUSH1 0x5 SLOAD SUB PUSH2 0x111C JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x114D JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x584 JUMP JUMPDEST PUSH2 0xF74 PUSH1 0x0 DUP4 DUP4 PUSH2 0x122E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1183 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x584 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x11AD JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x584 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x1094 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1220 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1259 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x124E SWAP2 SWAP1 PUSH2 0x1853 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x12CB SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x12AC JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x584 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x12E7 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x1306 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x134B SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1385 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x1369 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x13BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13DE DUP4 PUSH2 0x13A6 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1435 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1419 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1453 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1405 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1499 JUMPI PUSH2 0x1499 PUSH2 0x145A JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x14BB JUMPI PUSH2 0x14BB PUSH2 0x145A JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x14D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x14EB PUSH2 0x14E6 DUP4 PUSH2 0x14A1 JUMP JUMPDEST PUSH2 0x1470 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x150A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x1525 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x150E JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1543 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x155B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x156F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x157F PUSH2 0x14E6 DUP4 PUSH2 0x14A1 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP10 DUP5 GT ISZERO PUSH2 0x159E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x15C3 JUMPI PUSH2 0x15B4 DUP7 PUSH2 0x13A6 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0x15A3 JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x15D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15E6 DUP6 DUP3 DUP7 ADD PUSH2 0x14C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1605 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x160E DUP5 PUSH2 0x13A6 JUMP JUMPDEST SWAP3 POP PUSH2 0x161C PUSH1 0x20 DUP6 ADD PUSH2 0x13A6 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x163E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1453 DUP3 PUSH2 0x13A6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x165C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1665 DUP5 PUSH2 0x13A6 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH2 0x167A PUSH1 0x40 DUP6 ADD PUSH2 0x13A6 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1696 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x169F DUP4 PUSH2 0x13A6 JUMP JUMPDEST SWAP2 POP PUSH2 0x16AD PUSH1 0x20 DUP5 ADD PUSH2 0x13A6 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x16CA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x16EA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x3DB JUMPI PUSH2 0x3DB PUSH2 0x1706 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1750 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1767 JUMPI PUSH2 0x1767 PUSH2 0x1706 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x30 SWAP1 DUP3 ADD MSTORE PUSH32 0x746865206C656E73206F6620616D6F756E7420616E6420746F6B656E5F616464 PUSH1 0x40 DUP3 ADD MSTORE PUSH16 0x81CDA1BDD5B1908189948195C5D585B PUSH1 0x82 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1453 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x3DB JUMPI PUSH2 0x3DB PUSH2 0x1706 JUMP JUMPDEST PUSH1 0x40 DUP1 DUP3 MSTORE DUP4 MLOAD SWAP1 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x20 SWAP1 PUSH1 0x60 DUP5 ADD SWAP1 DUP3 DUP8 ADD DUP5 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1835 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1810 JUMP JUMPDEST POP POP POP DUP4 DUP2 SUB DUP3 DUP6 ADD MSTORE PUSH2 0x1849 DUP2 DUP7 PUSH2 0x1405 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x3DB JUMPI PUSH2 0x3DB PUSH2 0x1706 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 0xED PUSH27 0x53E7A7FCFDC1042D914BBABABD5040A014F69D4FB7894BCE403D5C SWAP1 0x4C PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"463:8248:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:16;;1162:22;1144:41;;1132:2;1117:18;3998:186:1;1004:187:16;4703:863:14;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2849:97:1:-;2927:12;;2849:97;;;2233:25:16;;;2221:2;2206:18;2849:97:1;2087:177:16;6958:1308:14;;;;;;:::i;:::-;;:::i;:::-;;4776:244:1;;;;;;:::i;:::-;;:::i;2707:82::-;;;2780:2;5162:36:16;;5150:2;5135:18;2707:82:1;5020:184:16;535:25:14;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;5387:32:16;;;5369:51;;5357:2;5342:18;535:25:14;5209:217:16;1298:48:14;;;;;;:::i;:::-;;;;;;;;;;;;;;3389:1208;;;;;;:::i;:::-;;:::i;3004:116:1:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3095:18:1;3069:7;3095:18;;;;;;;;;;;;3004:116;1981:93;;;:::i;3315:178::-;;;;;;:::i;:::-;;:::i;790:23:14:-;;;;;-1:-1:-1;;;;;790:23:14;;;1122:42;;;;;;:::i;:::-;;:::i;689:47::-;;;;;;:::i;:::-;;;;;;;;;;;;;;3551:140:1;;;;;;:::i;:::-;-1:-1:-1;;;;;3657:18:1;;;3631:7;3657:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3551:140;5574:1297:14;;;;;;:::i;:::-;;:::i;588:36::-;;;;;;:::i;:::-;;:::i;2765:616::-;;;;;;:::i;:::-;;:::i;1779:89:1:-;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;735:10:4;4125:31:1;735:10:4;4141:7:1;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;;:::o;4703:863:14:-;4886:18;:25;4769:16;;4869:14;4886:25;4955:21;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4955:21:14;;4922:54;;4987:16;5006:13;:36;5020:18;5039:1;5020:21;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;5020:21:14;5006:36;;;;;;;;;;;;;;-1:-1:-1;5020:21:14;5055:434;5079:6;5075:1;:10;5055:434;;;5121:17;5141:18;5160:1;5141:21;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;5141:21:14;5193:24;;;:13;:24;;;;;;;5141:21;;-1:-1:-1;5193:24:14;5265:10;;;5261:177;;5315:13;5329:1;5315:16;;;;;;;;:::i;:::-;;;;;;;;;5305:7;:26;;;;:::i;:::-;5296:35;;5261:177;;;5417:5;5394:17;5403:8;5394:7;:17;:::i;:::-;5393:29;;;;:::i;:::-;5384:38;;5261:177;5471:6;5452:13;5466:1;5452:16;;;;;;;;:::i;:::-;;;;;;:25;;;;;5092:397;;;5087:3;;;;;:::i;:::-;;;;5055:434;;;;5518:7;5499:13;5513:1;5499:16;;;;;;;;:::i;:::-;;;;;;;;;;:26;-1:-1:-1;5543:13:14;4703:863;-1:-1:-1;;;4703:863:14:o;6958:1308::-;7089:7;:14;7069:9;:16;:34;7060:96;;;;-1:-1:-1;;;7060:96:14;;;;;;;:::i;:::-;;;;;;;;;7169:16;7361:1;7345:13;2927:12:1;;;2849:97;7345:13:14;:17;7341:278;;;7455:13;:36;7469:18;7488:1;7469:21;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;7469:21:14;7455:36;;;;;;;;;;;;;7421:13;2927:12:1;;;2849:97;7421:13:14;7408:7;7416:1;7408:10;;;;;;;;:::i;:::-;;;;;;;:26;;;;:::i;:::-;7407:84;;;;:::i;:::-;7379:112;;7341:278;;;7597:7;7605:1;7597:10;;;;;;;;:::i;:::-;;;;;;;7586:21;;7341:278;7629:27;7635:10;7647:8;7629:5;:27::i;:::-;7710:16;;7693:14;7737:430;7761:6;7757:1;:10;7737:430;;;7803:20;7826:9;7836:1;7826:12;;;;;;;;:::i;:::-;;;;;;;7803:35;;7853:10;7866:12;:26;7879:12;-1:-1:-1;;;;;7866:26:14;-1:-1:-1;;;;;7866:26:14;;;;;;;;;;;;;7853:39;;7907:14;7924:8;7933:5;7924:15;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7924:15:14;7907:32;;7982:7;-1:-1:-1;;;;;7982:20:14;;8003:10;8023:4;8030:7;8038:1;8030:10;;;;;;;;:::i;:::-;;;;;;;;;;;7982:59;;-1:-1:-1;;;;;;7982:59:14;;;;;;;-1:-1:-1;;;;;8287:15:16;;;7982:59:14;;;8269:34:16;8339:15;;;;8319:18;;;8312:43;8371:18;;;8364:34;8204:18;;7982:59:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7956:143;;;;-1:-1:-1;;;7956:143:14;;8893:2:16;7956:143:14;;;8875:21:16;8932:2;8912:18;;;8905:30;-1:-1:-1;;;8951:18:16;;;8944:52;9013:18;;7956:143:14;8691:346:16;7956:143:14;8145:7;8153:1;8145:10;;;;;;;;:::i;:::-;;;;;;;8114:13;:27;8128:12;-1:-1:-1;;;;;8114:27:14;-1:-1:-1;;;;;8114:27:14;;;;;;;;;;;;;:41;;;;;;;:::i;:::-;;;;;;;;7774:393;;;7769:3;;;;;:::i;:::-;;;;7737:430;;;;8184:74;8216:9;8240:7;8184:74;;;;;;;:::i;:::-;;;;;;;;7049:1217;;6958:1308;;:::o;4776:244:1:-;4863:4;735:10:4;4919:37:1;4935:4;735:10:4;4950:5:1;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;-1:-1:-1;5009:4:1;;4776:244;-1:-1:-1;;;;4776:244:1:o;535:25:14:-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;535:25:14;;-1:-1:-1;535:25:14;:::o;3389:1208::-;2500:21:6;:19;:21::i;:::-;3574:8:14::1;-1:-1:-1::0;;;;;3563:19:14::1;:7;-1:-1:-1::0;;;;;3563:19:14::1;::::0;3555:43:::1;;;::::0;-1:-1:-1;;;3555:43:14;;10214:2:16;3555:43:14::1;::::0;::::1;10196:21:16::0;10253:2;10233:18;;;10226:30;-1:-1:-1;;;10272:18:16;;;10265:41;10323:18;;3555:43:14::1;10012:335:16::0;3555:43:14::1;-1:-1:-1::0;;;;;3617:21:14;::::1;;::::0;;;:12:::1;:21;::::0;;;;;:26;;3609:66:::1;;;::::0;-1:-1:-1;;;3609:66:14;;10554:2:16;3609:66:14::1;::::0;::::1;10536:21:16::0;10593:2;10573:18;;;10566:30;10632:29;10612:18;;;10605:57;10679:18;;3609:66:14::1;10352:351:16::0;3609:66:14::1;-1:-1:-1::0;;;;;3694:22:14;::::1;;::::0;;;:12:::1;:22;::::0;;;;;:27;;3686:68:::1;;;::::0;-1:-1:-1;;;3686:68:14;;10910:2:16;3686:68:14::1;::::0;::::1;10892:21:16::0;10949:2;10929:18;;;10922:30;10988;10968:18;;;10961:58;11036:18;;3686:68:14::1;10708:352:16::0;3686:68:14::1;3784:1;3773:8;:12;3765:36;;;::::0;-1:-1:-1;;;3765:36:14;;11267:2:16;3765:36:14::1;::::0;::::1;11249:21:16::0;11306:2;11286:18;;;11279:30;-1:-1:-1;;;11325:18:16;;;11318:41;11376:18;;3765:36:14::1;11065:335:16::0;3765:36:14::1;3877:17;3897:41;3910:7;3919:8;3929;3897:12;:41::i;:::-;4120:65;::::0;-1:-1:-1;;;4120:65:14;;4149:10:::1;4120:65;::::0;::::1;8269:34:16::0;4169:4:14::1;8319:18:16::0;;;8312:43;8371:18;;;8364:34;;;3877:61:14;;-1:-1:-1;;;;;;4120:28:14;::::1;::::0;::::1;::::0;8204:18:16;;4120:65:14::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4098:126;;;::::0;-1:-1:-1;;;4098:126:14;;11607:2:16;4098:126:14::1;::::0;::::1;11589:21:16::0;11646:2;11626:18;;;11619:30;-1:-1:-1;;;11665:18:16;;;11658:41;11716:18;;4098:126:14::1;11405:335:16::0;4098:126:14::1;4257:48;::::0;-1:-1:-1;;;4257:48:14;;4283:10:::1;4257:48;::::0;::::1;11919:51:16::0;11986:18;;;11979:34;;;-1:-1:-1;;;;;4257:25:14;::::1;::::0;::::1;::::0;11892:18:16;;4257:48:14::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4235:109;;;::::0;-1:-1:-1;;;4235:109:14;;11607:2:16;4235:109:14::1;::::0;::::1;11589:21:16::0;11646:2;11626:18;;;11619:30;-1:-1:-1;;;11665:18:16;;;11658:41;11716:18;;4235:109:14::1;11405:335:16::0;4235:109:14::1;-1:-1:-1::0;;;;;4390:22:14;::::1;;::::0;;;:13:::1;:22;::::0;;;;:34;;4416:8;;4390:22;:34:::1;::::0;4416:8;;4390:34:::1;:::i;:::-;::::0;;;-1:-1:-1;;;;;;;4435:23:14;::::1;;::::0;;;:13:::1;:23;::::0;;;;:36;;4462:9;;4435:23;:36:::1;::::0;4462:9;;4435:36:::1;:::i;:::-;::::0;;;-1:-1:-1;;4542:47:14::1;::::0;;-1:-1:-1;;;;;12384:15:16;;;12366:34;;12436:15;;12431:2;12416:18;;12409:43;4579:9:14;;4559:8;;4542:47:::1;::::0;12301:18:16;4542:47:14::1;;;;;;;3510:1087;2542:20:6::0;1857:1;3068:7;:21;2888:208;2542:20;3389:1208:14;;;:::o;1981:93:1:-;2028:13;2060:7;2053:14;;;;;:::i;3315:178::-;3384:4;735:10:4;3438:27:1;735:10:4;3455:2:1;3459:5;3438:9;:27::i;1122:42:14:-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1122:42:14;:::o;5574:1297::-;2500:21:6;:19;:21::i;:::-;5710:7:14::1;:14;5690:9;:16;:34;5681:96;;;;-1:-1:-1::0;;;5681:96:14::1;;;;;;;:::i;:::-;5790:16;5982:1:::0;5966:13:::1;2927:12:1::0;;;2849:97;5966:13:14::1;:17;5962:278;;;6076:13;:36;6090:18;6109:1;6090:21;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;;::::1;::::0;-1:-1:-1;;;;;6090:21:14::1;6076:36:::0;;;::::1;::::0;;;;;;;;;6042:13:::1;2927:12:1::0;;;2849:97;6042:13:14::1;6029:7;6037:1;6029:10;;;;;;;;:::i;:::-;;;;;;;:26;;;;:::i;:::-;6028:84;;;;:::i;:::-;6000:112;;5962:278;;;6218:7;6226:1;6218:10;;;;;;;;:::i;:::-;;;;;;;6207:21;;5962:278;6250:27;6256:10;6268:8;6250:5;:27::i;:::-;6331:16:::0;;6314:14:::1;6358:430;6382:6;6378:1;:10;6358:430;;;6424:20;6447:9;6457:1;6447:12;;;;;;;;:::i;:::-;;;;;;;6424:35;;6474:10;6487:12;:26;6500:12;-1:-1:-1::0;;;;;6487:26:14::1;-1:-1:-1::0;;;;;6487:26:14::1;;;;;;;;;;;;;6474:39;;6528:14;6545:8;6554:5;6545:15;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;6545:15:14::1;6528:32;;6603:7;-1:-1:-1::0;;;;;6603:20:14::1;;6624:10;6644:4;6651:7;6659:1;6651:10;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;6603:59:::1;::::0;-1:-1:-1;;;;;;6603:59:14::1;::::0;;;;;;-1:-1:-1;;;;;8287:15:16;;;6603:59:14::1;::::0;::::1;8269:34:16::0;8339:15;;;;8319:18;;;8312:43;8371:18;;;8364:34;8204:18;;6603:59:14::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6577:143;;;::::0;-1:-1:-1;;;6577:143:14;;8893:2:16;6577:143:14::1;::::0;::::1;8875:21:16::0;8932:2;8912:18;;;8905:30;-1:-1:-1;;;8951:18:16;;;8944:52;9013:18;;6577:143:14::1;8691:346:16::0;6577:143:14::1;6766:7;6774:1;6766:10;;;;;;;;:::i;:::-;;;;;;;6735:13;:27;6749:12;-1:-1:-1::0;;;;;6735:27:14::1;-1:-1:-1::0;;;;;6735:27:14::1;;;;;;;;;;;;;:41;;;;;;;:::i;:::-;;;;;;;;6395:393;;;6390:3;;;;;:::i;:::-;;;;6358:430;;;;6805:58;6834:9;6845:7;6805:58;;;;;;;:::i;:::-;;;;;;;;5670:1201;;2542:20:6::0;1857:1;3068:7;:21;2888:208;2542:20;5574:1297:14;;:::o;588:36::-;;;;;;;;;;;;2765:616;-1:-1:-1;;;;;2936:23:14;;;2895:7;2936:23;;;:13;:23;;;;;;;3022:22;;;;;;;;2895:7;;2936:23;2895:7;3323:20;3335:8;3022:22;3323:20;:::i;:::-;3297:21;3310:8;3297:10;:21;:::i;:::-;3296:48;;;;:::i;:::-;3276:68;2765:616;-1:-1:-1;;;;;;;2765:616:14:o;8726:128:1:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;7984:206::-;-1:-1:-1;;;;;8054:21:1;;8050:89;;8098:30;;-1:-1:-1;;;8098:30:1;;8125:1;8098:30;;;5369:51:16;5342:18;;8098:30:1;5209:217:16;8050:89:1;8148:35;8156:7;8173:1;8177:5;8148:7;:35::i;10415:476::-;-1:-1:-1;;;;;3657:18:1;;;10514:24;3657:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10580:36:1;;10576:309;;;10655:5;10636:16;:24;10632:130;;;10687:60;;-1:-1:-1;;;10687:60:1;;-1:-1:-1;;;;;12683:32:16;;10687:60:1;;;12665:51:16;12732:18;;;12725:34;;;12775:18;;;12768:34;;;12638:18;;10687:60:1;12463:345:16;10632:130:1;10803:57;10812:5;10819:7;10847:5;10828:16;:24;10854:5;10803:8;:57::i;:::-;10504:387;10415:476;;;:::o;5393:300::-;-1:-1:-1;;;;;5476:18:1;;5472:86;;5517:30;;-1:-1:-1;;;5517:30:1;;5544:1;5517:30;;;5369:51:16;5342:18;;5517:30:1;5209:217:16;5472:86:1;-1:-1:-1;;;;;5571:16:1;;5567:86;;5610:32;;-1:-1:-1;;;5610:32:1;;5639:1;5610:32;;;5369:51:16;5342:18;;5610:32:1;5209:217:16;5567:86:1;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;2575:307:6:-;1899:1;2702:7;;:18;2698:86;;2743:30;;-1:-1:-1;;;2743:30:6;;;;;;;;;;;2698:86;1899:1;2858:7;:17;2575:307::o;7458:208:1:-;-1:-1:-1;;;;;7528:21:1;;7524:91;;7572:32;;-1:-1:-1;;;7572:32:1;;7601:1;7572:32;;;5369:51:16;5342:18;;7572:32:1;5209:217:16;7524:91:1;7624:35;7640:1;7644:7;7653:5;7624:7;:35::i;9701:432::-;-1:-1:-1;;;;;9813:19:1;;9809:89;;9855:32;;-1:-1:-1;;;9855:32:1;;9884:1;9855:32;;;5369:51:16;5342:18;;9855:32:1;5209:217:16;9809:89:1;-1:-1:-1;;;;;9911:21:1;;9907:90;;9955:31;;-1:-1:-1;;;9955:31:1;;9983:1;9955:31;;;5369:51:16;5342:18;;9955:31:1;5209:217:16;9907:90:1;-1:-1:-1;;;;;10006:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10051:76;;;;10101:7;-1:-1:-1;;;;;10085:31:1;10094:5;-1:-1:-1;;;;;10085:31:1;;10110:5;10085:31;;;;2233:25:16;;2221:2;2206:18;;2087:177;10085:31:1;;;;;;;;9701:432;;;;:::o;6008:1107::-;-1:-1:-1;;;;;6097:18:1;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6093:540:1;;-1:-1:-1;6093:540:1;;-1:-1:-1;;;;;6307:15:1;;6285:19;6307:15;;;;;;;;;;;6340:19;;;6336:115;;;6386:50;;-1:-1:-1;;;6386:50:1;;-1:-1:-1;;;;;12683:32:16;;6386:50:1;;;12665:51:16;12732:18;;;12725:34;;;12775:18;;;12768:34;;;12638:18;;6386:50:1;12463:345:16;6336:115:1;-1:-1:-1;;;;;6571:15:1;;:9;:15;;;;;;;;;;6589:19;;;;6571:37;;6093:540;-1:-1:-1;;;;;6647:16:1;;6643:425;;6810:12;:21;;;;;;;6643:425;;;-1:-1:-1;;;;;7021:13:1;;:9;:13;;;;;;;;;;:22;;;;;;6643:425;7098:2;-1:-1:-1;;;;;7083:25:1;7092:4;-1:-1:-1;;;;;7083:25:1;;7102:5;7083:25;;;;2233::16;;2221:2;2206:18;;2087:177;7083:25:1;;;;;;;;6008:1107;;;:::o;14:548:16:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:16;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:16:o;1196:180::-;1255:6;1308:2;1296:9;1287:7;1283:23;1279:32;1276:52;;;1324:1;1321;1314:12;1276:52;-1:-1:-1;1347:23:16;;1196:180;-1:-1:-1;1196:180:16:o;1381:435::-;1434:3;1472:5;1466:12;1499:6;1494:3;1487:19;1525:4;1554:2;1549:3;1545:12;1538:19;;1591:2;1584:5;1580:14;1612:1;1622:169;1636:6;1633:1;1630:13;1622:169;;;1697:13;;1685:26;;1731:12;;;;1766:15;;;;1658:1;1651:9;1622:169;;;-1:-1:-1;1807:3:16;;1381:435;-1:-1:-1;;;;;1381:435:16:o;1821:261::-;2000:2;1989:9;1982:21;1963:4;2020:56;2072:2;2061:9;2057:18;2049:6;2020:56;:::i;:::-;2012:64;1821:261;-1:-1:-1;;;1821:261:16:o;2269:127::-;2330:10;2325:3;2321:20;2318:1;2311:31;2361:4;2358:1;2351:15;2385:4;2382:1;2375:15;2401:275;2472:2;2466:9;2537:2;2518:13;;-1:-1:-1;;2514:27:16;2502:40;;2572:18;2557:34;;2593:22;;;2554:62;2551:88;;;2619:18;;:::i;:::-;2655:2;2648:22;2401:275;;-1:-1:-1;2401:275:16:o;2681:183::-;2741:4;2774:18;2766:6;2763:30;2760:56;;;2796:18;;:::i;:::-;-1:-1:-1;2841:1:16;2837:14;2853:4;2833:25;;2681:183::o;2869:662::-;2923:5;2976:3;2969:4;2961:6;2957:17;2953:27;2943:55;;2994:1;2991;2984:12;2943:55;3030:6;3017:20;3056:4;3080:60;3096:43;3136:2;3096:43;:::i;:::-;3080:60;:::i;:::-;3174:15;;;3260:1;3256:10;;;;3244:23;;3240:32;;;3205:12;;;;3284:15;;;3281:35;;;3312:1;3309;3302:12;3281:35;3348:2;3340:6;3336:15;3360:142;3376:6;3371:3;3368:15;3360:142;;;3442:17;;3430:30;;3480:12;;;;3393;;3360:142;;;-1:-1:-1;3520:5:16;2869:662;-1:-1:-1;;;;;;2869:662:16:o;3536:1146::-;3654:6;3662;3715:2;3703:9;3694:7;3690:23;3686:32;3683:52;;;3731:1;3728;3721:12;3683:52;3771:9;3758:23;3800:18;3841:2;3833:6;3830:14;3827:34;;;3857:1;3854;3847:12;3827:34;3895:6;3884:9;3880:22;3870:32;;3940:7;3933:4;3929:2;3925:13;3921:27;3911:55;;3962:1;3959;3952:12;3911:55;3998:2;3985:16;4020:4;4044:60;4060:43;4100:2;4060:43;:::i;4044:60::-;4138:15;;;4220:1;4216:10;;;;4208:19;;4204:28;;;4169:12;;;;4244:19;;;4241:39;;;4276:1;4273;4266:12;4241:39;4300:11;;;;4320:148;4336:6;4331:3;4328:15;4320:148;;;4402:23;4421:3;4402:23;:::i;:::-;4390:36;;4353:12;;;;4446;;;;4320:148;;;4487:5;-1:-1:-1;;4530:18:16;;4517:32;;-1:-1:-1;;4561:16:16;;;4558:36;;;4590:1;4587;4580:12;4558:36;;4613:63;4668:7;4657:8;4646:9;4642:24;4613:63;:::i;:::-;4603:73;;;3536:1146;;;;;:::o;4687:328::-;4764:6;4772;4780;4833:2;4821:9;4812:7;4808:23;4804:32;4801:52;;;4849:1;4846;4839:12;4801:52;4872:29;4891:9;4872:29;:::i;:::-;4862:39;;4920:38;4954:2;4943:9;4939:18;4920:38;:::i;:::-;4910:48;;5005:2;4994:9;4990:18;4977:32;4967:42;;4687:328;;;;;:::o;5431:186::-;5490:6;5543:2;5531:9;5522:7;5518:23;5514:32;5511:52;;;5559:1;5556;5549:12;5511:52;5582:29;5601:9;5582:29;:::i;5622:328::-;5699:6;5707;5715;5768:2;5756:9;5747:7;5743:23;5739:32;5736:52;;;5784:1;5781;5774:12;5736:52;5807:29;5826:9;5807:29;:::i;:::-;5797:39;;5883:2;5872:9;5868:18;5855:32;5845:42;;5906:38;5940:2;5929:9;5925:18;5906:38;:::i;:::-;5896:48;;5622:328;;;;;:::o;6163:260::-;6231:6;6239;6292:2;6280:9;6271:7;6267:23;6263:32;6260:52;;;6308:1;6305;6298:12;6260:52;6331:29;6350:9;6331:29;:::i;:::-;6321:39;;6379:38;6413:2;6402:9;6398:18;6379:38;:::i;:::-;6369:48;;6163:260;;;;;:::o;6428:380::-;6507:1;6503:12;;;;6550;;;6571:61;;6625:4;6617:6;6613:17;6603:27;;6571:61;6678:2;6670:6;6667:14;6647:18;6644:38;6641:161;;6724:10;6719:3;6715:20;6712:1;6705:31;6759:4;6756:1;6749:15;6787:4;6784:1;6777:15;6641:161;;6428:380;;;:::o;6813:127::-;6874:10;6869:3;6865:20;6862:1;6855:31;6905:4;6902:1;6895:15;6929:4;6926:1;6919:15;6945:127;7006:10;7001:3;6997:20;6994:1;6987:31;7037:4;7034:1;7027:15;7061:4;7058:1;7051:15;7077:168;7150:9;;;7181;;7198:15;;;7192:22;;7178:37;7168:71;;7219:18;;:::i;7250:217::-;7290:1;7316;7306:132;;7360:10;7355:3;7351:20;7348:1;7341:31;7395:4;7392:1;7385:15;7423:4;7420:1;7413:15;7306:132;-1:-1:-1;7452:9:16;;7250:217::o;7472:135::-;7511:3;7532:17;;;7529:43;;7552:18;;:::i;:::-;-1:-1:-1;7599:1:16;7588:13;;7472:135::o;7612:412::-;7814:2;7796:21;;;7853:2;7833:18;;;7826:30;7892:34;7887:2;7872:18;;7865:62;-1:-1:-1;;;7958:2:16;7943:18;;7936:46;8014:3;7999:19;;7612:412::o;8409:277::-;8476:6;8529:2;8517:9;8508:7;8504:23;8500:32;8497:52;;;8545:1;8542;8535:12;8497:52;8577:9;8571:16;8630:5;8623:13;8616:21;8609:5;8606:32;8596:60;;8652:1;8649;8642:12;9042:128;9109:9;;;9130:11;;;9127:37;;;9144:18;;:::i;9175:832::-;9443:2;9455:21;;;9525:13;;9428:18;;;9547:22;;;9395:4;;9622;;9600:2;9585:18;;;9649:15;;;9395:4;9692:195;9706:6;9703:1;9700:13;9692:195;;;9771:13;;-1:-1:-1;;;;;9767:39:16;9755:52;;9827:12;;;;9862:15;;;;9803:1;9721:9;9692:195;;;9696:3;;;9932:9;9927:3;9923:19;9918:2;9907:9;9903:18;9896:47;9960:41;9997:3;9989:6;9960:41;:::i;:::-;9952:49;9175:832;-1:-1:-1;;;;;;9175:832:16:o;12024:125::-;12089:9;;;12110:10;;;12107:36;;;12123:18;;:::i"},"methodIdentifiers":{"INITIAL_RATIO(uint256)":"cbd01fa4","addLiquidity(address[],uint256[])":"e5a86833","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","factory()":"c45a0155","getAmountOut(address,uint256,address)":"ff9c8ac6","getRequiredAmounts(uint256)":"1371a957","i_tokens(uint256)":"345f5557","i_tokens_addresses(uint256)":"eaa91a3d","i_tokens_map(address)":"d5b271f5","name()":"06fdde03","swap(address,uint256,address)":"6d069a67","symbol()":"95d89b41","tokenBalances(address)":"523fba7f","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","withdrawingliquidity(address[],uint256[])":"1d978bd2"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokens_add\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"token_add\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"AddedLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"Swapped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"token_add\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"WithdrawLiquidity\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"INITIAL_RATIO\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"token_add\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"}],\"name\":\"getRequiredAmounts\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"i_tokens\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"i_tokens_addresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"i_tokens_map\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"}],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"token_add\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"withdrawingliquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Pool.sol\":\"Pool\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/LPToken.sol\":{\"keccak256\":\"0x4048c56d416c225e2b6bff823124926b89bd890cbe4872a882bedce74bd0ba95\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d2747c21d85a7bc0ef661ff314d00c615e7fe8355ea3130635d434c9c34e6bc6\",\"dweb:/ipfs/QmQYyVDNgrkpqpi7jFUoFmH49nbWvwKLExLFL1xQNvUZNX\"]},\"contracts/Pool.sol\":{\"keccak256\":\"0x9d7d7cae4b91989231268bd6a2b084bd48e58ff6fa7e9a952f4265d7777a9490\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2e8a5e24c26c1745fd4fe0d7bd85a93699cbf6eb9b85e67759255263b74aad96\",\"dweb:/ipfs/QmZqPB2woUsjTbYr7mmKusWnBPDVNj6ACYmN9VGHMWgKtE\"]}},\"version\":1}"}},"contracts/TestToken.sol":{"TestToken":{"abi":[{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_188":{"entryPoint":null,"id":188,"parameterSlots":2,"returnSlots":0},"@_6739":{"entryPoint":null,"id":6739,"parameterSlots":2,"returnSlots":0},"abi_decode_string_fromMemory":{"entryPoint":116,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":291,"id":null,"parameterSlots":2,"returnSlots":2},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":457,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":540,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":397,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x41":{"entryPoint":94,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4144:16","statements":[{"nodeType":"YulBlock","src":"6:3:16","statements":[]},{"body":{"nodeType":"YulBlock","src":"46:95:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"63:1:16","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"70:3:16","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"75:10:16","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"66:3:16"},"nodeType":"YulFunctionCall","src":"66:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56:6:16"},"nodeType":"YulFunctionCall","src":"56:31:16"},"nodeType":"YulExpressionStatement","src":"56:31:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"106:4:16","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"96:6:16"},"nodeType":"YulFunctionCall","src":"96:15:16"},"nodeType":"YulExpressionStatement","src":"96:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"127:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"130:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"120:6:16"},"nodeType":"YulFunctionCall","src":"120:15:16"},"nodeType":"YulExpressionStatement","src":"120:15:16"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"14:127:16"},{"body":{"nodeType":"YulBlock","src":"210:776:16","statements":[{"body":{"nodeType":"YulBlock","src":"259:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"268:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"271:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"261:6:16"},"nodeType":"YulFunctionCall","src":"261:12:16"},"nodeType":"YulExpressionStatement","src":"261:12:16"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"238:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"246:4:16","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"234:3:16"},"nodeType":"YulFunctionCall","src":"234:17:16"},{"name":"end","nodeType":"YulIdentifier","src":"253:3:16"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"230:3:16"},"nodeType":"YulFunctionCall","src":"230:27:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"223:6:16"},"nodeType":"YulFunctionCall","src":"223:35:16"},"nodeType":"YulIf","src":"220:55:16"},{"nodeType":"YulVariableDeclaration","src":"284:23:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"300:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"294:5:16"},"nodeType":"YulFunctionCall","src":"294:13:16"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"288:2:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"316:28:16","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"334:2:16","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"338:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"330:3:16"},"nodeType":"YulFunctionCall","src":"330:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"342:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"326:3:16"},"nodeType":"YulFunctionCall","src":"326:18:16"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"320:2:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"367:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"369:16:16"},"nodeType":"YulFunctionCall","src":"369:18:16"},"nodeType":"YulExpressionStatement","src":"369:18:16"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"359:2:16"},{"name":"_2","nodeType":"YulIdentifier","src":"363:2:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"356:2:16"},"nodeType":"YulFunctionCall","src":"356:10:16"},"nodeType":"YulIf","src":"353:36:16"},{"nodeType":"YulVariableDeclaration","src":"398:17:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"412:2:16","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"408:3:16"},"nodeType":"YulFunctionCall","src":"408:7:16"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"402:2:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"424:23:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"444:2:16","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"438:5:16"},"nodeType":"YulFunctionCall","src":"438:9:16"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"428:6:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"456:71:16","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"478:6:16"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"502:2:16"},{"kind":"number","nodeType":"YulLiteral","src":"506:4:16","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"498:3:16"},"nodeType":"YulFunctionCall","src":"498:13:16"},{"name":"_3","nodeType":"YulIdentifier","src":"513:2:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"494:3:16"},"nodeType":"YulFunctionCall","src":"494:22:16"},{"kind":"number","nodeType":"YulLiteral","src":"518:2:16","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"490:3:16"},"nodeType":"YulFunctionCall","src":"490:31:16"},{"name":"_3","nodeType":"YulIdentifier","src":"523:2:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"486:3:16"},"nodeType":"YulFunctionCall","src":"486:40:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"474:3:16"},"nodeType":"YulFunctionCall","src":"474:53:16"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"460:10:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"586:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"588:16:16"},"nodeType":"YulFunctionCall","src":"588:18:16"},"nodeType":"YulExpressionStatement","src":"588:18:16"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"545:10:16"},{"name":"_2","nodeType":"YulIdentifier","src":"557:2:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"542:2:16"},"nodeType":"YulFunctionCall","src":"542:18:16"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"565:10:16"},{"name":"memPtr","nodeType":"YulIdentifier","src":"577:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"562:2:16"},"nodeType":"YulFunctionCall","src":"562:22:16"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"539:2:16"},"nodeType":"YulFunctionCall","src":"539:46:16"},"nodeType":"YulIf","src":"536:72:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"624:2:16","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"628:10:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"617:6:16"},"nodeType":"YulFunctionCall","src":"617:22:16"},"nodeType":"YulExpressionStatement","src":"617:22:16"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"655:6:16"},{"name":"_1","nodeType":"YulIdentifier","src":"663:2:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"648:6:16"},"nodeType":"YulFunctionCall","src":"648:18:16"},"nodeType":"YulExpressionStatement","src":"648:18:16"},{"nodeType":"YulVariableDeclaration","src":"675:14:16","value":{"kind":"number","nodeType":"YulLiteral","src":"685:4:16","type":"","value":"0x20"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"679:2:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"735:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"744:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"747:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"737:6:16"},"nodeType":"YulFunctionCall","src":"737:12:16"},"nodeType":"YulExpressionStatement","src":"737:12:16"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"712:6:16"},{"name":"_1","nodeType":"YulIdentifier","src":"720:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"708:3:16"},"nodeType":"YulFunctionCall","src":"708:15:16"},{"name":"_4","nodeType":"YulIdentifier","src":"725:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"704:3:16"},"nodeType":"YulFunctionCall","src":"704:24:16"},{"name":"end","nodeType":"YulIdentifier","src":"730:3:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"701:2:16"},"nodeType":"YulFunctionCall","src":"701:33:16"},"nodeType":"YulIf","src":"698:53:16"},{"nodeType":"YulVariableDeclaration","src":"760:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"769:1:16","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"764:1:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"825:87:16","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"854:6:16"},{"name":"i","nodeType":"YulIdentifier","src":"862:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"850:3:16"},"nodeType":"YulFunctionCall","src":"850:14:16"},{"name":"_4","nodeType":"YulIdentifier","src":"866:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"846:3:16"},"nodeType":"YulFunctionCall","src":"846:23:16"},{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"885:6:16"},{"name":"i","nodeType":"YulIdentifier","src":"893:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"881:3:16"},"nodeType":"YulFunctionCall","src":"881:14:16"},{"name":"_4","nodeType":"YulIdentifier","src":"897:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"877:3:16"},"nodeType":"YulFunctionCall","src":"877:23:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"871:5:16"},"nodeType":"YulFunctionCall","src":"871:30:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"839:6:16"},"nodeType":"YulFunctionCall","src":"839:63:16"},"nodeType":"YulExpressionStatement","src":"839:63:16"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"790:1:16"},{"name":"_1","nodeType":"YulIdentifier","src":"793:2:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"787:2:16"},"nodeType":"YulFunctionCall","src":"787:9:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"797:19:16","statements":[{"nodeType":"YulAssignment","src":"799:15:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"808:1:16"},{"name":"_4","nodeType":"YulIdentifier","src":"811:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"804:3:16"},"nodeType":"YulFunctionCall","src":"804:10:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"799:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"783:3:16","statements":[]},"src":"779:133:16"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"936:6:16"},{"name":"_1","nodeType":"YulIdentifier","src":"944:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"932:3:16"},"nodeType":"YulFunctionCall","src":"932:15:16"},{"name":"_4","nodeType":"YulIdentifier","src":"949:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"928:3:16"},"nodeType":"YulFunctionCall","src":"928:24:16"},{"kind":"number","nodeType":"YulLiteral","src":"954:1:16","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"921:6:16"},"nodeType":"YulFunctionCall","src":"921:35:16"},"nodeType":"YulExpressionStatement","src":"921:35:16"},{"nodeType":"YulAssignment","src":"965:15:16","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"974:6:16"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"965:5:16"}]}]},"name":"abi_decode_string_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"184:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"192:3:16","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"200:5:16","type":""}],"src":"146:840:16"},{"body":{"nodeType":"YulBlock","src":"1109:444:16","statements":[{"body":{"nodeType":"YulBlock","src":"1155:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1164:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1167:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1157:6:16"},"nodeType":"YulFunctionCall","src":"1157:12:16"},"nodeType":"YulExpressionStatement","src":"1157:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1130:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"1139:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1126:3:16"},"nodeType":"YulFunctionCall","src":"1126:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"1151:2:16","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1122:3:16"},"nodeType":"YulFunctionCall","src":"1122:32:16"},"nodeType":"YulIf","src":"1119:52:16"},{"nodeType":"YulVariableDeclaration","src":"1180:30:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1200:9:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1194:5:16"},"nodeType":"YulFunctionCall","src":"1194:16:16"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1184:6:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1219:28:16","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1237:2:16","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"1241:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1233:3:16"},"nodeType":"YulFunctionCall","src":"1233:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"1245:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1229:3:16"},"nodeType":"YulFunctionCall","src":"1229:18:16"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1223:2:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"1274:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1283:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1286:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1276:6:16"},"nodeType":"YulFunctionCall","src":"1276:12:16"},"nodeType":"YulExpressionStatement","src":"1276:12:16"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1262:6:16"},{"name":"_1","nodeType":"YulIdentifier","src":"1270:2:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1259:2:16"},"nodeType":"YulFunctionCall","src":"1259:14:16"},"nodeType":"YulIf","src":"1256:34:16"},{"nodeType":"YulAssignment","src":"1299:71:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1342:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"1353:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1338:3:16"},"nodeType":"YulFunctionCall","src":"1338:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1362:7:16"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1309:28:16"},"nodeType":"YulFunctionCall","src":"1309:61:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1299:6:16"}]},{"nodeType":"YulVariableDeclaration","src":"1379:41:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1405:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1416:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1401:3:16"},"nodeType":"YulFunctionCall","src":"1401:18:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1395:5:16"},"nodeType":"YulFunctionCall","src":"1395:25:16"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"1383:8:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"1449:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1458:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1461:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1451:6:16"},"nodeType":"YulFunctionCall","src":"1451:12:16"},"nodeType":"YulExpressionStatement","src":"1451:12:16"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"1435:8:16"},{"name":"_1","nodeType":"YulIdentifier","src":"1445:2:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1432:2:16"},"nodeType":"YulFunctionCall","src":"1432:16:16"},"nodeType":"YulIf","src":"1429:36:16"},{"nodeType":"YulAssignment","src":"1474:73:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1517:9:16"},{"name":"offset_1","nodeType":"YulIdentifier","src":"1528:8:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1513:3:16"},"nodeType":"YulFunctionCall","src":"1513:24:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1539:7:16"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1484:28:16"},"nodeType":"YulFunctionCall","src":"1484:63:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1474:6:16"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1067:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1078:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1090:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1098:6:16","type":""}],"src":"991:562:16"},{"body":{"nodeType":"YulBlock","src":"1613:325:16","statements":[{"nodeType":"YulAssignment","src":"1623:22:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1637:1:16","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"1640:4:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1633:3:16"},"nodeType":"YulFunctionCall","src":"1633:12:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1623:6:16"}]},{"nodeType":"YulVariableDeclaration","src":"1654:38:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1684:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"1690:1:16","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1680:3:16"},"nodeType":"YulFunctionCall","src":"1680:12:16"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"1658:18:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"1731:31:16","statements":[{"nodeType":"YulAssignment","src":"1733:27:16","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1747:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"1755:4:16","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1743:3:16"},"nodeType":"YulFunctionCall","src":"1743:17:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1733:6:16"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1711:18:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1704:6:16"},"nodeType":"YulFunctionCall","src":"1704:26:16"},"nodeType":"YulIf","src":"1701:61:16"},{"body":{"nodeType":"YulBlock","src":"1821:111:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1842:1:16","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1849:3:16","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1854:10:16","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1845:3:16"},"nodeType":"YulFunctionCall","src":"1845:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1835:6:16"},"nodeType":"YulFunctionCall","src":"1835:31:16"},"nodeType":"YulExpressionStatement","src":"1835:31:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1886:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1889:4:16","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1879:6:16"},"nodeType":"YulFunctionCall","src":"1879:15:16"},"nodeType":"YulExpressionStatement","src":"1879:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1914:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1917:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1907:6:16"},"nodeType":"YulFunctionCall","src":"1907:15:16"},"nodeType":"YulExpressionStatement","src":"1907:15:16"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1777:18:16"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1800:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"1808:2:16","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1797:2:16"},"nodeType":"YulFunctionCall","src":"1797:14:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1774:2:16"},"nodeType":"YulFunctionCall","src":"1774:38:16"},"nodeType":"YulIf","src":"1771:161:16"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1593:4:16","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1602:6:16","type":""}],"src":"1558:380:16"},{"body":{"nodeType":"YulBlock","src":"1999:65:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2016:1:16","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"2019:3:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2009:6:16"},"nodeType":"YulFunctionCall","src":"2009:14:16"},"nodeType":"YulExpressionStatement","src":"2009:14:16"},{"nodeType":"YulAssignment","src":"2032:26:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2050:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2053:4:16","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2040:9:16"},"nodeType":"YulFunctionCall","src":"2040:18:16"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"2032:4:16"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"1982:3:16","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"1990:4:16","type":""}],"src":"1943:121:16"},{"body":{"nodeType":"YulBlock","src":"2150:464:16","statements":[{"body":{"nodeType":"YulBlock","src":"2183:425:16","statements":[{"nodeType":"YulVariableDeclaration","src":"2197:11:16","value":{"kind":"number","nodeType":"YulLiteral","src":"2207:1:16","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2201:2:16","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2228:2:16"},{"name":"array","nodeType":"YulIdentifier","src":"2232:5:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2221:6:16"},"nodeType":"YulFunctionCall","src":"2221:17:16"},"nodeType":"YulExpressionStatement","src":"2221:17:16"},{"nodeType":"YulVariableDeclaration","src":"2251:31:16","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2273:2:16"},{"kind":"number","nodeType":"YulLiteral","src":"2277:4:16","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2263:9:16"},"nodeType":"YulFunctionCall","src":"2263:19:16"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"2255:4:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2295:57:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2318:4:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2328:1:16","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2335:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"2347:2:16","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2331:3:16"},"nodeType":"YulFunctionCall","src":"2331:19:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2324:3:16"},"nodeType":"YulFunctionCall","src":"2324:27:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2314:3:16"},"nodeType":"YulFunctionCall","src":"2314:38:16"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"2299:11:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"2389:23:16","statements":[{"nodeType":"YulAssignment","src":"2391:19:16","value":{"name":"data","nodeType":"YulIdentifier","src":"2406:4:16"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"2391:11:16"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2371:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"2383:4:16","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2368:2:16"},"nodeType":"YulFunctionCall","src":"2368:20:16"},"nodeType":"YulIf","src":"2365:47:16"},{"nodeType":"YulVariableDeclaration","src":"2425:41:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2439:4:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2449:1:16","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2456:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"2461:2:16","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2452:3:16"},"nodeType":"YulFunctionCall","src":"2452:12:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2445:3:16"},"nodeType":"YulFunctionCall","src":"2445:20:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2435:3:16"},"nodeType":"YulFunctionCall","src":"2435:31:16"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"2429:2:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2479:24:16","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"2492:11:16"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"2483:5:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"2577:21:16","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2586:5:16"},{"name":"_1","nodeType":"YulIdentifier","src":"2593:2:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2579:6:16"},"nodeType":"YulFunctionCall","src":"2579:17:16"},"nodeType":"YulExpressionStatement","src":"2579:17:16"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2527:5:16"},{"name":"_2","nodeType":"YulIdentifier","src":"2534:2:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2524:2:16"},"nodeType":"YulFunctionCall","src":"2524:13:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2538:26:16","statements":[{"nodeType":"YulAssignment","src":"2540:22:16","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2553:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"2560:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2549:3:16"},"nodeType":"YulFunctionCall","src":"2549:13:16"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"2540:5:16"}]}]},"pre":{"nodeType":"YulBlock","src":"2520:3:16","statements":[]},"src":"2516:82:16"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2166:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"2171:2:16","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2163:2:16"},"nodeType":"YulFunctionCall","src":"2163:11:16"},"nodeType":"YulIf","src":"2160:448:16"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"2122:5:16","type":""},{"name":"len","nodeType":"YulTypedName","src":"2129:3:16","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"2134:10:16","type":""}],"src":"2069:545:16"},{"body":{"nodeType":"YulBlock","src":"2704:81:16","statements":[{"nodeType":"YulAssignment","src":"2714:65:16","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2729:4:16"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2747:1:16","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"2750:3:16"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2743:3:16"},"nodeType":"YulFunctionCall","src":"2743:11:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2760:1:16","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2756:3:16"},"nodeType":"YulFunctionCall","src":"2756:6:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2739:3:16"},"nodeType":"YulFunctionCall","src":"2739:24:16"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2735:3:16"},"nodeType":"YulFunctionCall","src":"2735:29:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2725:3:16"},"nodeType":"YulFunctionCall","src":"2725:40:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2771:1:16","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"2774:3:16"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2767:3:16"},"nodeType":"YulFunctionCall","src":"2767:11:16"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2722:2:16"},"nodeType":"YulFunctionCall","src":"2722:57:16"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"2714:4:16"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2681:4:16","type":""},{"name":"len","nodeType":"YulTypedName","src":"2687:3:16","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"2695:4:16","type":""}],"src":"2619:166:16"},{"body":{"nodeType":"YulBlock","src":"2886:1256:16","statements":[{"nodeType":"YulVariableDeclaration","src":"2896:24:16","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2916:3:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2910:5:16"},"nodeType":"YulFunctionCall","src":"2910:10:16"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"2900:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"2963:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2965:16:16"},"nodeType":"YulFunctionCall","src":"2965:18:16"},"nodeType":"YulExpressionStatement","src":"2965:18:16"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"2935:6:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2951:2:16","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"2955:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2947:3:16"},"nodeType":"YulFunctionCall","src":"2947:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"2959:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2943:3:16"},"nodeType":"YulFunctionCall","src":"2943:18:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2932:2:16"},"nodeType":"YulFunctionCall","src":"2932:30:16"},"nodeType":"YulIf","src":"2929:56:16"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3038:4:16"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3076:4:16"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"3070:5:16"},"nodeType":"YulFunctionCall","src":"3070:11:16"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"3044:25:16"},"nodeType":"YulFunctionCall","src":"3044:38:16"},{"name":"newLen","nodeType":"YulIdentifier","src":"3084:6:16"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"2994:43:16"},"nodeType":"YulFunctionCall","src":"2994:97:16"},"nodeType":"YulExpressionStatement","src":"2994:97:16"},{"nodeType":"YulVariableDeclaration","src":"3100:18:16","value":{"kind":"number","nodeType":"YulLiteral","src":"3117:1:16","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"3104:9:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3127:23:16","value":{"kind":"number","nodeType":"YulLiteral","src":"3146:4:16","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"3131:11:16","type":""}]},{"nodeType":"YulAssignment","src":"3159:24:16","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3172:11:16"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3159:9:16"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"3229:656:16","statements":[{"nodeType":"YulVariableDeclaration","src":"3243:35:16","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"3262:6:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3274:2:16","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3270:3:16"},"nodeType":"YulFunctionCall","src":"3270:7:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3258:3:16"},"nodeType":"YulFunctionCall","src":"3258:20:16"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"3247:7:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3291:49:16","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3335:4:16"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"3305:29:16"},"nodeType":"YulFunctionCall","src":"3305:35:16"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"3295:6:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3353:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"3362:1:16","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3357:1:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"3440:172:16","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3465:6:16"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3483:3:16"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"3488:9:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3479:3:16"},"nodeType":"YulFunctionCall","src":"3479:19:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3473:5:16"},"nodeType":"YulFunctionCall","src":"3473:26:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3458:6:16"},"nodeType":"YulFunctionCall","src":"3458:42:16"},"nodeType":"YulExpressionStatement","src":"3458:42:16"},{"nodeType":"YulAssignment","src":"3517:24:16","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3531:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"3539:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3527:3:16"},"nodeType":"YulFunctionCall","src":"3527:14:16"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3517:6:16"}]},{"nodeType":"YulAssignment","src":"3558:40:16","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3575:9:16"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3586:11:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3571:3:16"},"nodeType":"YulFunctionCall","src":"3571:27:16"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3558:9:16"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3387:1:16"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"3390:7:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3384:2:16"},"nodeType":"YulFunctionCall","src":"3384:14:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3399:28:16","statements":[{"nodeType":"YulAssignment","src":"3401:24:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3410:1:16"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3413:11:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3406:3:16"},"nodeType":"YulFunctionCall","src":"3406:19:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3401:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"3380:3:16","statements":[]},"src":"3376:236:16"},{"body":{"nodeType":"YulBlock","src":"3660:166:16","statements":[{"nodeType":"YulVariableDeclaration","src":"3678:43:16","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3705:3:16"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"3710:9:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3701:3:16"},"nodeType":"YulFunctionCall","src":"3701:19:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3695:5:16"},"nodeType":"YulFunctionCall","src":"3695:26:16"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"3682:9:16","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3745:6:16"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"3757:9:16"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3784:1:16","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"3787:6:16"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3780:3:16"},"nodeType":"YulFunctionCall","src":"3780:14:16"},{"kind":"number","nodeType":"YulLiteral","src":"3796:3:16","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3776:3:16"},"nodeType":"YulFunctionCall","src":"3776:24:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3806:1:16","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3802:3:16"},"nodeType":"YulFunctionCall","src":"3802:6:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3772:3:16"},"nodeType":"YulFunctionCall","src":"3772:37:16"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3768:3:16"},"nodeType":"YulFunctionCall","src":"3768:42:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3753:3:16"},"nodeType":"YulFunctionCall","src":"3753:58:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3738:6:16"},"nodeType":"YulFunctionCall","src":"3738:74:16"},"nodeType":"YulExpressionStatement","src":"3738:74:16"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"3631:7:16"},{"name":"newLen","nodeType":"YulIdentifier","src":"3640:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3628:2:16"},"nodeType":"YulFunctionCall","src":"3628:19:16"},"nodeType":"YulIf","src":"3625:201:16"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3846:4:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3860:1:16","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"3863:6:16"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3856:3:16"},"nodeType":"YulFunctionCall","src":"3856:14:16"},{"kind":"number","nodeType":"YulLiteral","src":"3872:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3852:3:16"},"nodeType":"YulFunctionCall","src":"3852:22:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3839:6:16"},"nodeType":"YulFunctionCall","src":"3839:36:16"},"nodeType":"YulExpressionStatement","src":"3839:36:16"}]},"nodeType":"YulCase","src":"3222:663:16","value":{"kind":"number","nodeType":"YulLiteral","src":"3227:1:16","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"3902:234:16","statements":[{"nodeType":"YulVariableDeclaration","src":"3916:14:16","value":{"kind":"number","nodeType":"YulLiteral","src":"3929:1:16","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3920:5:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"3965:67:16","statements":[{"nodeType":"YulAssignment","src":"3983:35:16","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4002:3:16"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4007:9:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3998:3:16"},"nodeType":"YulFunctionCall","src":"3998:19:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3992:5:16"},"nodeType":"YulFunctionCall","src":"3992:26:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3983:5:16"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"3946:6:16"},"nodeType":"YulIf","src":"3943:89:16"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4052:4:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4111:5:16"},{"name":"newLen","nodeType":"YulIdentifier","src":"4118:6:16"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"4058:52:16"},"nodeType":"YulFunctionCall","src":"4058:67:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4045:6:16"},"nodeType":"YulFunctionCall","src":"4045:81:16"},"nodeType":"YulExpressionStatement","src":"4045:81:16"}]},"nodeType":"YulCase","src":"3894:242:16","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"3202:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"3210:2:16","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3199:2:16"},"nodeType":"YulFunctionCall","src":"3199:14:16"},"nodeType":"YulSwitch","src":"3192:944:16"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"2871:4:16","type":""},{"name":"src","nodeType":"YulTypedName","src":"2877:3:16","type":""}],"src":"2790:1352:16"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        mstore(add(add(memPtr, _1), _4), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}","id":16,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162000a7d38038062000a7d833981016040819052620000349162000123565b818160036200004483826200021c565b5060046200005382826200021c565b5050505050620002e8565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200008657600080fd5b81516001600160401b0380821115620000a357620000a36200005e565b604051601f8301601f19908116603f01168101908282118183101715620000ce57620000ce6200005e565b81604052838152602092508683858801011115620000eb57600080fd5b600091505b838210156200010f5785820183015181830184015290820190620000f0565b600093810190920192909252949350505050565b600080604083850312156200013757600080fd5b82516001600160401b03808211156200014f57600080fd5b6200015d8683870162000074565b935060208501519150808211156200017457600080fd5b50620001838582860162000074565b9150509250929050565b600181811c90821680620001a257607f821691505b602082108103620001c357634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200021757600081815260208120601f850160051c81016020861015620001f25750805b601f850160051c820191505b818110156200021357828155600101620001fe565b5050505b505050565b81516001600160401b038111156200023857620002386200005e565b62000250816200024984546200018d565b84620001c9565b602080601f8311600181146200028857600084156200026f5750858301515b600019600386901b1c1916600185901b17855562000213565b600085815260208120601f198616915b82811015620002b95788860151825594840194600190910190840162000298565b5085821015620002d85787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61078580620002f86000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c806340c10f191161006657806340c10f191461011857806370a082311461012d57806395d89b4114610156578063a9059cbb1461015e578063dd62ed3e1461017157600080fd5b806306fdde03146100a3578063095ea7b3146100c157806318160ddd146100e457806323b872dd146100f6578063313ce56714610109575b600080fd5b6100ab6101aa565b6040516100b891906105cf565b60405180910390f35b6100d46100cf366004610639565b61023c565b60405190151581526020016100b8565b6002545b6040519081526020016100b8565b6100d4610104366004610663565b610256565b604051601281526020016100b8565b61012b610126366004610639565b61027a565b005b6100e861013b36600461069f565b6001600160a01b031660009081526020819052604090205490565b6100ab610288565b6100d461016c366004610639565b610297565b6100e861017f3660046106c1565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101b9906106f4565b80601f01602080910402602001604051908101604052809291908181526020018280546101e5906106f4565b80156102325780601f1061020757610100808354040283529160200191610232565b820191906000526020600020905b81548152906001019060200180831161021557829003601f168201915b5050505050905090565b60003361024a8185856102a5565b60019150505b92915050565b6000336102648582856102b7565b61026f85858561033b565b506001949350505050565b610284828261039a565b5050565b6060600480546101b9906106f4565b60003361024a81858561033b565b6102b283838360016103d0565b505050565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811015610335578181101561032657604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064015b60405180910390fd5b610335848484840360006103d0565b50505050565b6001600160a01b03831661036557604051634b637e8f60e11b81526000600482015260240161031d565b6001600160a01b03821661038f5760405163ec442f0560e01b81526000600482015260240161031d565b6102b28383836104a5565b6001600160a01b0382166103c45760405163ec442f0560e01b81526000600482015260240161031d565b610284600083836104a5565b6001600160a01b0384166103fa5760405163e602df0560e01b81526000600482015260240161031d565b6001600160a01b03831661042457604051634a1406b160e11b81526000600482015260240161031d565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561033557826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161049791815260200190565b60405180910390a350505050565b6001600160a01b0383166104d05780600260008282546104c5919061072e565b909155506105429050565b6001600160a01b038316600090815260208190526040902054818110156105235760405163391434e360e21b81526001600160a01b0385166004820152602481018290526044810183905260640161031d565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b03821661055e5760028054829003905561057d565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516105c291815260200190565b60405180910390a3505050565b600060208083528351808285015260005b818110156105fc578581018301518582016040015282016105e0565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461063457600080fd5b919050565b6000806040838503121561064c57600080fd5b6106558361061d565b946020939093013593505050565b60008060006060848603121561067857600080fd5b6106818461061d565b925061068f6020850161061d565b9150604084013590509250925092565b6000602082840312156106b157600080fd5b6106ba8261061d565b9392505050565b600080604083850312156106d457600080fd5b6106dd8361061d565b91506106eb6020840161061d565b90509250929050565b600181811c9082168061070857607f821691505b60208210810361072857634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561025057634e487b7160e01b600052601160045260246000fdfea264697066735822122013fd9a5497cd5a5c42cc2ee43e706308069c477c5281b90ef72b07602e945b2664736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xA7D CODESIZE SUB DUP1 PUSH3 0xA7D DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x123 JUMP JUMPDEST DUP2 DUP2 PUSH1 0x3 PUSH3 0x44 DUP4 DUP3 PUSH3 0x21C JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x53 DUP3 DUP3 PUSH3 0x21C JUMP JUMPDEST POP POP POP POP POP PUSH3 0x2E8 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0xA3 JUMPI PUSH3 0xA3 PUSH3 0x5E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0xCE JUMPI PUSH3 0xCE PUSH3 0x5E JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0xEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x10F JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0xF0 JUMP JUMPDEST PUSH1 0x0 SWAP4 DUP2 ADD SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x137 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x14F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x15D DUP7 DUP4 DUP8 ADD PUSH3 0x74 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x174 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x183 DUP6 DUP3 DUP7 ADD PUSH3 0x74 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x1A2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x1C3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x217 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x1F2 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x213 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1FE JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x238 JUMPI PUSH3 0x238 PUSH3 0x5E JUMP JUMPDEST PUSH3 0x250 DUP2 PUSH3 0x249 DUP5 SLOAD PUSH3 0x18D JUMP JUMPDEST DUP5 PUSH3 0x1C9 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x288 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x26F JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x213 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x2B9 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x298 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x2D8 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x785 DUP1 PUSH3 0x2F8 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40C10F19 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x171 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xC1 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xE4 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x109 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAB PUSH2 0x1AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0x5CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD4 PUSH2 0xCF CALLDATASIZE PUSH1 0x4 PUSH2 0x639 JUMP JUMPDEST PUSH2 0x23C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB8 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB8 JUMP JUMPDEST PUSH2 0xD4 PUSH2 0x104 CALLDATASIZE PUSH1 0x4 PUSH2 0x663 JUMP JUMPDEST PUSH2 0x256 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB8 JUMP JUMPDEST PUSH2 0x12B PUSH2 0x126 CALLDATASIZE PUSH1 0x4 PUSH2 0x639 JUMP JUMPDEST PUSH2 0x27A JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE8 PUSH2 0x13B CALLDATASIZE PUSH1 0x4 PUSH2 0x69F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xAB PUSH2 0x288 JUMP JUMPDEST PUSH2 0xD4 PUSH2 0x16C CALLDATASIZE PUSH1 0x4 PUSH2 0x639 JUMP JUMPDEST PUSH2 0x297 JUMP JUMPDEST PUSH2 0xE8 PUSH2 0x17F CALLDATASIZE PUSH1 0x4 PUSH2 0x6C1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1B9 SWAP1 PUSH2 0x6F4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1E5 SWAP1 PUSH2 0x6F4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x232 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x207 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x232 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x215 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x24A DUP2 DUP6 DUP6 PUSH2 0x2A5 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x264 DUP6 DUP3 DUP6 PUSH2 0x2B7 JUMP JUMPDEST PUSH2 0x26F DUP6 DUP6 DUP6 PUSH2 0x33B JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x284 DUP3 DUP3 PUSH2 0x39A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1B9 SWAP1 PUSH2 0x6F4 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x24A DUP2 DUP6 DUP6 PUSH2 0x33B JUMP JUMPDEST PUSH2 0x2B2 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x3D0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 LT ISZERO PUSH2 0x335 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x326 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x335 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x3D0 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x365 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x31D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x38F JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x31D JUMP JUMPDEST PUSH2 0x2B2 DUP4 DUP4 DUP4 PUSH2 0x4A5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3C4 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x31D JUMP JUMPDEST PUSH2 0x284 PUSH1 0x0 DUP4 DUP4 PUSH2 0x4A5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x3FA JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x31D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x424 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x31D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x335 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x497 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x4D0 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x4C5 SWAP2 SWAP1 PUSH2 0x72E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x542 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x523 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x31D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x55E JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x57D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x5C2 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x5FC JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x5E0 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x634 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x64C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x655 DUP4 PUSH2 0x61D JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x678 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x681 DUP5 PUSH2 0x61D JUMP JUMPDEST SWAP3 POP PUSH2 0x68F PUSH1 0x20 DUP6 ADD PUSH2 0x61D JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6BA DUP3 PUSH2 0x61D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6DD DUP4 PUSH2 0x61D JUMP JUMPDEST SWAP2 POP PUSH2 0x6EB PUSH1 0x20 DUP5 ADD PUSH2 0x61D JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x708 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x728 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x250 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT REVERT SWAP11 SLOAD SWAP8 0xCD GAS 0x5C TIMESTAMP 0xCC 0x2E 0xE4 RETURNDATACOPY PUSH17 0x6308069C477C5281B90EF72B07602E945B 0x26 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"115:201:15:-:0;;;149:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;209:4;215:6;1667:5:1;:13;209:4:15;1667:5:1;:13;:::i;:::-;-1:-1:-1;1690:7:1;:17;1700:7;1690;:17;:::i;:::-;;1601:113;;149:76:15;;115:201;;14:127:16;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:16;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:16;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:16:o;991:562::-;1090:6;1098;1151:2;1139:9;1130:7;1126:23;1122:32;1119:52;;;1167:1;1164;1157:12;1119:52;1194:16;;-1:-1:-1;;;;;1259:14:16;;;1256:34;;;1286:1;1283;1276:12;1256:34;1309:61;1362:7;1353:6;1342:9;1338:22;1309:61;:::i;:::-;1299:71;;1416:2;1405:9;1401:18;1395:25;1379:41;;1445:2;1435:8;1432:16;1429:36;;;1461:1;1458;1451:12;1429:36;;1484:63;1539:7;1528:8;1517:9;1513:24;1484:63;:::i;:::-;1474:73;;;991:562;;;;;:::o;1558:380::-;1637:1;1633:12;;;;1680;;;1701:61;;1755:4;1747:6;1743:17;1733:27;;1701:61;1808:2;1800:6;1797:14;1777:18;1774:38;1771:161;;1854:10;1849:3;1845:20;1842:1;1835:31;1889:4;1886:1;1879:15;1917:4;1914:1;1907:15;1771:161;;1558:380;;;:::o;2069:545::-;2171:2;2166:3;2163:11;2160:448;;;2207:1;2232:5;2228:2;2221:17;2277:4;2273:2;2263:19;2347:2;2335:10;2331:19;2328:1;2324:27;2318:4;2314:38;2383:4;2371:10;2368:20;2365:47;;;-1:-1:-1;2406:4:16;2365:47;2461:2;2456:3;2452:12;2449:1;2445:20;2439:4;2435:31;2425:41;;2516:82;2534:2;2527:5;2524:13;2516:82;;;2579:17;;;2560:1;2549:13;2516:82;;;2520:3;;;2160:448;2069:545;;;:::o;2790:1352::-;2910:10;;-1:-1:-1;;;;;2932:30:16;;2929:56;;;2965:18;;:::i;:::-;2994:97;3084:6;3044:38;3076:4;3070:11;3044:38;:::i;:::-;3038:4;2994:97;:::i;:::-;3146:4;;3210:2;3199:14;;3227:1;3222:663;;;;3929:1;3946:6;3943:89;;;-1:-1:-1;3998:19:16;;;3992:26;3943:89;-1:-1:-1;;2747:1:16;2743:11;;;2739:24;2735:29;2725:40;2771:1;2767:11;;;2722:57;4045:81;;3192:944;;3222:663;2016:1;2009:14;;;2053:4;2040:18;;-1:-1:-1;;3258:20:16;;;3376:236;3390:7;3387:1;3384:14;3376:236;;;3479:19;;;3473:26;3458:42;;3571:27;;;;3539:1;3527:14;;;;3406:19;;3376:236;;;3380:3;3640:6;3631:7;3628:19;3625:201;;;3701:19;;;3695:26;-1:-1:-1;;3784:1:16;3780:14;;;3796:3;3776:24;3772:37;3768:42;3753:58;3738:74;;3625:201;-1:-1:-1;;;;;3872:1:16;3856:14;;;3852:22;3839:36;;-1:-1:-1;2790:1352:16:o;:::-;115:201:15;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_approve_542":{"entryPoint":677,"id":542,"parameterSlots":3,"returnSlots":0},"@_approve_602":{"entryPoint":976,"id":602,"parameterSlots":4,"returnSlots":0},"@_mint_491":{"entryPoint":922,"id":491,"parameterSlots":2,"returnSlots":0},"@_msgSender_767":{"entryPoint":null,"id":767,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_650":{"entryPoint":695,"id":650,"parameterSlots":3,"returnSlots":0},"@_transfer_381":{"entryPoint":827,"id":381,"parameterSlots":3,"returnSlots":0},"@_update_458":{"entryPoint":1189,"id":458,"parameterSlots":3,"returnSlots":0},"@allowance_278":{"entryPoint":null,"id":278,"parameterSlots":2,"returnSlots":1},"@approve_302":{"entryPoint":572,"id":302,"parameterSlots":2,"returnSlots":1},"@balanceOf_237":{"entryPoint":null,"id":237,"parameterSlots":1,"returnSlots":1},"@decimals_215":{"entryPoint":null,"id":215,"parameterSlots":0,"returnSlots":1},"@mint_6752":{"entryPoint":634,"id":6752,"parameterSlots":2,"returnSlots":0},"@name_197":{"entryPoint":426,"id":197,"parameterSlots":0,"returnSlots":1},"@symbol_206":{"entryPoint":648,"id":206,"parameterSlots":0,"returnSlots":1},"@totalSupply_224":{"entryPoint":null,"id":224,"parameterSlots":0,"returnSlots":1},"@transferFrom_334":{"entryPoint":598,"id":334,"parameterSlots":3,"returnSlots":1},"@transfer_261":{"entryPoint":663,"id":261,"parameterSlots":2,"returnSlots":1},"abi_decode_address":{"entryPoint":1565,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":1695,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":1729,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":1635,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":1593,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1487,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":1838,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":1780,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:3523:16","statements":[{"nodeType":"YulBlock","src":"6:3:16","statements":[]},{"body":{"nodeType":"YulBlock","src":"135:427:16","statements":[{"nodeType":"YulVariableDeclaration","src":"145:12:16","value":{"kind":"number","nodeType":"YulLiteral","src":"155:2:16","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"149:2:16","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"173:9:16"},{"name":"_1","nodeType":"YulIdentifier","src":"184:2:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"166:6:16"},"nodeType":"YulFunctionCall","src":"166:21:16"},"nodeType":"YulExpressionStatement","src":"166:21:16"},{"nodeType":"YulVariableDeclaration","src":"196:27:16","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"216:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"210:5:16"},"nodeType":"YulFunctionCall","src":"210:13:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"200:6:16","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"243:9:16"},{"name":"_1","nodeType":"YulIdentifier","src":"254:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"239:3:16"},"nodeType":"YulFunctionCall","src":"239:18:16"},{"name":"length","nodeType":"YulIdentifier","src":"259:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"232:6:16"},"nodeType":"YulFunctionCall","src":"232:34:16"},"nodeType":"YulExpressionStatement","src":"232:34:16"},{"nodeType":"YulVariableDeclaration","src":"275:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"284:1:16","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"279:1:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"344:90:16","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"373:9:16"},{"name":"i","nodeType":"YulIdentifier","src":"384:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"369:3:16"},"nodeType":"YulFunctionCall","src":"369:17:16"},{"kind":"number","nodeType":"YulLiteral","src":"388:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"365:3:16"},"nodeType":"YulFunctionCall","src":"365:26:16"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"407:6:16"},{"name":"i","nodeType":"YulIdentifier","src":"415:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"403:3:16"},"nodeType":"YulFunctionCall","src":"403:14:16"},{"name":"_1","nodeType":"YulIdentifier","src":"419:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"399:3:16"},"nodeType":"YulFunctionCall","src":"399:23:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"393:5:16"},"nodeType":"YulFunctionCall","src":"393:30:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"358:6:16"},"nodeType":"YulFunctionCall","src":"358:66:16"},"nodeType":"YulExpressionStatement","src":"358:66:16"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"305:1:16"},{"name":"length","nodeType":"YulIdentifier","src":"308:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"302:2:16"},"nodeType":"YulFunctionCall","src":"302:13:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"316:19:16","statements":[{"nodeType":"YulAssignment","src":"318:15:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"327:1:16"},{"name":"_1","nodeType":"YulIdentifier","src":"330:2:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"323:3:16"},"nodeType":"YulFunctionCall","src":"323:10:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"318:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"298:3:16","statements":[]},"src":"294:140:16"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"458:9:16"},{"name":"length","nodeType":"YulIdentifier","src":"469:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"454:3:16"},"nodeType":"YulFunctionCall","src":"454:22:16"},{"kind":"number","nodeType":"YulLiteral","src":"478:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"450:3:16"},"nodeType":"YulFunctionCall","src":"450:31:16"},{"kind":"number","nodeType":"YulLiteral","src":"483:1:16","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"443:6:16"},"nodeType":"YulFunctionCall","src":"443:42:16"},"nodeType":"YulExpressionStatement","src":"443:42:16"},{"nodeType":"YulAssignment","src":"494:62:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"510:9:16"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"529:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"537:2:16","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"525:3:16"},"nodeType":"YulFunctionCall","src":"525:15:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"546:2:16","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"542:3:16"},"nodeType":"YulFunctionCall","src":"542:7:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"521:3:16"},"nodeType":"YulFunctionCall","src":"521:29:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"506:3:16"},"nodeType":"YulFunctionCall","src":"506:45:16"},{"kind":"number","nodeType":"YulLiteral","src":"553:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"502:3:16"},"nodeType":"YulFunctionCall","src":"502:54:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"494:4:16"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"104:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"115:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"126:4:16","type":""}],"src":"14:548:16"},{"body":{"nodeType":"YulBlock","src":"616:124:16","statements":[{"nodeType":"YulAssignment","src":"626:29:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"648:6:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"635:12:16"},"nodeType":"YulFunctionCall","src":"635:20:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"626:5:16"}]},{"body":{"nodeType":"YulBlock","src":"718:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"727:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"730:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"720:6:16"},"nodeType":"YulFunctionCall","src":"720:12:16"},"nodeType":"YulExpressionStatement","src":"720:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"677:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"688:5:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"703:3:16","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"708:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"699:3:16"},"nodeType":"YulFunctionCall","src":"699:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"712:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"695:3:16"},"nodeType":"YulFunctionCall","src":"695:19:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"684:3:16"},"nodeType":"YulFunctionCall","src":"684:31:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"674:2:16"},"nodeType":"YulFunctionCall","src":"674:42:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"667:6:16"},"nodeType":"YulFunctionCall","src":"667:50:16"},"nodeType":"YulIf","src":"664:70:16"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"595:6:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"606:5:16","type":""}],"src":"567:173:16"},{"body":{"nodeType":"YulBlock","src":"832:167:16","statements":[{"body":{"nodeType":"YulBlock","src":"878:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"887:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"890:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"880:6:16"},"nodeType":"YulFunctionCall","src":"880:12:16"},"nodeType":"YulExpressionStatement","src":"880:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"853:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"862:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"849:3:16"},"nodeType":"YulFunctionCall","src":"849:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"874:2:16","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"845:3:16"},"nodeType":"YulFunctionCall","src":"845:32:16"},"nodeType":"YulIf","src":"842:52:16"},{"nodeType":"YulAssignment","src":"903:39:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"932:9:16"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"913:18:16"},"nodeType":"YulFunctionCall","src":"913:29:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"903:6:16"}]},{"nodeType":"YulAssignment","src":"951:42:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"978:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"989:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"974:3:16"},"nodeType":"YulFunctionCall","src":"974:18:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"961:12:16"},"nodeType":"YulFunctionCall","src":"961:32:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"951:6:16"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"790:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"801:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"813:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"821:6:16","type":""}],"src":"745:254:16"},{"body":{"nodeType":"YulBlock","src":"1099:92:16","statements":[{"nodeType":"YulAssignment","src":"1109:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1121:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1132:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1117:3:16"},"nodeType":"YulFunctionCall","src":"1117:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1109:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1151:9:16"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1176:6:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1169:6:16"},"nodeType":"YulFunctionCall","src":"1169:14:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1162:6:16"},"nodeType":"YulFunctionCall","src":"1162:22:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1144:6:16"},"nodeType":"YulFunctionCall","src":"1144:41:16"},"nodeType":"YulExpressionStatement","src":"1144:41:16"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1068:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1079:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1090:4:16","type":""}],"src":"1004:187:16"},{"body":{"nodeType":"YulBlock","src":"1297:76:16","statements":[{"nodeType":"YulAssignment","src":"1307:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1319:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1330:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1315:3:16"},"nodeType":"YulFunctionCall","src":"1315:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1307:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1349:9:16"},{"name":"value0","nodeType":"YulIdentifier","src":"1360:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1342:6:16"},"nodeType":"YulFunctionCall","src":"1342:25:16"},"nodeType":"YulExpressionStatement","src":"1342:25:16"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1266:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1277:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1288:4:16","type":""}],"src":"1196:177:16"},{"body":{"nodeType":"YulBlock","src":"1482:224:16","statements":[{"body":{"nodeType":"YulBlock","src":"1528:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1537:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1540:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1530:6:16"},"nodeType":"YulFunctionCall","src":"1530:12:16"},"nodeType":"YulExpressionStatement","src":"1530:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1503:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"1512:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1499:3:16"},"nodeType":"YulFunctionCall","src":"1499:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"1524:2:16","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1495:3:16"},"nodeType":"YulFunctionCall","src":"1495:32:16"},"nodeType":"YulIf","src":"1492:52:16"},{"nodeType":"YulAssignment","src":"1553:39:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1582:9:16"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1563:18:16"},"nodeType":"YulFunctionCall","src":"1563:29:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1553:6:16"}]},{"nodeType":"YulAssignment","src":"1601:48:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1634:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1645:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1630:3:16"},"nodeType":"YulFunctionCall","src":"1630:18:16"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1611:18:16"},"nodeType":"YulFunctionCall","src":"1611:38:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1601:6:16"}]},{"nodeType":"YulAssignment","src":"1658:42:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1685:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1696:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1681:3:16"},"nodeType":"YulFunctionCall","src":"1681:18:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1668:12:16"},"nodeType":"YulFunctionCall","src":"1668:32:16"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1658:6:16"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1432:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1443:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1455:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1463:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1471:6:16","type":""}],"src":"1378:328:16"},{"body":{"nodeType":"YulBlock","src":"1808:87:16","statements":[{"nodeType":"YulAssignment","src":"1818:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1830:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1841:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1826:3:16"},"nodeType":"YulFunctionCall","src":"1826:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1818:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1860:9:16"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1875:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"1883:4:16","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1871:3:16"},"nodeType":"YulFunctionCall","src":"1871:17:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1853:6:16"},"nodeType":"YulFunctionCall","src":"1853:36:16"},"nodeType":"YulExpressionStatement","src":"1853:36:16"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1777:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1788:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1799:4:16","type":""}],"src":"1711:184:16"},{"body":{"nodeType":"YulBlock","src":"1970:116:16","statements":[{"body":{"nodeType":"YulBlock","src":"2016:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2025:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2028:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2018:6:16"},"nodeType":"YulFunctionCall","src":"2018:12:16"},"nodeType":"YulExpressionStatement","src":"2018:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1991:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"2000:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1987:3:16"},"nodeType":"YulFunctionCall","src":"1987:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"2012:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1983:3:16"},"nodeType":"YulFunctionCall","src":"1983:32:16"},"nodeType":"YulIf","src":"1980:52:16"},{"nodeType":"YulAssignment","src":"2041:39:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2070:9:16"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2051:18:16"},"nodeType":"YulFunctionCall","src":"2051:29:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2041:6:16"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1936:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1947:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1959:6:16","type":""}],"src":"1900:186:16"},{"body":{"nodeType":"YulBlock","src":"2178:173:16","statements":[{"body":{"nodeType":"YulBlock","src":"2224:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2233:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2236:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2226:6:16"},"nodeType":"YulFunctionCall","src":"2226:12:16"},"nodeType":"YulExpressionStatement","src":"2226:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2199:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"2208:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2195:3:16"},"nodeType":"YulFunctionCall","src":"2195:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"2220:2:16","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2191:3:16"},"nodeType":"YulFunctionCall","src":"2191:32:16"},"nodeType":"YulIf","src":"2188:52:16"},{"nodeType":"YulAssignment","src":"2249:39:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2278:9:16"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2259:18:16"},"nodeType":"YulFunctionCall","src":"2259:29:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2249:6:16"}]},{"nodeType":"YulAssignment","src":"2297:48:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2330:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2341:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2326:3:16"},"nodeType":"YulFunctionCall","src":"2326:18:16"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2307:18:16"},"nodeType":"YulFunctionCall","src":"2307:38:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2297:6:16"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2136:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2147:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2159:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2167:6:16","type":""}],"src":"2091:260:16"},{"body":{"nodeType":"YulBlock","src":"2411:325:16","statements":[{"nodeType":"YulAssignment","src":"2421:22:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2435:1:16","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"2438:4:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2431:3:16"},"nodeType":"YulFunctionCall","src":"2431:12:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2421:6:16"}]},{"nodeType":"YulVariableDeclaration","src":"2452:38:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2482:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"2488:1:16","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2478:3:16"},"nodeType":"YulFunctionCall","src":"2478:12:16"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"2456:18:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"2529:31:16","statements":[{"nodeType":"YulAssignment","src":"2531:27:16","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2545:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"2553:4:16","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2541:3:16"},"nodeType":"YulFunctionCall","src":"2541:17:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2531:6:16"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2509:18:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2502:6:16"},"nodeType":"YulFunctionCall","src":"2502:26:16"},"nodeType":"YulIf","src":"2499:61:16"},{"body":{"nodeType":"YulBlock","src":"2619:111:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2640:1:16","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2647:3:16","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2652:10:16","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2643:3:16"},"nodeType":"YulFunctionCall","src":"2643:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2633:6:16"},"nodeType":"YulFunctionCall","src":"2633:31:16"},"nodeType":"YulExpressionStatement","src":"2633:31:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2684:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2687:4:16","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2677:6:16"},"nodeType":"YulFunctionCall","src":"2677:15:16"},"nodeType":"YulExpressionStatement","src":"2677:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2712:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2715:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2705:6:16"},"nodeType":"YulFunctionCall","src":"2705:15:16"},"nodeType":"YulExpressionStatement","src":"2705:15:16"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2575:18:16"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2598:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"2606:2:16","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2595:2:16"},"nodeType":"YulFunctionCall","src":"2595:14:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2572:2:16"},"nodeType":"YulFunctionCall","src":"2572:38:16"},"nodeType":"YulIf","src":"2569:161:16"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2391:4:16","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"2400:6:16","type":""}],"src":"2356:380:16"},{"body":{"nodeType":"YulBlock","src":"2898:188:16","statements":[{"nodeType":"YulAssignment","src":"2908:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2920:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2931:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2916:3:16"},"nodeType":"YulFunctionCall","src":"2916:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2908:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2950:9:16"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2965:6:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2981:3:16","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2986:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2977:3:16"},"nodeType":"YulFunctionCall","src":"2977:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"2990:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2973:3:16"},"nodeType":"YulFunctionCall","src":"2973:19:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2961:3:16"},"nodeType":"YulFunctionCall","src":"2961:32:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2943:6:16"},"nodeType":"YulFunctionCall","src":"2943:51:16"},"nodeType":"YulExpressionStatement","src":"2943:51:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3014:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3025:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3010:3:16"},"nodeType":"YulFunctionCall","src":"3010:18:16"},{"name":"value1","nodeType":"YulIdentifier","src":"3030:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3003:6:16"},"nodeType":"YulFunctionCall","src":"3003:34:16"},"nodeType":"YulExpressionStatement","src":"3003:34:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3057:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3068:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3053:3:16"},"nodeType":"YulFunctionCall","src":"3053:18:16"},{"name":"value2","nodeType":"YulIdentifier","src":"3073:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3046:6:16"},"nodeType":"YulFunctionCall","src":"3046:34:16"},"nodeType":"YulExpressionStatement","src":"3046:34:16"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2851:9:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2862:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2870:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2878:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2889:4:16","type":""}],"src":"2741:345:16"},{"body":{"nodeType":"YulBlock","src":"3192:102:16","statements":[{"nodeType":"YulAssignment","src":"3202:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3214:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3225:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3210:3:16"},"nodeType":"YulFunctionCall","src":"3210:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3202:4:16"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3244:9:16"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3259:6:16"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3275:3:16","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"3280:1:16","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3271:3:16"},"nodeType":"YulFunctionCall","src":"3271:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"3284:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3267:3:16"},"nodeType":"YulFunctionCall","src":"3267:19:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3255:3:16"},"nodeType":"YulFunctionCall","src":"3255:32:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3237:6:16"},"nodeType":"YulFunctionCall","src":"3237:51:16"},"nodeType":"YulExpressionStatement","src":"3237:51:16"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3161:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3172:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3183:4:16","type":""}],"src":"3091:203:16"},{"body":{"nodeType":"YulBlock","src":"3347:174:16","statements":[{"nodeType":"YulAssignment","src":"3357:16:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3368:1:16"},{"name":"y","nodeType":"YulIdentifier","src":"3371:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3364:3:16"},"nodeType":"YulFunctionCall","src":"3364:9:16"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"3357:3:16"}]},{"body":{"nodeType":"YulBlock","src":"3404:111:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3425:1:16","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3432:3:16","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3437:10:16","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3428:3:16"},"nodeType":"YulFunctionCall","src":"3428:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3418:6:16"},"nodeType":"YulFunctionCall","src":"3418:31:16"},"nodeType":"YulExpressionStatement","src":"3418:31:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3469:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3472:4:16","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3462:6:16"},"nodeType":"YulFunctionCall","src":"3462:15:16"},"nodeType":"YulExpressionStatement","src":"3462:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3497:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3500:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3490:6:16"},"nodeType":"YulFunctionCall","src":"3490:15:16"},"nodeType":"YulExpressionStatement","src":"3490:15:16"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3388:1:16"},{"name":"sum","nodeType":"YulIdentifier","src":"3391:3:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3385:2:16"},"nodeType":"YulFunctionCall","src":"3385:10:16"},"nodeType":"YulIf","src":"3382:133:16"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"3330:1:16","type":""},{"name":"y","nodeType":"YulTypedName","src":"3333:1:16","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"3339:3:16","type":""}],"src":"3299:222:16"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n}","id":16,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061009e5760003560e01c806340c10f191161006657806340c10f191461011857806370a082311461012d57806395d89b4114610156578063a9059cbb1461015e578063dd62ed3e1461017157600080fd5b806306fdde03146100a3578063095ea7b3146100c157806318160ddd146100e457806323b872dd146100f6578063313ce56714610109575b600080fd5b6100ab6101aa565b6040516100b891906105cf565b60405180910390f35b6100d46100cf366004610639565b61023c565b60405190151581526020016100b8565b6002545b6040519081526020016100b8565b6100d4610104366004610663565b610256565b604051601281526020016100b8565b61012b610126366004610639565b61027a565b005b6100e861013b36600461069f565b6001600160a01b031660009081526020819052604090205490565b6100ab610288565b6100d461016c366004610639565b610297565b6100e861017f3660046106c1565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101b9906106f4565b80601f01602080910402602001604051908101604052809291908181526020018280546101e5906106f4565b80156102325780601f1061020757610100808354040283529160200191610232565b820191906000526020600020905b81548152906001019060200180831161021557829003601f168201915b5050505050905090565b60003361024a8185856102a5565b60019150505b92915050565b6000336102648582856102b7565b61026f85858561033b565b506001949350505050565b610284828261039a565b5050565b6060600480546101b9906106f4565b60003361024a81858561033b565b6102b283838360016103d0565b505050565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811015610335578181101561032657604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064015b60405180910390fd5b610335848484840360006103d0565b50505050565b6001600160a01b03831661036557604051634b637e8f60e11b81526000600482015260240161031d565b6001600160a01b03821661038f5760405163ec442f0560e01b81526000600482015260240161031d565b6102b28383836104a5565b6001600160a01b0382166103c45760405163ec442f0560e01b81526000600482015260240161031d565b610284600083836104a5565b6001600160a01b0384166103fa5760405163e602df0560e01b81526000600482015260240161031d565b6001600160a01b03831661042457604051634a1406b160e11b81526000600482015260240161031d565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561033557826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161049791815260200190565b60405180910390a350505050565b6001600160a01b0383166104d05780600260008282546104c5919061072e565b909155506105429050565b6001600160a01b038316600090815260208190526040902054818110156105235760405163391434e360e21b81526001600160a01b0385166004820152602481018290526044810183905260640161031d565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b03821661055e5760028054829003905561057d565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516105c291815260200190565b60405180910390a3505050565b600060208083528351808285015260005b818110156105fc578581018301518582016040015282016105e0565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461063457600080fd5b919050565b6000806040838503121561064c57600080fd5b6106558361061d565b946020939093013593505050565b60008060006060848603121561067857600080fd5b6106818461061d565b925061068f6020850161061d565b9150604084013590509250925092565b6000602082840312156106b157600080fd5b6106ba8261061d565b9392505050565b600080604083850312156106d457600080fd5b6106dd8361061d565b91506106eb6020840161061d565b90509250929050565b600181811c9082168061070857607f821691505b60208210810361072857634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561025057634e487b7160e01b600052601160045260246000fdfea264697066735822122013fd9a5497cd5a5c42cc2ee43e706308069c477c5281b90ef72b07602e945b2664736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40C10F19 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x171 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xC1 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xE4 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x109 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAB PUSH2 0x1AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0x5CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD4 PUSH2 0xCF CALLDATASIZE PUSH1 0x4 PUSH2 0x639 JUMP JUMPDEST PUSH2 0x23C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB8 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB8 JUMP JUMPDEST PUSH2 0xD4 PUSH2 0x104 CALLDATASIZE PUSH1 0x4 PUSH2 0x663 JUMP JUMPDEST PUSH2 0x256 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB8 JUMP JUMPDEST PUSH2 0x12B PUSH2 0x126 CALLDATASIZE PUSH1 0x4 PUSH2 0x639 JUMP JUMPDEST PUSH2 0x27A JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE8 PUSH2 0x13B CALLDATASIZE PUSH1 0x4 PUSH2 0x69F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xAB PUSH2 0x288 JUMP JUMPDEST PUSH2 0xD4 PUSH2 0x16C CALLDATASIZE PUSH1 0x4 PUSH2 0x639 JUMP JUMPDEST PUSH2 0x297 JUMP JUMPDEST PUSH2 0xE8 PUSH2 0x17F CALLDATASIZE PUSH1 0x4 PUSH2 0x6C1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1B9 SWAP1 PUSH2 0x6F4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1E5 SWAP1 PUSH2 0x6F4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x232 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x207 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x232 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x215 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x24A DUP2 DUP6 DUP6 PUSH2 0x2A5 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x264 DUP6 DUP3 DUP6 PUSH2 0x2B7 JUMP JUMPDEST PUSH2 0x26F DUP6 DUP6 DUP6 PUSH2 0x33B JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x284 DUP3 DUP3 PUSH2 0x39A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1B9 SWAP1 PUSH2 0x6F4 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x24A DUP2 DUP6 DUP6 PUSH2 0x33B JUMP JUMPDEST PUSH2 0x2B2 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x3D0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 LT ISZERO PUSH2 0x335 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x326 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x335 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x3D0 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x365 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x31D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x38F JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x31D JUMP JUMPDEST PUSH2 0x2B2 DUP4 DUP4 DUP4 PUSH2 0x4A5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3C4 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x31D JUMP JUMPDEST PUSH2 0x284 PUSH1 0x0 DUP4 DUP4 PUSH2 0x4A5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x3FA JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x31D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x424 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x31D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x335 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x497 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x4D0 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x4C5 SWAP2 SWAP1 PUSH2 0x72E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x542 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x523 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x31D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x55E JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x57D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x5C2 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x5FC JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x5E0 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x634 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x64C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x655 DUP4 PUSH2 0x61D JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x678 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x681 DUP5 PUSH2 0x61D JUMP JUMPDEST SWAP3 POP PUSH2 0x68F PUSH1 0x20 DUP6 ADD PUSH2 0x61D JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6BA DUP3 PUSH2 0x61D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6DD DUP4 PUSH2 0x61D JUMP JUMPDEST SWAP2 POP PUSH2 0x6EB PUSH1 0x20 DUP5 ADD PUSH2 0x61D JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x708 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x728 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x250 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT REVERT SWAP11 SLOAD SWAP8 0xCD GAS 0x5C TIMESTAMP 0xCC 0x2E 0xE4 RETURNDATACOPY PUSH17 0x6308069C477C5281B90EF72B07602E945B 0x26 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"115:201:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:16;;1162:22;1144:41;;1132:2;1117:18;3998:186:1;1004:187:16;2849:97:1;2927:12;;2849:97;;;1342:25:16;;;1330:2;1315:18;2849:97:1;1196:177:16;4776:244:1;;;;;;:::i;:::-;;:::i;2707:82::-;;;2780:2;1853:36:16;;1841:2;1826:18;2707:82:1;1711:184:16;231:83:15;;;;;;:::i;:::-;;:::i;:::-;;3004:116:1;;;;;;:::i;:::-;-1:-1:-1;;;;;3095:18:1;3069:7;3095:18;;;;;;;;;;;;3004:116;1981:93;;;:::i;3315:178::-;;;;;;:::i;:::-;;:::i;3551:140::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3657:18:1;;;3631:7;3657:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3551:140;1779:89;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;735:10:4;4125:31:1;735:10:4;4141:7:1;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;;:::o;4776:244::-;4863:4;735:10:4;4919:37:1;4935:4;735:10:4;4950:5:1;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;-1:-1:-1;5009:4:1;;4776:244;-1:-1:-1;;;;4776:244:1:o;231:83:15:-;290:17;296:2;300:6;290:5;:17::i;:::-;231:83;;:::o;1981:93:1:-;2028:13;2060:7;2053:14;;;;;:::i;3315:178::-;3384:4;735:10:4;3438:27:1;735:10:4;3455:2:1;3459:5;3438:9;:27::i;8726:128::-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;10415:476::-;-1:-1:-1;;;;;3657:18:1;;;10514:24;3657:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10580:36:1;;10576:309;;;10655:5;10636:16;:24;10632:130;;;10687:60;;-1:-1:-1;;;10687:60:1;;-1:-1:-1;;;;;2961:32:16;;10687:60:1;;;2943:51:16;3010:18;;;3003:34;;;3053:18;;;3046:34;;;2916:18;;10687:60:1;;;;;;;;10632:130;10803:57;10812:5;10819:7;10847:5;10828:16;:24;10854:5;10803:8;:57::i;:::-;10504:387;10415:476;;;:::o;5393:300::-;-1:-1:-1;;;;;5476:18:1;;5472:86;;5517:30;;-1:-1:-1;;;5517:30:1;;5544:1;5517:30;;;3237:51:16;3210:18;;5517:30:1;3091:203:16;5472:86:1;-1:-1:-1;;;;;5571:16:1;;5567:86;;5610:32;;-1:-1:-1;;;5610:32:1;;5639:1;5610:32;;;3237:51:16;3210:18;;5610:32:1;3091:203:16;5567:86:1;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;7458:208::-;-1:-1:-1;;;;;7528:21:1;;7524:91;;7572:32;;-1:-1:-1;;;7572:32:1;;7601:1;7572:32;;;3237:51:16;3210:18;;7572:32:1;3091:203:16;7524:91:1;7624:35;7640:1;7644:7;7653:5;7624:7;:35::i;9701:432::-;-1:-1:-1;;;;;9813:19:1;;9809:89;;9855:32;;-1:-1:-1;;;9855:32:1;;9884:1;9855:32;;;3237:51:16;3210:18;;9855:32:1;3091:203:16;9809:89:1;-1:-1:-1;;;;;9911:21:1;;9907:90;;9955:31;;-1:-1:-1;;;9955:31:1;;9983:1;9955:31;;;3237:51:16;3210:18;;9955:31:1;3091:203:16;9907:90:1;-1:-1:-1;;;;;10006:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10051:76;;;;10101:7;-1:-1:-1;;;;;10085:31:1;10094:5;-1:-1:-1;;;;;10085:31:1;;10110:5;10085:31;;;;1342:25:16;;1330:2;1315:18;;1196:177;10085:31:1;;;;;;;;9701:432;;;;:::o;6008:1107::-;-1:-1:-1;;;;;6097:18:1;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6093:540:1;;-1:-1:-1;6093:540:1;;-1:-1:-1;;;;;6307:15:1;;6285:19;6307:15;;;;;;;;;;;6340:19;;;6336:115;;;6386:50;;-1:-1:-1;;;6386:50:1;;-1:-1:-1;;;;;2961:32:16;;6386:50:1;;;2943:51:16;3010:18;;;3003:34;;;3053:18;;;3046:34;;;2916:18;;6386:50:1;2741:345:16;6336:115:1;-1:-1:-1;;;;;6571:15:1;;:9;:15;;;;;;;;;;6589:19;;;;6571:37;;6093:540;-1:-1:-1;;;;;6647:16:1;;6643:425;;6810:12;:21;;;;;;;6643:425;;;-1:-1:-1;;;;;7021:13:1;;:9;:13;;;;;;;;;;:22;;;;;;6643:425;7098:2;-1:-1:-1;;;;;7083:25:1;7092:4;-1:-1:-1;;;;;7083:25:1;;7102:5;7083:25;;;;1342::16;;1330:2;1315:18;;1196:177;7083:25:1;;;;;;;;6008:1107;;;:::o;14:548:16:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:16;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:16:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:186::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;2051:29;2070:9;2051:29;:::i;:::-;2041:39;1900:186;-1:-1:-1;;;1900:186:16:o;2091:260::-;2159:6;2167;2220:2;2208:9;2199:7;2195:23;2191:32;2188:52;;;2236:1;2233;2226:12;2188:52;2259:29;2278:9;2259:29;:::i;:::-;2249:39;;2307:38;2341:2;2330:9;2326:18;2307:38;:::i;:::-;2297:48;;2091:260;;;;;:::o;2356:380::-;2435:1;2431:12;;;;2478;;;2499:61;;2553:4;2545:6;2541:17;2531:27;;2499:61;2606:2;2598:6;2595:14;2575:18;2572:38;2569:161;;2652:10;2647:3;2643:20;2640:1;2633:31;2687:4;2684:1;2677:15;2715:4;2712:1;2705:15;2569:161;;2356:380;;;:::o;3299:222::-;3364:9;;;3385:10;;;3382:133;;;3437:10;3432:3;3428:20;3425:1;3418:31;3472:4;3469:1;3462:15;3500:4;3497:1;3490:15"},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","mint(address,uint256)":"40c10f19","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TestToken.sol\":\"TestToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/TestToken.sol\":{\"keccak256\":\"0xc589b8d1426327afcc8c54a6bdce8a1c4b8525c07e4e372236dfeba9399c46d0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1e070ebb7607a4d2d74f156185b51a2d8e07cddc93712526e495d7719a70e73\",\"dweb:/ipfs/QmYKze2WgAEezGRC78uqL6f6BT66HrVymxgvjzCoE15hXn\"]}},\"version\":1}"}}}}}